---
http_interactions:
- request:
    method: get
    uri: https://viuly.io/video/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML,
        like Gecko) Chrome/39.0.2171.71 Safari/537.36
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 404
      message: Not Found
    headers:
      Server:
      - nginx
      Content-Type:
      - text/html; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Cache-Control:
      - no-cache
      Date:
      - Wed, 20 Feb 2019 22:27:55 GMT
      Strict-Transport-Security:
      - max-age=31536000
      Set-Cookie:
      - SERVERID=j4b1904esdfsdzggasdq734dlkdbbw01; path=/
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 20 Feb 2019 22:27:51 GMT
- request:
    method: get
    uri: https://viuly.io/video/video-of-the-company-bizzilion
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML,
        like Gecko) Chrome/39.0.2171.71 Safari/537.36
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 404
      message: Not Found
    headers:
      Server:
      - nginx
      Content-Type:
      - text/html; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Cache-Control:
      - no-cache
      X-Frame-Options:
      - SAMEORIGIN
      Date:
      - Wed, 20 Feb 2019 22:29:48 GMT
      Set-Cookie:
      - F&dvUqck(Casd*K)_aidH-A-1-9C&*#KknhcEcsRs=eyJpdiI6Iks3cTZSaHNjOG5xTnJicEZOTUNSbkE9PSIsInZhbHVlIjoiQUNWMlV1TzNOXC94WUV3c2lJcFljN1RGYUxpZ014ejNKZjF0QjZCVjh6cDBYeWlWMUYyRjJPaDUxQWZEaG10dXdGMXFpWDRZZkNSUlp4ZGFKZHJXbTZBPT0iLCJtYWMiOiJlNjY5MjkxYjA1MGVkODM0ZWQ2NTRmOGRjOGJjMGI0MTg3YjE0NTY1ZTUxNTZhNTM2NWM0ODE0YjcwODZiZTQ1In0%3D;
        expires=Thu, 21-Feb-2019 01:29:48 GMT; Max-Age=10800; path=/; secure; HttpOnly
      - SERVERID=w45e092cs1234sdfkdj751g2weqefe00; path=/
      - as09dja09jdoiaoisd=eyJpdiI6Ikc3NTV3cnlzMU5VSkE5K1JVS0pYRlE9PSIsInZhbHVlIjoiY25LNldVRndlOXVOYzRtMU1RVDRmQnd6U1BBdXc1RlRVNE9SalFySDkraXBjY0pOUjZBNWFuWDFIb1lzZ1FxeCIsIm1hYyI6IjhmNGY4ZGZjOWRmZWE2YThkMDRmODM4OGJlYmE4M2Q1MTg2NGViMGQxYjRlOWE0Njc3YmRkNjk2YWFjZmQxMmMifQ%3D%3D;
        path=/; secure; HttpOnly
      - lang=eyJpdiI6ImxDZWl0QXRIVHJIT3FGRGQrcDFnd2c9PSIsInZhbHVlIjoiT3NHcCtZbzRicFNkMU5rclI0ZTcyQT09IiwibWFjIjoiNTI2YzlkNjkxZmZkZWZkOGZjMWE5YjIwOWRmOWM3MjU4MWUzY2Y3MmU5ZGQ3OWM0N2NkYjY4YzVkNDAyNjE5YSJ9;
        expires=Thu, 20-Feb-2020 22:29:48 GMT; Max-Age=31536000; path=/; secure; HttpOnly
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 20 Feb 2019 22:29:44 GMT
- request:
    method: get
    uri: https://viuly.io/video/video-of-the-company-bizzilion.-start-making-money-on-television--online-broadcasts-with-bizzilion-2138479
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML,
        like Gecko) Chrome/39.0.2171.71 Safari/537.36
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Content-Type:
      - text/html; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      Cache-Control:
      - no-cache
      X-Frame-Options:
      - SAMEORIGIN
      Date:
      - Wed, 20 Feb 2019 22:33:01 GMT
      Set-Cookie:
      - F&dvUqck(Casd*K)_aidH-A-1-9C&*#KknhcEcsRs=eyJpdiI6IkJNNWhNbWQzS0dKbnFlWjlCNHpvSUE9PSIsInZhbHVlIjoidEtVZ1FneFh4WVUxZnZZUG9cLzBkeldcL05PV1BsVlhiU09OUVhFbjZ3RWFTQWVKbjJDaStib0JheVFoN2c1c2YzT2dwWStZRUxoc1JlMnRCTUpaV0NTUT09IiwibWFjIjoiMGQyMjY1NDU1ODg3Njk5YTBjOTAyNWVlMmJhZThiNGQ1NzgyMjY0YzBhYzRjYjliZjE1NGU4ZjhhZGUyZjlmMiJ9;
        expires=Thu, 21-Feb-2019 01:33:01 GMT; Max-Age=10800; path=/; secure; HttpOnly
      - SERVERID=j4b1904esdfsdzggasdq734dlkdbbw01; path=/
      - _jrWc=eyJpdiI6ImZ1aGpaM3hIeFA4NEpTdVNHSVBJV3c9PSIsInZhbHVlIjoiY0ZtSWFpSWowT3c2Mzd6ZGxRM3FWZlUyMXM4Mms3ZUdGV3d1bDBLUURLTDVuTFRuQ2podEpWRXpLbzc3c3V4diIsIm1hYyI6ImFhMDIyYWY2MjM3MjY5ZmI2YzhhZWEyZjU3YjE1NmQxZWUxYTUxNzQ2ZjNkMWFjMDRmZWFhMzExYjVkOTZhZDcifQ%3D%3D;
        expires=Sun, 21-Apr-2019 22:33:01 GMT; Max-Age=5184000; path=/; secure; HttpOnly
      - as09dja09jdoiaoisd=eyJpdiI6ImZvc3VvYXZkd2xleHhEVjhVdGJUNVE9PSIsInZhbHVlIjoib1BUR01FZHhOVm1CMWlISVVKYXIrZlwvcjM0Vjh5VWhncVlBS0JKbHFcL3FYbFJ1WDl3ejFSZWF2MUZTQjdTQm5hIiwibWFjIjoiMGM3ZWU5ZWI5MzE1Nzk1NTk1NDYxNzYzOWQzZjc5NzBmMjg0N2RjNzVmMDhhZWEwNDI4NjI0Y2QwZDE4YWMzOCJ9;
        path=/; secure; HttpOnly
      - lang=eyJpdiI6Ik1QYitkSktGdGs0M1lBZ1FQOFwvd3V3PT0iLCJ2YWx1ZSI6Ikg0aWNYUFJGWGJ0N3BXR3Z1WHZqNHc9PSIsIm1hYyI6IjU4MjY1ODQ1ZmJhYzkxNTEwZmEzODNjMzZlYzQ2OTQzNDZmYWEyNDJhYWZhZDk0MTRjNDIzM2U3YjdiNDljZWQifQ%3D%3D;
        expires=Thu, 20-Feb-2020 22:33:01 GMT; Max-Age=31536000; path=/; secure; HttpOnly
      Strict-Transport-Security:
      - max-age=31536000
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 20 Feb 2019 22:32:57 GMT
recorded_with: VCR 4.0.0
