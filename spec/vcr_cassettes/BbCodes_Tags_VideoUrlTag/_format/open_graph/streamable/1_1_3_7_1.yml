---
http_interactions:
- request:
    method: get
    uri: https://streamable.com/efgm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML,
        like Gecko) Chrome/39.0.2171.71 Safari/537.36
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - nginx/1.12.2
      X-Cache-Status:
      - MISS
      Via:
      - 1.1 varnish
      - 1.1 varnish
      Fastly-Debug-Digest:
      - d9f5a7bf85bcb8c8b97645161790aab1b14d18a6d058c4145c1820d732595a55
      X-Ua-Device:
      - desktop
      Content-Length:
      - '26452'
      Accept-Ranges:
      - bytes
      Date:
      - Wed, 30 May 2018 01:38:32 GMT
      Age:
      - '0'
      Connection:
      - keep-alive
      X-Served-By:
      - cache-iad2136-IAD, cache-lcy19241-LCY
      X-Cache:
      - MISS, MISS
      X-Cache-Hits:
      - 0, 0
      X-Timer:
      - S1527644312.386226,VS0,VE102
      Vary:
      - X-UA-Device, Accept-Encoding, X-Username
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 30 May 2018 01:38:30 GMT
recorded_with: VCR 4.0.0
