---
http_interactions:
- request:
    method: get
    uri: https://streamable.com/efgm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML,
        like Gecko) Chrome/39.0.2171.71 Safari/537.36
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - nginx/1.14.0
      X-Cache-Status:
      - MISS
      Via:
      - 1.1 varnish
      - 1.1 varnish
      X-Ua-Device:
      - desktop
      X-Domain:
      - ''
      Content-Length:
      - '26704'
      Accept-Ranges:
      - bytes
      Date:
      - Wed, 19 Sep 2018 15:04:23 GMT
      Age:
      - '0'
      Connection:
      - keep-alive
      X-Served-By:
      - cache-iad2130-IAD, cache-lcy19251-LCY
      X-Cache:
      - MISS, HIT
      X-Cache-Hits:
      - 0, 1
      X-Timer:
      - S1537369464.932563,VS0,VE1
      Vary:
      - X-UA-Device, Accept-Encoding, X-Username, X-Domain
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 19 Sep 2018 15:03:59 GMT
recorded_with: VCR 4.0.0
