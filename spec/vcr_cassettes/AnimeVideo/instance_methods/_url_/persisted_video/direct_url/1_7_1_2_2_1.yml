---
http_interactions:
- request:
    method: get
    uri: http://rutube.ru/video/ef370e68cd9687a30ea67a68658c6ef8/?ref=logo
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML,
        like Gecko) Chrome/39.0.2171.71 Safari/537.36
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Server:
      - nginx/1.9.15
      Date:
      - Sat, 10 Dec 2016 14:05:17 GMT
      Content-Type:
      - text/html
      Content-Length:
      - '185'
      Connection:
      - close
      Location:
      - https://rutube.ru/video/ef370e68cd9687a30ea67a68658c6ef8/?ref=logo
      X-Host-Back:
      - frontend-101.dl.rutube.ru,
      X-Frame-Options:
      - DENY
    body:
      encoding: UTF-8
      string: "<html>\r\n<head><title>301 Moved Permanently</title></head>\r\n<body
        bgcolor=\"white\">\r\n<center><h1>301 Moved Permanently</h1></center>\r\n<hr><center>nginx/1.9.15</center>\r\n</body>\r\n</html>\r\n"
    http_version: 
  recorded_at: Sat, 10 Dec 2016 14:05:17 GMT
- request:
    method: get
    uri: https://rutube.ru/video/ef370e68cd9687a30ea67a68658c6ef8/?ref=logo
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML,
        like Gecko) Chrome/39.0.2171.71 Safari/537.36
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.9.15
      Date:
      - Sat, 10 Dec 2016 14:05:17 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - close
      Vary:
      - Cookie
      X-Request-Clock:
      - '0.375'
      X-Request-Time:
      - '0.55316901207'
      Set-Cookie:
      - used_next=ef370e68cd9687a30ea67a68658c6ef8; expires=Sat, 24-Dec-2016 14:05:17
        GMT; Max-Age=1209600; Path=/
      X-Host-Back:
      - frontend-201.m77.rutube.ru,10.2.61.17:3031
      X-Frame-Options:
      - DENY
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Sat, 10 Dec 2016 14:05:17 GMT
- request:
    method: get
    uri: https://rutube.ru/api/play/trackinfo/3599097?format=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML,
        like Gecko) Chrome/39.0.2171.71 Safari/537.36
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.9.15
      Date:
      - Mon, 03 Apr 2017 15:35:25 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - close
      Vary:
      - Accept, Cookie
      X-Request-Clock:
      - '0.0625'
      Allow:
      - GET, HEAD, OPTIONS
      X-Request-Time:
      - '0.0897691249847'
      X-Host-Back:
      - frontend-201.m77.rutube.ru,10.2.61.15:3031
      X-Frame-Options:
      - DENY
    body:
      encoding: ASCII-8BIT
      string: '{"video_url": "https://rutube.ru/video/ef370e68cd9687a30ea67a68658c6ef8/",
        "html": "<iframe width=\"720\" height=\"405\" src=\"//rutube.ru/play/embed/3599097\"
        frameborder=\"0\" webkitAllowFullScreen mozallowfullscreen allowfullscreen></iframe>",
        "is_licensed": false, "gpmd_id": 2, "gpmd_puid1": 2, "author": {"url": "https://rutube.ru/video/person/71394/",
        "accounts": [{"net": 2, "uid": "808418", "is_deleted": false}], "logo": null,
        "id": 71394, "name": "mika6817"}, "size": 111832263, "posting_author_id":
        null, "has_video": true, "captions": [], "cuepoints": [], "tags": [], "category":
        {"id": 7, "category_url": "https://rutube.ru/video/category/7/", "name": "\u041c\u0443\u043b\u044c\u0442\u0444\u0438\u043b\u044c\u043c\u044b",
        "short_name": "cartoons"}, "thumbnail_url": "https://pic.rutube.ru/video/26/8b/268bfe8c2845481e9606bbc99b660dd3.jpg",
        "is_livestream": false, "id": "ef370e68cd9687a30ea67a68658c6ef8", "title":
        "\u041b\u0435\u0433\u0435\u043d\u0434\u0430 \u043e\u0434\u043d\u043e\u0439
        \u043a\u043e\u043c\u043d\u0430\u0442\u044b - 01 \u0440\u0443\u0441 \u0441\u0430\u0431\u044b
        [2010]/ The Tatami Galaxy / Yojouhan Shinwa Taikei / C\u043a\u0430\u0437 \u043e
        \u0447...", "is_adult": false, "is_hidden": false, "track_id": 3599097, "duration":
        1374956, "is_external": false, "pepper": null}'
    http_version: 
  recorded_at: Mon, 03 Apr 2017 15:35:25 GMT
recorded_with: VCR 3.0.3
