---
http_interactions:
- request:
    method: get
    uri: https://www.myvi.top/idaofy?v=kcptso3b1mpr8n8fc3xyof5tyh
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML,
        like Gecko) Chrome/39.0.2171.71 Safari/537.36
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 19 Sep 2018 16:02:42 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - RequestId=M-Nf07QrvEickGCB7pARqA2; domain=.myvi.top; expires=Thu, 19-Sep-2019
        15:58:25 GMT; path=/
      - __cfduid=dc4e69ec01120349d8e3cc2bb416a13511537372962; expires=Thu, 19-Sep-19
        16:02:42 GMT; path=/; domain=.myvi.top; HttpOnly; Secure
      Cache-Control:
      - private
      Vary:
      - Accept-Encoding
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 45cd4734be4a3464-LHR
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        DQoNCjwhRE9DVFlQRSBodG1sPg0KPGh0bWwgeG1sbnM6bmc9Imh0dHA6Ly9hbmd1bGFyanMub3JnIiBpZD0ibmctYXBwIj4NCjxoZWFkIHByZWZpeD0ib2c6IGh0dHA6Ly9vZ3AubWUvbnMjIHZpZGVvOiBodHRwOi8vb2dwLm1lL25zL3ZpZGVvIyB5YTogaHR0cDovL3dlYm1hc3Rlci55YW5kZXgucnUvdm9jYWJ1bGFyaWVzLyI+DQogICAgPG1ldGEgY2hhcnNldD0idXRmLTgiIC8+DQogICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLjAsIG1heGltdW0tc2NhbGU9MS4wLCB1c2VyLXNjYWxhYmxlPW5vIj4NCiAgICA8YmFzZSBocmVmPSIvIiAvPg0KDQogICAgDQo8dGl0bGU+UHVjaGl0dG8gRnVyaWthZXJpbnRpYSAo0L7RgNC40LPQuNC90LDQuykgLyBHYXJnYW50aWEgb24gdGhlIFZlcmR1cm91cyBQbGFuZXQgUmVjYXAgIyDQodGD0LTQt9GD0LzQuNGPINCl0LDRgNGD0YXQuCDigJQg0JrQsNC90LDQuyDQvdCwINCc0YPQstC4LtGC0LI8L3RpdGxlPg0KDQogICAgPG1ldGEgbmFtZT0iZGVzY3JpcHRpb24iIGNvbnRlbnQ9IlB1Y2hpdHRvIEZ1cmlrYWVyaW50aWEgKNC+0YDQuNCz0LjQvdCw0LspIC8gR2FyZ2FudGlhIG9uIHRoZSBWZXJkdXJvdXMgUGxhbmV0IFJlY2FwaHR0cDovL3Rvcm0tZWdhbi5ydS9wdWJsLzMwLTEtMC02NTgK0J/QvtC00L/QuNGB0YvQstCw0LnRgdGPINC90LAg0L/QsNCx0LvQuNC6IGh0dHBzOi8vdmsuY29tL3Rvcm1fZWdhbiIgLz4NCiAgICA8bWV0YSBuYW1lPSJrZXl3b3JkcyIgY29udGVudD0i0LDQvdC40LzQtSwg0JzRg9C70YzRgtGE0LjQu9GM0LzRiyIgLz4NCiAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6c2l0ZV9uYW1lIiBjb250ZW50PSJNeXZpLlR2IiAvPg0KICAgIDxtZXRhIHByb3BlcnR5PSJvZzp1cmwiIGNvbnRlbnQ9Imh0dHBzOi8vd3d3Lm15dmkudG9wL2lkYW9meT92PWtjcHRzbzNiMW1wcjhuOGZjM3h5b2Y1dHloIiAvPg0KICAgIDxtZXRhIHByb3BlcnR5PSJvZzp0aXRsZSIgY29udGVudD0iUHVjaGl0dG8gRnVyaWthZXJpbnRpYSAo0L7RgNC40LPQuNC90LDQuykgLyBHYXJnYW50aWEgb24gdGhlIFZlcmR1cm91cyBQbGFuZXQgUmVjYXAiIC8+DQogICAgPG1ldGEgcHJvcGVydHk9Im9nOmRlc2NyaXB0aW9uIiBjb250ZW50PSJodHRwOi8vdG9ybS1lZ2FuLnJ1L3B1YmwvMzAtMS0wLTY1OArQn9C+0LTQv9C40YHRi9Cy0LDQudGB0Y8g0L3QsCDQv9Cw0LHQu9C40LogaHR0cHM6Ly92ay5jb20vdG9ybV9lZ2FuIiAvPg0KICAgIDxtZXRhIHByb3BlcnR5PSJvZzppbWFnZSIgY29udGVudD0iaHR0cHM6Ly93d3cubXl2aS50b3Avc3RyZWFtL3ByZXZpZXcvVXhzYlF5R1Mya09JNVdaZUNCZHhCdzIvdG0xLmpwZyIgLz4NCiAgICA8bGluayByZWw9ImltYWdlX3NyYyIgaHJlZj0iaHR0cHM6Ly93d3cubXl2aS50b3Avc3RyZWFtL3ByZXZpZXcvVXhzYlF5R1Mya09JNVdaZUNCZHhCdzIvdG0xLmpwZyIgLz4NCg0KICAgIDxtZXRhIHByb3BlcnR5PSJvZzp0eXBlIiBjb250ZW50PSJ2aWRlby5vdGhlciIgLz4NCiAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6dmlkZW86dHlwZSIgY29udGVudD0idGV4dC9odG1sIiAvPg0KICAgIDxtZXRhIHByb3BlcnR5PSJvZzp2aWRlbzp3aWR0aCIgY29udGVudD0iNDUwIiAvPg0KICAgIDxtZXRhIHByb3BlcnR5PSJvZzp2aWRlbzpoZWlnaHQiIGNvbnRlbnQ9IjM3OCIgLz4NCiAgICAgICAgPG1ldGEgcHJvcGVydHk9Im9nOnZpZGVvIiBjb250ZW50PSJodHRwczovL3d3dy5teXZpLnRvcC9lbWJlZC9rY3B0c28zYjFtcHI4bjhmYzN4eW9mNXR5aCIgLz4NCiAgICAgICAgPG1ldGEgcHJvcGVydHk9Im9nOmR1cmF0aW9uIiBjb250ZW50PSIzMjgiIC8+DQogICAgICAgIDxtZXRhIHByb3BlcnR5PSJvZzp2aWRlbzpkdXJhdGlvbiIgY29udGVudD0iMzI4Ij4NCiAgICAgICAgPG1ldGEgcHJvcGVydHk9Im9nOnZpZGVvOnVybCIgY29udGVudD0iaHR0cHM6Ly93d3cubXl2aS50b3AvZW1iZWQva2NwdHNvM2IxbXByOG44ZmMzeHlvZjV0eWgiIC8+DQogICAgICAgIDxtZXRhIHByb3BlcnR5PSJvZzp2aWRlbzppZnJhbWUiIGNvbnRlbnQ9Imh0dHBzOi8vd3d3Lm15dmkudG9wL2VtYmVkL2tjcHRzbzNiMW1wcjhuOGZjM3h5b2Y1dHloIiAvPg0KICAgIDxtZXRhIHByb3BlcnR5PSJ5YTpvdnM6YWR1bHQiIGNvbnRlbnQ9ImZhbHNlIiAvPg0KICAgIDxtZXRhIHByb3BlcnR5PSJ5YTpvdnM6YXZhaWxhYmxlX3BsYXRmb3JtIiBjb250ZW50PSJEZXNrdG9wIiAvPg0KICAgIDxtZXRhIHByb3BlcnR5PSJ5YTpvdnM6YXZhaWxhYmxlX3BsYXRmb3JtIiBjb250ZW50PSJNb2JpbGUiIC8+DQogICAgPG1ldGEgcHJvcGVydHk9InlhOm92czphbGxvd19lbWJlZCIgY29udGVudD0idHJ1ZSIgLz4NCiAgICAgICAgPG1ldGEgcHJvcGVydHk9InlhOm92czpjYXRlZ29yeSIgY29udGVudD0i0JzRg9C70YzRgtGE0LjQu9GM0LzRiyIgLz4NCiAgICAgICAgPG1ldGEgcHJvcGVydHk9InlhOm92czp1cGxvYWRfZGF0ZSIgY29udGVudD0iMjAxNS0xMi0xNVQwNzo1NzozOC43MTAwMDAwWiIgLz4NCiAgICAgICAgPG1ldGEgcHJvcGVydHk9InlhOm92czplbWJlZF9odG1sIiBjb250ZW50PSImbHQ7aWZyYW1lIHNyYz0mcXVvdDtodHRwczovL3d3dy5teXZpLnRvcC9lbWJlZC9rY3B0c28zYjFtcHI4bjhmYzN4eW9mNXR5aCZxdW90OyZndDsmbHQ7L2lmcmFtZSZndDsiIC8+DQogICAgICAgIDxtZXRhIHByb3BlcnR5PSJ5YTpvdnM6aXNfb2ZmaWNpYWwiIGNvbnRlbnQ9InllcyIgLz4NCiAgICAgICAgPG1ldGEgcHJvcGVydHk9InZpZGVvOmR1cmF0aW9uIiBjb250ZW50PSIzMjgiIC8+DQogICAgICAgIDxtZXRhIHByb3BlcnR5PSJ2aWRlbzp0YWciIGNvbnRlbnQ9ItCw0L3QuNC80LUiIC8+DQoNCg0KICAgICAgICA8bGluayBocmVmPSIvYXNzZXRzL3N0eWxlcy9jb3JlLm1pbi5jc3M/dj1TNVBZVmVDNEpXRTEiIHJlbD0ic3R5bGVzaGVldCIgLz4NCiAgICAgICAgPHNjcmlwdCBzcmM9Ii9idW5kbGUvanM/bj1BYi1jb3JlJmFtcDt2PVM1UFlWZUM0SldFMSI+PC9zY3JpcHQ+DQogICAgPHN0eWxlPg0KICAgICAgICAuc3RhcnR1cCB7DQogICAgICAgICAgICBkaXNwbGF5OiBub25lOw0KICAgICAgICB9DQogICAgPC9zdHlsZT4NCiAgICA8c2NyaXB0IGFzeW5jIHNyYz0iLy9wYWdlYWQyLmdvb2dsZXN5bmRpY2F0aW9uLmNvbS9wYWdlYWQvanMvYWRzYnlnb29nbGUuanMiPjwvc2NyaXB0Pg0KICAgIDxzY3JpcHQ+DQogICAgICAgIChhZHNieWdvb2dsZSA9IHdpbmRvdy5hZHNieWdvb2dsZSB8fCBbXSkucHVzaCh7DQogICAgICAgICAgICBnb29nbGVfYWRfY2xpZW50OiAiY2EtcHViLTEzNTg2MDMwNDkwODI1NzkiLA0KICAgICAgICAgICAgZW5hYmxlX3BhZ2VfbGV2ZWxfYWRzOiB0cnVlDQogICAgICAgIH0pOw0KICAgIDwvc2NyaXB0Pg0KPC9oZWFkPg0KPGJvZHk+DQogICAgPGhlYWRlciBuZy1jb250cm9sbGVyPSJIZWFkZXJDb250cm9sbGVyIiBuZy1pbmNsdWRlPSInL2FwcC9zaGFyZWQvaGVhZGVyL2hlYWRlci5odG1sJyI+PC9oZWFkZXI+DQogICAgPG1haW4+DQogICAgICAgIDxkaXYgY2xhc3M9Im5nLXZpZXcgc3RhcnR1cCIgYXV0b3Njcm9sbD0iQXV0b1Njcm9sbCgpIj48L2Rpdj4NCiAgICA8L21haW4+DQogICAgPGRpdiBpZD0ic3BsYXNoU2NyZWVuIj48c3BhbiBjbGFzcz0iZDEiPi48L3NwYW4+PHNwYW4gY2xhc3M9ImQyIj4uPC9zcGFuPjxzcGFuIGNsYXNzPSJkMyI+Ljwvc3Bhbj48c3BhbiBjbGFzcz0iZDQiPi48L3NwYW4+PHNwYW4gY2xhc3M9ImQ1Ij4uPC9zcGFuPjxzcGFuIGNsYXNzPSJkNiI+Ljwvc3Bhbj48c3BhbiBjbGFzcz0iZDciPi48L3NwYW4+PC9kaXY+DQogICAgPGZvb3RlciBuZy1jb250cm9sbGVyPSJGb290ZXJDb250cm9sbGVyIGFzIGNvbnQiIG5nLWluY2x1ZGU9IicvYXBwL3NoYXJlZC9mb290ZXIvZm9vdGVyLmh0bWwnIj48L2Zvb3Rlcj4NCiAgICA8ZGl2IG15dmktdmlkZW8tcGxheWVyLWFnZW50PSJ2aWRlb1BsYXllckNvbnRhaW5lciIgc3R5bGU9IndpZHRoOjFweDtoZWlnaHQ6MXB4O3Bvc2l0aW9uOmFic29sdXRlO292ZXJmbG93OmhpZGRlbiI+DQogICAgICAgIDxkaXYgaWQ9InZpZGVvUGxheWVyQ29udGFpbmVyIj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InBsYXllci1hZHNsb3QgcGxheWVyLWVsZW1lbnQgcGxheWVyLWRpc2FibGVkIj48L2Rpdj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InBsYXllci1ub3Qtc3VwcG9ydGVkIHBsYXllci1tc2ciIHN0eWxlPSJ2aXNpYmlsaXR5OmhpZGRlbiI+PGRpdiBjbGFzcz0icGxheWVyLWNvbnRhaW5lciI+PGRpdiBjbGFzcz0icGxheWVyLWNvbnRlbnQiPtCc0Ysg0L3QtSDQvNC+0LbQtdC8INCy0L7RgdC/0YDQvtC40LfQstC10YHRgtC4INCy0LjQtNC10L4g0L3QsCDRjdGC0L7QvCDRg9GB0YLRgNC+0LnRgdGC0LLQtS48L2Rpdj48L2Rpdj48L2Rpdj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InBsYXllci1uby1mbGFzaCBwbGF5ZXItbXNnIiBzdHlsZT0idmlzaWJpbGl0eTpoaWRkZW4iPjxkaXYgY2xhc3M9InBsYXllci1jb250YWluZXIiPjxkaXYgY2xhc3M9InBsYXllci1jb250ZW50Ij7Qn9C+0LbQsNC70YPQudGB0YLQsCwg0YPRgdGC0LDQvdC+0LLQuNGC0LUgRmxhc2ggcGxheWVyLjwvZGl2PjwvZGl2PjwvZGl2Pg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0icGxheWVyLWVtYmVkIiBzdHlsZT0idmlzaWJpbGl0eTpoaWRkZW4iPjwvZGl2Pg0KICAgICAgICAgICAgPHZpZGVvIGNsYXNzPSJwbGF5ZXItdmlkZW8iIHdlYmtpdC1wbGF5c2lubGluZT0iMSIgcGxheXNpbmxpbmU9IjEiIHN0eWxlPSJ2aXNpYmlsaXR5OmhpZGRlbiI+PC92aWRlbz4NCiAgICAgICAgICAgIDx2aWRlbyBjbGFzcz0iYWRwbGF5ZXItdmlkZW8gcGxheWVyLWRpc2FibGVkIiB3ZWJraXQtcGxheXNpbmxpbmU9IjEiIHBsYXlzaW5saW5lPSIxIiBzdHlsZT0idmlzaWJpbGl0eTpoaWRkZW4iPjwvdmlkZW8+DQogICAgICAgICAgICA8b2JqZWN0IGNsYXNzPSJwbGF5ZXItdmlkZW8iIGlkPSJmbGFzaFZpZGVvUGxheWVyQ29udGFpbmVyIiBzdHlsZT0idmlzaWJpbGl0eTpoaWRkZW4iIG5hbWU9ImZsYXNoVmlkZW9QbGF5ZXJDb250YWluZXIiIGRhdGE9Ii9hc3NldHMvbGlicy9wbGF5ZXIvZmxhc2gvZmxhc2hjaHJvbWVsZXNzLnN3Zj92PTEiPg0KICAgICAgICAgICAgICAgIDxwYXJhbSBuYW1lPSJtb3ZpZSIgdmFsdWU9Ii9hc3NldHMvbGlicy9wbGF5ZXIvZmxhc2gvZmxhc2hjaHJvbWVsZXNzLnN3Zj92PTEiIC8+DQogICAgICAgICAgICAgICAgPHBhcmFtIG5hbWU9ImFsbG93U2NyaXB0QWNjZXNzIiB2YWx1ZT0iYWx3YXlzIiAvPg0KICAgICAgICAgICAgICAgIDxwYXJhbSBuYW1lPSJ3bW9kZSIgdmFsdWU9Im9wYXF1ZSIgLz4NCiAgICAgICAgICAgIDwvb2JqZWN0Pg0KICAgICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCiAgICA8ZGl2IGNsYXNzPSJoaWRkZW4iPg0KICAgICAgICA8IS0tbm9pbmRleC0tPg0KICAgICAgICANCjxzY3JpcHQgdHlwZT0idGV4dC9uZy10ZW1wbGF0ZSIgaWQ9Ii9hcHAvY29tcG9uZW50cy9jaGFubmVsL2NoYW5uZWwuaHRtbCI+DQo8ZGl2IGNsYXNzPSJhYy1jaGFubmVscyIgbmctaWY9Ijo6IURldGFpbC4kZmFpbHVyZSI+DQoNCiAgICA8bXl2aS1jaGFubmVsLWRldGFpbCBkYXRhLWRldGFpbD0iOjpEZXRhaWwiIGRhdGEtaGFzLW93bj0iOjpIYXNPd24iIGRhdGEtbG9jPSI6OkxvY0hlYWRlciI+PC9teXZpLWNoYW5uZWwtZGV0YWlsPg0KICAgIDxhIG5hbWU9IndhdGNoIiBjbGFzcz0iY2hhbm5lbC1hbmNob3IiPjwvYT4NCg0KICAgIDxkaXYgbmctaWY9Ijo6KCghSXNFeGlzdFZpZGVvcyAmJiBJc0VtcHR5Q2hhbm5lbCAmJiBIYXNPd24pIHx8ICFIYXNPd24pIiBuZy1pbmNsdWRlIHNyYz0iJy9hcHAvY29tcG9uZW50cy9jaGFubmVsL3NoYXJlZC9wbHVncy5odG1sJyI+PC9kaXY+DQoNCiAgICA8ZGl2IG5nLWlmPSIhSXNFbXB0eUNoYW5uZWwgJiYgIUlzVmlkZW9Ob3RQbGF5Ij4NCiAgICAgICAgPG15dmktdmlkZW8tc2hvd2Nhc2UgZGF0YS12aWRlb3M9IkZlYXR1cmVkIiBkYXRhLW1vZGU9IidjaGFubmVsJyIgZGF0YS1hdXRvLXBsYXk9IkF1dG9QbGF5IiBkYXRhLWhhcy1vd249Ijo6SGFzT3duIiBkYXRhLXVwZGF0ZT0iVXBkYXRlTW9kZWwiIGRhdGEtbG9jPSI6OkxvY0Jhc2UiIG9uLWVkaXQtYnRuLWNsaWNrPSIkY3RybC5PbkVkaXRCdG5DbGljaygkdmlkZW9faWQsICRlZGl0X3R5cGUpIj48L215dmktdmlkZW8tc2hvd2Nhc2U+DQogICAgICAgIDxteXZpLXJlbGF0ZWQtdmlkZW9zIGRhdGEtbW9kZWw9IlJlbGF0ZWRNb2RlbCIgZGF0YS11cGRhdGU9IlVwZGF0ZU1vZGVsIiBkYXRhLWxvYz0iOjpMb2MiIGRhdGEtY29tbW9uLWxvYz0iOjpMb2NCYXNlIj48L215dmktcmVsYXRlZC12aWRlb3M+DQogICAgICAgIDxkaXYgY2xhc3M9ImNsZWFyZml4Ij48L2Rpdj4NCiAgICA8L2Rpdj4NCg0KICAgIDxteXZpLWZhdm9yaXRlLXRhZ3MgbmctaWY9Ijo6IUlzRW1wdHlDaGFubmVsIiBkYXRhLWNoYW5uZWwtaWQ9Ijo6SWQiIGRhdGEtaGFzLW93bj0iOjpIYXNPd24iIGRhdGEtaGlkZT0iOjpEZXRhaWwuc3R5bGUuaGlkZUZhdm9yaXRlVGFncyIgZGF0YS10YWdzLXVybD0iOjpEZXRhaWwuZmVhdHVyZWRUYWdzVXJsIiBkYXRhLWVkaXQtdGFncy11cmw9Ijo6RGV0YWlsLmVkaXRGZWF0dXJlZFRhZ3NVcmwiIGRhdGEtbG9jPSI6OkxvYyIgZGF0YS1jb21tb24tbG9jPSI6OkxvY0Jhc2UiPjwvbXl2aS1mYXZvcml0ZS10YWdzPg0KICAgIDxkaXYgY2xhc3M9ImNsZWFyZml4Ij48L2Rpdj4NCg0KICAgIDxteXZpLWxhdGVzdC12aWRlb3MgbmctaWY9Ijo6KCFJc0VtcHR5Q2hhbm5lbCB8fCAoSGFzT3duICYmIElzRXhpc3RWaWRlb3MpKSIgZGF0YS1jaGFubmVsLWlkPSI6OklkIiBkYXRhLWhhcy1vd249Ijo6SGFzT3duIiBkYXRhLXZpZGVvcy11cmw9Ijo6RGV0YWlsLnZpZGVvc1VybCIgZGF0YS1lZGl0LXZpZGVvcy11cmw9Ijo6RGV0YWlsLmVkaXRWaWRlb3NVcmwiIGRhdGEtdXBkYXRlPSJVcGRhdGVNb2RlbCIgZGF0YS1sb2M9Ijo6TG9jIiBkYXRhLWNvbW1vbi1sb2M9Ijo6TG9jQmFzZSI+PC9teXZpLWxhdGVzdC12aWRlb3M+DQogICAgPGRpdiBjbGFzcz0iY2xlYXJmaXgiPjwvZGl2Pg0KDQogICAgPG15dmktdXNlci1jaGFubmVscyBkYXRhLWNoYW5uZWwtaWQ9Ijo6SWQiIGRhdGEtY2hhbm5lbHMtdXJsPSI6OkRldGFpbC5jaGFubmVsc1VybCIgZGF0YS1sb2M9Ijo6TG9jIj48L215dmktdXNlci1jaGFubmVscz4NCiAgICA8ZGl2IGNsYXNzPSJjbGVhcmZpeCI+PC9kaXY+DQoNCiAgICA8bXl2aS12aWRlby1lZGl0IG5nLWlmPSJIYXNPd24iIGRhdGEtaW5mbz0iRWRpdFZpZGVvIiBkYXRhLWNoYW5uZWwtaWQ9Ijo6RGV0YWlsLmlkIiBkYXRhLWxvYz0iOjpMb2NFZGl0VmlkZW8iIGRhdGEtbG9jLWJhc2U9Ijo6TG9jQmFzZSIgb24tZWRpdD0iJGN0cmwuT25WaWRlb0VkaXQoJHZpZGVvX3VwZGF0ZSkiPjwvbXl2aS12aWRlby1lZGl0Pg0KDQo8L2Rpdj4NCjxkaXYgY2xhc3M9ImFjLWNoYW5uZWxzIGVycm9yLWxpc3QtcGx1ZyIgbmctaWY9Ijo6RGV0YWlsLiRmYWlsdXJlID09IHRydWUiPjwvZGl2Pg0KPC9zY3JpcHQ+DQo8c2NyaXB0IHR5cGU9InRleHQvbmctdGVtcGxhdGUiIGlkPSIvYXBwL2NvbXBvbmVudHMvY2hhbm5lbC9zaGFyZWQvY2hhbm5lbC1kZXRhaWwuaHRtbCI+DQo8ZGl2IGNsYXNzPSJjaGFubmVsLWhlYWRlciINCiAgICAgbmctc3R5bGU9Ijo6e2JhY2tncm91bmRJbWFnZTogJ3VybChcJycrJGN0cmwuRGV0YWlsLnN0eWxlLmJhY2tncm91bmRVcmwrJ1wnKScsIHBhZGRpbmdUb3A6ICRjdHJsLkRldGFpbC5zdHlsZS5iYWNrZ3JvdW5kSGVpZ2h0ICE9IDAgPyAkY3RybC5EZXRhaWwuc3R5bGUuYmFja2dyb3VuZEhlaWdodCArICdweCcgOiAyNTAgKyAncHgnfSINCiAgICAgbmctY2xhc3M9Ijo6e2NvdmVyOiAkY3RybC5EZXRhaWwuc3R5bGUuYmFja2dyb3VuZFR5cGUgPT0gJ2NvdmVyJyB9Ij4NCg0KICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudC1pbmZvLXdyYXBwZXIiPg0KICAgICAgICA8ZGl2IGNsYXNzPSJjb250YWluZXItZmx1aWQiPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtMTIgY29tcG9uZW50LWluZm8gY2hhbm5lbC1pbmZvIj4NCiAgICAgICAgICAgICAgICAgICAgPGgxIGNsYXNzPSJvZmZpY2lhbC1jaGFubmVsIiBuZy1jbGFzcz0ieydleHBhbmQnIDogJGN0cmwuRGV0YWlsLlZpc2libGVEZXNjcmlwdGlvbiB9Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjaGFubmVsLW5hbWUtd3JhcHBlciB2aXNpYmxlLXhzIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIG5nLWNsaWNrPSIkY3RybC5Ub2dnbGVDaGFubmVsRGVzY3JpcHRpb24oKSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjaGFubmVsLW5hbWUiIHRpdGxlPSJ7ezo6JGN0cmwuRGV0YWlsLm5hbWV9fSIgbmctYmluZD0iOjokY3RybC5EZXRhaWwubmFtZSI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY2FyZXQiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBuZy1zd2l0Y2g9IigkY3RybC5EZXRhaWwuZGVzY3JpcHRpb24gfHwgJycpLmxlbmd0aCA+IDAgfHwgJGN0cmwuRGV0YWlsLm5hbWUubGVuZ3RoID4gNTAiIGNsYXNzPSJjaGFubmVsLW5hbWUtd3JhcHBlciBoaWRkZW4teHMiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIG5nLXN3aXRjaC13aGVuPSJ0cnVlIiBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIG5nLWNsaWNrPSIkY3RybC5Ub2dnbGVDaGFubmVsRGVzY3JpcHRpb24oKSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjaGFubmVsLW5hbWUiIHRpdGxlPSJ7ezo6JGN0cmwuRGV0YWlsLm5hbWV9fSIgbmctYmluZD0iOjokY3RybC5EZXRhaWwubmFtZSI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY2FyZXQiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gbmctc3dpdGNoLWRlZmF1bHQgY2xhc3M9ImNoYW5uZWwtbmFtZSIgdGl0bGU9Int7OjokY3RybC5EZXRhaWwubmFtZX19IiBuZy1iaW5kPSI6OiRjdHJsLkRldGFpbC5uYW1lIj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IG5nLXN3aXRjaCBkYXRhLW9uPSI6OiRjdHJsLkhhc093biIgY2xhc3M9ImxlZnQgZWRpdC1idG4tY29udGFpbmVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBuZy1zd2l0Y2gtd2hlbj0idHJ1ZSIgdGl0bGU9Int7OjpMb2MuRWRpdH19IiBuZy1ocmVmPSJ7ezo6JGN0cmwuRGV0YWlsLmVkaXRVcmx9fSIgY2xhc3M9ImVkaXQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29tbW9uLWljb24iPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRleHQgaGlkZGVuLXhzIGhpZGRlbi1zbSIgbmctYmluZD0iOjpMb2MuRWRpdCI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IG5nLXN3aXRjaC1kZWZhdWx0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdWJzY3JpYmUtYnV0dG9uIiB0ZW1wbGF0ZT0iSGVhZGVyIiB0eXBlPSJDaGFubmVsIiBjaGFubmVsPSJ7ezo6JGN0cmwuRGV0YWlsLmlkfX0iIHRpdGxlPSJ7ezo6TG9jLlNVQlNDUklQVElPTn19Ij48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8L2gxPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjaGFubmVsLXN0YXQgaGlkZGVuLXhzIiBuZy1pZj0iJGN0cmwuRGV0YWlsLm5hbWUubGVuZ3RoIDwgJGN0cmwuTWF4TmFtZUxlbmd0aCI+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGF0LWNvdW50IiBuZy1iaW5kPSI6OiRjdHJsLkRldGFpbC52aWV3VmlkZW9Db3VudCB8IG1lZ2FOdW1iZXIiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bmctcGx1cmFsaXplIGNvdW50PSI6OiRjdHJsLkRldGFpbC52aWV3VmlkZW9Db3VudCIgd2hlbj0ieydvbmUnOid7ezo6TG9jLlN0YXQuVmlld1ZpZGVvQ291bnQuT25lfX0nLCdmZXcnOid7ezo6TG9jLlN0YXQuVmlld1ZpZGVvQ291bnQuRmV3fX0nLCdtYW55Jzone3s6OkxvYy5TdGF0LlZpZXdWaWRlb0NvdW50Lk1hbnl9fScsJ290aGVyJzone3s6OkxvYy5TdGF0LlZpZXdWaWRlb0NvdW50Lk90aGVyfX0nfSI+PC9uZy1wbHVyYWxpemU+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YXQtY291bnQiIG5nLWJpbmQ9Ijo6JGN0cmwuRGV0YWlsLnN1YnNjcmliZXJzQ291bnQgfCBtZWdhTnVtYmVyIj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPG5nLXBsdXJhbGl6ZSBjb3VudD0iOjokY3RybC5EZXRhaWwuc3Vic2NyaWJlcnNDb3VudCIgd2hlbj0ieydvbmUnOid7ezo6TG9jLlN0YXQuU3Vic2NyaWJlcnNDb3VudC5PbmV9fScsJ2Zldyc6J3t7OjpMb2MuU3RhdC5TdWJzY3JpYmVyc0NvdW50LkZld319JywnbWFueSc6J3t7OjpMb2MuU3RhdC5TdWJzY3JpYmVyc0NvdW50Lk1hbnl9fScsJ290aGVyJzone3s6OkxvYy5TdGF0LlN1YnNjcmliZXJzQ291bnQuT3RoZXJ9fSd9Ij48L25nLXBsdXJhbGl6ZT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2hhbm5lbC1hdmF0YXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgbmctaHJlZj0ie3s6OiRjdHJsLkRldGFpbC5kZXRhaWxVcmx9fSIgbmctc3dpdGNoPSIkY3RybC5EZXRhaWwuZGVmYXVsdFByZXZpZXdJZCAhPSB1bmRlZmluZWQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNlbnRlciBhdmF0YXIgY2hhbm5lbC1kZWZhdWx0LWF2YXRhciIgbmctY2xhc3M9IidkZWZhdWx0LScgKyAkY3RybC5EZXRhaWwuZGVmYXVsdFByZXZpZXdJZCIgbmctc3dpdGNoLXdoZW49InRydWUiPnt7OjokY3RybC5EZXRhaWwubmFtZS5jaGFyQXQoMCl9fTwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNlbnRlciBhdmF0YXIiIG5nLXN0eWxlPSI6OntiYWNrZ3JvdW5kSW1hZ2U6ICd1cmwoXCcnKyRjdHJsLkRldGFpbC5wcmV2aWV3VXJsKydcJyknfSIgbmctc3dpdGNoLXdoZW49ImZhbHNlIj48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNsZWFyZml4Ij48L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjbGVhcmZpeCI+PC9kaXY+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQo8L2Rpdj4NCg0KPGRpdiBjbGFzcz0iY2hhbm5lbC1kZXNjcmlwdGlvbi13cmFwcGVyIiBuZy1jbGFzcz0ieydleHBhbmQnIDogJGN0cmwuRGV0YWlsLlZpc2libGVEZXNjcmlwdGlvbn0iPg0KICAgIDxkaXYgY2xhc3M9ImNoYW5uZWwtc3RhdC1kZXNjcmlwdGlvbiB2aXNpYmxlLXhzIj4NCiAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyLWZsdWlkIj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTEyIGNoYW5uZWwtc3RhdCI+DQogICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhdC1jb3VudCIgbmctYmluZD0iOjokY3RybC5EZXRhaWwudmlld1ZpZGVvQ291bnQgfCBtZWdhTnVtYmVyIj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICA8bmctcGx1cmFsaXplIGNvdW50PSI6OiRjdHJsLkRldGFpbC52aWV3VmlkZW9Db3VudCIgd2hlbj0ieydvbmUnOid7ezo6TG9jLlN0YXQuVmlld1ZpZGVvQ291bnQuT25lfX0nLCdmZXcnOid7ezo6TG9jLlN0YXQuVmlld1ZpZGVvQ291bnQuRmV3fX0nLCdtYW55Jzone3s6OkxvYy5TdGF0LlZpZXdWaWRlb0NvdW50Lk1hbnl9fScsJ290aGVyJzone3s6OkxvYy5TdGF0LlZpZXdWaWRlb0NvdW50Lk90aGVyfX0nfSI+PC9uZy1wbHVyYWxpemU+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0YXQtY291bnQiIG5nLWJpbmQ9Ijo6JGN0cmwuRGV0YWlsLnN1YnNjcmliZXJzQ291bnQgfCBtZWdhTnVtYmVyIj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICA8bmctcGx1cmFsaXplIGNvdW50PSI6OiRjdHJsLkRldGFpbC5zdWJzY3JpYmVyc0NvdW50IiB3aGVuPSJ7J29uZSc6J3t7OjpMb2MuU3RhdC5TdWJzY3JpYmVyc0NvdW50Lk9uZX19JywnZmV3Jzone3s6OkxvYy5TdGF0LlN1YnNjcmliZXJzQ291bnQuRmV3fX0nLCdtYW55Jzone3s6OkxvYy5TdGF0LlN1YnNjcmliZXJzQ291bnQuTWFueX19Jywnb3RoZXInOid7ezo6TG9jLlN0YXQuU3Vic2NyaWJlcnNDb3VudC5PdGhlcn19J30iPjwvbmctcGx1cmFsaXplPg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjbGVhcmZpeCI+PC9kaXY+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQogICAgPGRpdj4NCiAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyLWZsdWlkIj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTEyIGNoYW5uZWwtZGVzY3JpcHRpb24iIG5nLWJpbmQ9Ijo6JGN0cmwuRGV0YWlsLmRlc2NyaXB0aW9uIiBuZy1pZj0iKCRjdHJsLkRldGFpbC5kZXNjcmlwdGlvbiB8fCAnJykubGVuZ3RoID4gMCI+PC9kaXY+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2xlYXJmaXgiPjwvZGl2Pg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KPC9kaXY+DQo8L3NjcmlwdD4NCjxzY3JpcHQgdHlwZT0idGV4dC9uZy10ZW1wbGF0ZSIgaWQ9Ii9hcHAvY29tcG9uZW50cy9jaGFubmVsL3NoYXJlZC9yZWxhdGVkLXZpZGVvcy5odG1sIj4NCjxkaXYgY2xhc3M9InZpZGVvcyBhbGJ1bS12aWRlb3Mgbm8tY2hhbm5lbC1wcmV2aWV3Ij4NCiAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiIG5nLWlmPSIkY3RybC5WaWRlb0xpc3QgIT0gdW5kZWZpbmVkIj4NCiAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1sZy0xMCBjb2wtbGctb2Zmc2V0LTEiPg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC14cy0xMiBhbGJ1bS10aXRsZSIgbmctc3dpdGNoIG9uPSIkY3RybC5UYWdzLmxlbmd0aCA+IDAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGFncy1jb250YWluZXIiIG5nLXN3aXRjaC13aGVuPSJ0cnVlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBuZy1yZXBlYXQ9InRhZyBpbiAkY3RybC5UYWdzIiBjbGFzcz0idGFnIiBuZy1ocmVmPSJ7ezo6JGN0cmwuQXJjaGl2ZVVybCB8IGNoYW5uZWxBcmNoaXZlVXJsIDogdGFnfX0iIHRpdGxlPSJ7ezo6JGN0cmwuTG9jLkZpbHRlckJ5VGFnIHwgbXlsVHJhbnNsYXRlIDogKHt0YWc6IHRhZ30pIH19Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InNoYXJwIj4jPC9zcGFuPjxzcGFuIG5nLWJpbmQ9Ijo6dGFnIj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN1YnNjcmliZS1idXR0b24iIHRlbXBsYXRlPSJSZWxhdGVkIiB0eXBlPSJDaGFubmVsVGFnIiBjaGFubmVsPSJ7eyRjdHJsLkNoYW5uZWxJZH19IiB0YWc9Int7JGN0cmwuVGFnc1swXX19IiBuZy1zaG93PSIkY3RybC5UYWdzLmxlbmd0aCA9PT0gMSAmJiAhJGN0cmwuSGFzT3duIiB0aXRsZT0ie3s6OiRjdHJsLkxvYy5TVUJTQ1JJUFRJT05fVEFHfX0iPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjbGVhcmZpeCI+PC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRhZ3MtY29udGFpbmVyIiBuZy1zd2l0Y2gtd2hlbj0iZmFsc2UiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJ0YWciIG5nLWhyZWY9Int7OjokY3RybC5BcmNoaXZlVXJsIHwgY2hhbm5lbEFyY2hpdmVVcmwgOiBudWxsIDogJGN0cmwuVHlwZSB9fSIgbmctYmluZD0iOjokY3RybC5Mb2MgfCBteWxUIDogJ1JlbGF0ZWRUaXRsZV8nICsgJGN0cmwuVHlwZSI+PC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+DQogICAgICAgICAgICAgICAgICAgIDx2aWRlby1lbGVtZW50IGNsYXNzPSJjb21wb25lbnQtaXRlbSIgbmctcmVwZWF0LXN0YXJ0PSJ2aWRlbyBpbiAkY3RybC5WaWRlb0xpc3QuZWxlbWVudHMiIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXZpZGVvPSJ2aWRlbyINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS11cmwtc3VmaXg9IntyZWxfZmlsdGVyOiAkY3RybC5SZWxGaWx0ZXIsIHJlbF90YWc6ICRjdHJsLlRhZywgcmVsX2Q6dmlkZW8uY3JlYXRlRGF0ZSB9IiANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1saXN0ZW4tcGxheWVyPSJ0cnVlIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWxvYz0iOjokY3RybC5Db21tb25Mb2MiPg0KICAgICAgICAgICAgICAgICAgICA8L3ZpZGVvLWVsZW1lbnQ+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIG5nLXJlcGVhdC1lbmQ+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IG5nLXJlcGVhdC1zdGFydD0iZW1wdHkgaW4gICRjdHJsLlZpZGVvTGlzdC5lbGVtZW50cyB8IGVtcHR5SXRlbXMiIGNsYXNzPSJlbXB0eS1pdGVtIj48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gbmctcmVwZWF0LWVuZD48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdHJldGNoIj48L3NwYW4+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQogICAgICAgIDxkaXYgY2xhc3M9ImNsZWFyZml4Ij48L2Rpdj4NCiAgICAgICAgPGRpdiBjbGFzcz0iZW1wdHktbGlzdC1wbHVnIiBuZy1pZj0iJGN0cmwuVmlkZW9MaXN0LmVsZW1lbnRzLmxlbmd0aCA9PSAwICYmICF2aWRlb0xpc3QuJGZhaWx1cmUiPjwvZGl2Pg0KICAgICAgICA8ZGl2IGNsYXNzPSJlcnJvci1saXN0LXBsdWciIG5nLWlmPSIkY3RybC5WaWRlb0xpc3QuJGZhaWx1cmUiPjwvZGl2Pg0KICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciIG5nLWlmPSIkY3RybC5WaWRlb0xpc3QuZWxlbWVudHMubGVuZ3RoID4gMCAmJiAhJGN0cmwuVmlkZW9MaXN0LiRmYWlsdXJlIj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1sZy0xMCBjb2wtbGctb2Zmc2V0LTEiPg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InBhZ2luZyBkYXJrIj4NCiAgICAgICAgICAgICAgICAgICAgPG5nLXN3aXRjaCBvbj0iJGN0cmwuVmlkZW9MaXN0LnByZXYiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiBuZy1jbGljaz0iOjokY3RybC5Hbygoe3JlbF9kOm51bGwsIHJlbF9zb3J0OidkZXNjJ30gfCBsb2NhdGlvbikpIiB0aXRsZT0ie3s6OiRjdHJsLkNvbW1vbkxvYy5OYXZpZ2F0aW9uLnN0YXJ0fX0iIGNsYXNzPSJzdGFydCBjb21tb24taWNvbiIgbmctc3dpdGNoLXdoZW49InRydWUiPjwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgbmctY2xpY2s9IiRjdHJsLkdvKCh7cmVsX2Q6JGN0cmwuVmlkZW9MaXN0Lm1heERhdGUsIHJlbF9zb3J0Oidhc2MnfSB8IGxvY2F0aW9uKSkiIHRpdGxlPSJ7ezo6JGN0cmwuQ29tbW9uTG9jLk5hdmlnYXRpb24uYmFja319IiBjbGFzcz0icHJldiBjb21tb24taWNvbiIgbmctc3dpdGNoLXdoZW49InRydWUiPjwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgdGl0bGU9Int7OjokY3RybC5Db21tb25Mb2MuTmF2aWdhdGlvbi5zdGFydH19IiBjbGFzcz0ic3RhcnQgY29tbW9uLWljb24gZGlzYWJsZWQiIG5nLXN3aXRjaC13aGVuPSJmYWxzZSI+PC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiB0aXRsZT0ie3s6OiRjdHJsLkNvbW1vbkxvYy5OYXZpZ2F0aW9uLmJhY2t9fSIgY2xhc3M9InByZXYgY29tbW9uLWljb24gZGlzYWJsZWQiIG5nLXN3aXRjaC13aGVuPSJmYWxzZSI+PC9hPg0KICAgICAgICAgICAgICAgICAgICA8L25nLXN3aXRjaD4NCiAgICAgICAgICAgICAgICAgICAgPG5nLXN3aXRjaCBvbj0iJGN0cmwuVmlkZW9MaXN0Lm5leHQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiBuZy1jbGljaz0iJGN0cmwuR28oKHtyZWxfZDokY3RybC5WaWRlb0xpc3QubWluRGF0ZSwgcmVsX3NvcnQ6J2Rlc2MnfSB8IGxvY2F0aW9uKSkiIHRpdGxlPSJ7ezo6JGN0cmwuQ29tbW9uTG9jLk5hdmlnYXRpb24ubmV4dH19IiBjbGFzcz0ibmV4dCBjb21tb24taWNvbiIgbmctc3dpdGNoLXdoZW49InRydWUiPjwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgbmctY2xpY2s9Ijo6JGN0cmwuR28oKHtyZWxfZDpudWxsLCByZWxfc29ydDonYXNjJ30gfCBsb2NhdGlvbikpIiB0aXRsZT0ie3s6OiRjdHJsLkNvbW1vbkxvYy5OYXZpZ2F0aW9uLmVuZH19IiBjbGFzcz0iZW5kIGNvbW1vbi1pY29uIiBuZy1zd2l0Y2gtd2hlbj0idHJ1ZSI+PC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiB0aXRsZT0ie3s6OiRjdHJsLkNvbW1vbkxvYy5OYXZpZ2F0aW9uLm5leHR9fSIgY2xhc3M9Im5leHQgY29tbW9uLWljb24gZGlzYWJsZWQiIG5nLXN3aXRjaC13aGVuPSJmYWxzZSI+PC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiB0aXRsZT0ie3s6OiRjdHJsLkNvbW1vbkxvYy5OYXZpZ2F0aW9uLmVuZH19IiBjbGFzcz0iZW5kIGNvbW1vbi1pY29uIGRpc2FibGVkIiBuZy1zd2l0Y2gtd2hlbj0iZmFsc2UiPjwvYT4NCiAgICAgICAgICAgICAgICAgICAgPC9uZy1zd2l0Y2g+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQogICAgICAgIDxkaXYgY2xhc3M9ImNsZWFyZml4Ij48L2Rpdj4NCiAgICA8L2Rpdj4NCjwvZGl2Pg0KDQo8L3NjcmlwdD4NCjxzY3JpcHQgdHlwZT0idGV4dC9uZy10ZW1wbGF0ZSIgaWQ9Ii9hcHAvY29tcG9uZW50cy9jaGFubmVsL3NoYXJlZC9sYXRlc3QtdmlkZW9zLmh0bWwiPg0KPGRpdiBjbGFzcz0idmlkZW9zIG5vLWNoYW5uZWwtcHJldmlldyI+DQogICAgPGRpdiBjbGFzcz0iY29tcG9uZW50LWhlYWRlci13cmFwcGVyIj4NCiAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyLWZsdWlkIj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTEyIj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50LWhlYWRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbW1vbi1pY29uIGZyYW1lIHN0YXItZnJhbWUiPjwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb21wb25lbnQtbmFtZSIgbmctYmluZD0iOjokY3RybC5Mb2MuTGF0ZXN0VmlkZW9zLlRpdGxlICsgJzonIj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgbmctaHJlZj0ie3s6OiRjdHJsLkVkaXRWaWRlb3NVcmx9fSIgbmctaWY9Ijo6JGN0cmwuSGFzT3duIiAgY2xhc3M9ImVkaXQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29tbW9uLWljb24iPjwvc3Bhbj4gPHNwYW4gY2xhc3M9InRleHQgaGlkZGVuLXhzICIgbmctYmluZD0iOjokY3RybC5Mb2MuRWRpdEJ1dHRvbi5FZGl0Ij48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+DQogICAgICAgIDxkaXYgY2xhc3M9InJvdyI+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbGctMTAgY29sLWxnLW9mZnNldC0xIj4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPg0KICAgICAgICAgICAgICAgICAgICA8dmlkZW8tZWxlbWVudCBkYXRhLXZpZGVvPSJ2aWRlbyIgZGF0YS1sb2M9Ijo6JGN0cmwuQ29tbW9uTG9jIiBkYXRhLWxpc3Rlbi1wbGF5ZXI9InRydWUiIG5nLXJlcGVhdC1zdGFydD0idmlkZW8gaW4gJGN0cmwuVmlkZW9MaXN0LmVsZW1lbnRzIiBjbGFzcz0iY29tcG9uZW50LWl0ZW0iPjwvdmlkZW8tZWxlbWVudD4NCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gbmctcmVwZWF0LWVuZD48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgbmctcmVwZWF0LXN0YXJ0PSJlbXB0eSBpbiAkY3RybC5WaWRlb0xpc3QuZWxlbWVudHMgfCBlbXB0eUl0ZW1zIiBjbGFzcz0iZW1wdHktaXRlbSI+PC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIG5nLXJlcGVhdC1lbmQ+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RyZXRjaCI+PC9zcGFuPg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2Pg0KICAgICAgICA8ZGl2IGNsYXNzPSJlbXB0eS1saXN0LXBsdWciIG5nLWlmPSIkY3RybC5WaWRlb0xpc3QuZWxlbWVudHMubGVuZ3RoID09IDAgJiYgISRjdHJsLlZpZGVvTGlzdC4kZmFpbHVyZSI+PC9kaXY+DQogICAgICAgIDxkaXYgY2xhc3M9ImVycm9yLWxpc3QtcGx1ZyIgbmctaWY9IiRjdHJsLlZpZGVvTGlzdC4kZmFpbHVyZSI+PC9kaXY+DQogICAgICAgIDxkaXYgY2xhc3M9InJvdyIgbmctaWY9IiRjdHJsLlZpZGVvTGlzdC5lbGVtZW50cy5sZW5ndGggIT0gMCAmJiAhJGN0cmwuVmlkZW9MaXN0LiRmYWlsdXJlIj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1sZy0xMCBjb2wtbGctb2Zmc2V0LTEiPg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC14cy02IHNob3ctaXRlbXMtYnV0dG9uIiBuZy1jbGFzcz0ie2Rpc2FibGVkIDogISRjdHJsLlZpZGVvTGlzdC5uZXh0LCBsb2FkaW5nIDogISRjdHJsLlZpZGVvTGlzdC4kcmVzb2x2ZWR9Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgbmctY2xpY2s9IiRjdHJsLk1vcmVMYXRlc3RWaWRlb3MoKSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im1vcmUtaXRlbXMiPnt7OjokY3RybC5Mb2MuTGF0ZXN0VmlkZW9zLk1vcmVCdXR0b259fTwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsb2FkZXIgY2VudGVyIj48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC14cy02IHNob3ctaXRlbXMtYnV0dG9uIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIG5nLWhyZWY9Int7JGN0cmwuVmlkZW9zVXJsfX0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4teHMiIG5nLWJpbmQ9Ijo6JGN0cmwuTG9jLlNob3ciPjwvc3Bhbj4ge3s6OiRjdHJsLkxvYy5BbGx9fQ0KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCiAgICA8ZGl2IGNsYXNzPSJjbGVhcmZpeCI+PC9kaXY+DQo8L2Rpdj4NCjwvc2NyaXB0Pg0KPHNjcmlwdCB0eXBlPSJ0ZXh0L25nLXRlbXBsYXRlIiBpZD0iL2FwcC9jb21wb25lbnRzL2NoYW5uZWwvc2hhcmVkL2Zhdm9yaXRlLXRhZ3MuaHRtbCI+DQo8ZGl2IGNsYXNzPSJmYXZvcml0ZXMiIG5nLWlmPSIkY3RybC5IYXNPd24gfHwgJGN0cmwuRmF2b3JpdGVUYWdzLmVsZW1lbnRzLmxlbmd0aCAhPSAwICYmICEkY3RybC5IaWRlIj4NCg0KICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudC1oZWFkZXItd3JhcHBlciI+DQogICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lci1mbHVpZCI+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC14cy0xMiAgY29tcG9uZW50LWluZm8td3JhcHBlciI+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudC1oZWFkZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb21tb24taWNvbiB0YWdzLWljb24iPjwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb21wb25lbnQtbmFtZSIgbmctYmluZD0iOjokY3RybC5Mb2MuRmF2b3JpdGVUYWdzLlRpdGxlICsgJzonIj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgbmctaHJlZj0ie3s6OiRjdHJsLkVkaXRGYXZvcml0ZVRhZ3NVcmx9fSIgbmctaWY9Ijo6JGN0cmwuSGFzT3duIiBjbGFzcz0iZWRpdCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb21tb24taWNvbiI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGV4dCBoaWRkZW4teHMiIG5nLWJpbmQ9Ijo6JGN0cmwuTG9jLkVkaXRCdXR0b24uRWRpdCI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCg0KICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+DQogICAgICAgIDxkaXYgY2xhc3M9InJvdyI+DQoNCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1sZy0xMCBjb2wtbGctb2Zmc2V0LTEiIG5nLWlmPSIkY3RybC5GYXZvcml0ZVRhZ3MuZWxlbWVudHMubGVuZ3RoICE9IDAgJiYgISRjdHJsLkhpZGUiPg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+DQogICAgICAgICAgICAgICAgICAgIDxmYXZvcml0ZS10YWctZWxlbWVudCBuZy1yZXBlYXQtc3RhcnQ9InRhZyBpbiAkY3RybC5GYXZvcml0ZVRhZ3MuZWxlbWVudHMiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iY29tcG9uZW50LWl0ZW0iDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXRhZz0idGFnIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1sb2M9Ijo6Q29tbW9uTG9jIj4NCiAgICAgICAgICAgICAgICAgICAgPC9mYXZvcml0ZS10YWctZWxlbWVudD4NCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gbmctcmVwZWF0LWVuZD48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgbmctcmVwZWF0LXN0YXJ0PSJlbXB0eSBpbiAkY3RybC5GYXZvcml0ZVRhZ3MuZWxlbWVudHMgfCBlbXB0eUl0ZW1zIiBjbGFzcz0iZW1wdHktaXRlbSI+PC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIG5nLXJlcGVhdC1lbmQ+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RyZXRjaCI+PC9zcGFuPg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImVycm9yLWxpc3QtcGx1ZyIgbmctaWY9IiRjdHJsLkZhdm9yaXRlVGFncy4kZmFpbHVyZSI+PC9kaXY+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93IiBuZy1pZj0iISRjdHJsLkZhdm9yaXRlVGFncy4kZmFpbHVyZSI+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC14cy02IHNob3ctaXRlbXMtYnV0dG9uIiBuZy1jbGFzcz0ie2Rpc2FibGVkIDogISRjdHJsLkZhdm9yaXRlVGFncy5uZXh0LCBsb2FkaW5nIDogISRjdHJsLkZhdm9yaXRlVGFncy4kcmVzb2x2ZWR9Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgbmctY2xpY2s9IiRjdHJsLk1vcmVGYXZvcml0ZVRhZ3MoKSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im1vcmUtaXRlbXMiIG5nLWJpbmQ9Ijo6JGN0cmwuTG9jLkZhdm9yaXRlVGFncy5Nb3JlQnV0dG9uIj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9hZGVyIGNlbnRlciI+PC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtNiBzaG93LWl0ZW1zLWJ1dHRvbiI+DQogICAgICAgICAgICAgICAgICAgICAgICA8YSBuZy1ocmVmPSJ7ezo6JGN0cmwuRmF2b3JpdGVUYWdzVXJsfX0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4teHMiIG5nLWJpbmQ9Ijo6JGN0cmwuTG9jLlNob3ciPjwvc3Bhbj4ge3s6OiRjdHJsLkxvYy5BbGx9fQ0KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLWxnLTEwIGNvbC1sZy1vZmZzZXQtMSBuby1pdGVtIiBuZy1pZj0iJGN0cmwuRmF2b3JpdGVUYWdzLmVsZW1lbnRzLmxlbmd0aCA9PSAwIHx8ICRjdHJsLkhpZGUiPg0KICAgICAgICAgICAgICAgIDxwIG5nLWJpbmQ9IiRjdHJsLkxvYy5GYXZvcml0ZVRhZ3MuTm9JdGVtTWVzc2VnZSI+PC9wPg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyBvdmVyZmxvdy1oZWdodCI+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudC1pdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkbCBjbGFzcz0icG9zdGVyLXdyYXBwZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkdCBjbGFzcz0icG9zdGVyLWltYWdlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNlbnRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iL2Fzc2V0cy9pbWFnZXMvY2F0ZWdvcnkvZmF2b3JpdGUtdGFncy9UcmF2ZWxzLmpwZyIgYWx0PSJuby1pdGVtLVRyYXZlbHMiIC8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2R0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkZCBjbGFzcz0idmlkZW8tdGl0bGUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGFncy1jb250YWluZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRhZyB2aWRlby1uYW1lIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic2hhcnAiPiM8L3NwYW4+PHNwYW4gbmctYmluZD0iOjokY3RybC5Mb2MuRmF2b3JpdGVUYWdzLkV4YW1wbGUuVGFnTmFtZTEiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idmlkZW8tY291bnQiPjE3MTwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kbD4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudC1pdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkbCBjbGFzcz0icG9zdGVyLXdyYXBwZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkdCBjbGFzcz0icG9zdGVyLWltYWdlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNlbnRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iL2Fzc2V0cy9pbWFnZXMvY2F0ZWdvcnkvZmF2b3JpdGUtdGFncy9Db29raW5nLmpwZyIgYWx0PSJuby1pdGVtLUNvb2tpbmciIC8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2R0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkZCBjbGFzcz0idmlkZW8tdGl0bGUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGFncy1jb250YWluZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRhZyB2aWRlby1uYW1lIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic2hhcnAiPiM8L3NwYW4+PHNwYW4gbmctYmluZD0iOjokY3RybC5Mb2MuRmF2b3JpdGVUYWdzLkV4YW1wbGUuVGFnTmFtZTIiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idmlkZW8tY291bnQiPjM0PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGQ+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2RsPg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPHNwYW4+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnQtaXRlbSI+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGwgY2xhc3M9InBvc3Rlci13cmFwcGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZHQgY2xhc3M9InBvc3Rlci1pbWFnZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjZW50ZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Ii9hc3NldHMvaW1hZ2VzL2NhdGVnb3J5L2Zhdm9yaXRlLXRhZ3MvU3BvcnQuanBnIiBhbHQ9Im5vLWl0ZW0tU3BvcnQiIC8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2R0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkZCBjbGFzcz0idmlkZW8tdGl0bGUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGFncy1jb250YWluZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRhZyB2aWRlby1uYW1lIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic2hhcnAiPiM8L3NwYW4+PHNwYW4gbmctYmluZD0iOjokY3RybC5Mb2MuRmF2b3JpdGVUYWdzLkV4YW1wbGUuVGFnTmFtZTMiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idmlkZW8tY291bnQiPjM5PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGQ+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2RsPg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPHNwYW4+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJlbXB0eS1pdGVtIj48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZW1wdHktaXRlbSI+PC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImVtcHR5LWl0ZW0iPjwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdHJldGNoIj48L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KICAgIDxkaXYgY2xhc3M9ImNsZWFyZml4Ij48L2Rpdj4NCjwvZGl2Pg0KPGRpdiBjbGFzcz0iY2xlYXJmaXgiPjwvZGl2Pg0KPC9zY3JpcHQ+DQo8c2NyaXB0IHR5cGU9InRleHQvbmctdGVtcGxhdGUiIGlkPSIvYXBwL2NvbXBvbmVudHMvY2hhbm5lbC9zaGFyZWQvdXNlci1jaGFubmVscy5odG1sIj4NCjxkaXYgY2xhc3M9ImNoYW5uZWxzIiBuZy1pZj0iJGN0cmwuQ2hhbm5lbExpc3QuZWxlbWVudHMubGVuZ3RoICE9IDAiPg0KICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudC1oZWFkZXItd3JhcHBlciI+DQogICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lci1mbHVpZCI+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC14cy0xMiI+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudC1oZWFkZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb21tb24taWNvbiBjaGFubmVsLWhlYWQtaWNvbiI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbW1vbi1pY29uIGNlbnRlciBzdGFyIj48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj48c3BhbiBjbGFzcz0iY29tcG9uZW50LW5hbWUgZGlzcGxheS10YWJsZS1jZWxsIiBuZy1iaW5kPSI6OiRjdHJsLkxvYy5PdGhlclVzZXJDaGFubmVscy5UaXRsZSI+PC9zcGFuPjwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCiAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPg0KICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLWxnLTEwIGNvbC1sZy1vZmZzZXQtMSI+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBuZy1yZXBlYXQtc3RhcnQ9ImNoYW5uZWwgaW4gJGN0cmwuQ2hhbm5lbExpc3QuZWxlbWVudHMiIGNsYXNzPSJjb21wb25lbnQtaXRlbSI+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGwgY2xhc3M9InBvc3Rlci13cmFwcGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZHQgY2xhc3M9InBvc3Rlci1pbWFnZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIG5nLWhyZWY9Int7OjpjaGFubmVsLmRldGFpbFVybH19IiBuZy1zd2l0Y2g9ImNoYW5uZWwuZGVmYXVsdFByZXZpZXdJZCAhPSB1bmRlZmluZWQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByZXZpZXcgY2hhbm5lbC1kZWZhdWx0LWF2YXRhciIgbmctY2xhc3M9IidkZWZhdWx0LScgKyBjaGFubmVsLmRlZmF1bHRQcmV2aWV3SWQiIG5nLXN3aXRjaC13aGVuPSJ0cnVlIj57ezo6Y2hhbm5lbC5uYW1lLmNoYXJBdCgwKX19PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByZXZpZXciIG5nLXN0eWxlPSI6OntiYWNrZ3JvdW5kSW1hZ2U6ICd1cmwoXCcnK2NoYW5uZWwucHJldmlld1VybCsnXCcpJ30iIG5nLXN3aXRjaC13aGVuPSJmYWxzZSI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kdD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGQgY2xhc3M9ImNoYW5uZWwtdGl0bGUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdWJzY3JpYmUtYnV0dG9uIiB0ZW1wbGF0ZT0iQ2hhbm5lbCIgdHlwZT0iQ2hhbm5lbCIgY2hhbm5lbD0ie3s6OmNoYW5uZWwuaWR9fSIgdGl0bGU9Int7Ojpsb2NCYXNlLlN1YnNjcmlwdGlvbi5TdWJzY3JpYmVCeUNoYW5uZWx9fSI+PC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Int7OjpjaGFubmVsLmRldGFpbFVybH19IiBjbGFzcz0iY2hhbm5lbC1uYW1lIj57ezo6Y2hhbm5lbC5uYW1lfX08L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kZD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGw+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8c3BhbiBuZy1yZXBlYXQtZW5kPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBuZy1yZXBlYXQtc3RhcnQ9ImVtcHR5IGluICRjdHJsLkNoYW5uZWxMaXN0LmVsZW1lbnRzIHwgZW1wdHlJdGVtcyIgY2xhc3M9ImVtcHR5LWl0ZW0iPjwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8c3BhbiBuZy1yZXBlYXQtZW5kPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InN0cmV0Y2giPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJlbXB0eS1saXN0LXBsdWciIG5nLWlmPSIkY3RybC5DaGFubmVsTGlzdC5lbGVtZW50cy5sZW5ndGggPT0gMCAmJiAhJGN0cmwuQ2hhbm5lbExpc3QuJGZhaWx1cmUiPjwvZGl2Pg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImVycm9yLWxpc3QtcGx1ZyIgdHlwZT0iU3RhciIgbmctaWY9IiRjdHJsLkNoYW5uZWxMaXN0LiRmYWlsdXJlIj48L2Rpdj4NCg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyIgbmctaWY9IiEkY3RybC5DaGFubmVsTGlzdC4kZmFpbHVyZSAmJiAoJGN0cmwuQ2hhbm5lbExpc3QubmV4dCA9PSB0cnVlIHx8ICgkY3RybC5DaGFubmVsTGlzdC5uZXh0ID09IGZhbHNlICYmICRjdHJsLkNoYW5uZWxMaXN0LmVsZW1lbnRzLmxlbmd0aCA+ICRjdHJsLkNoYW5uZWxDb3VudCkpIj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTYgc2hvdy1pdGVtcy1idXR0b24iIG5nLWNsYXNzPSJ7ZGlzYWJsZWQgOiAhJGN0cmwuQ2hhbm5lbExpc3QubmV4dCwgbG9hZGluZyA6ICEkY3RybC5DaGFubmVsTGlzdC4kcmVzb2x2ZWR9Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgbmctY2xpY2s9IiRjdHJsLk1vcmVDaGFubmVscygpIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibW9yZS1pdGVtcyIgbmctYmluZD0iOjokY3RybC5Mb2MuT3RoZXJVc2VyQ2hhbm5lbHMuTW9yZUJ1dHRvbiI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxvYWRlciBjZW50ZXIiPjwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTYgc2hvdy1pdGVtcy1idXR0b24iPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgbmctaHJlZj0ie3s6OiRjdHJsLkNoYW5uZWxzVXJsfX0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4teHMiIG5nLWJpbmQ9Ijo6JGN0cmwuTG9jLlNob3ciPjwvc3Bhbj4ge3s6OiRjdHJsLkxvYy5BbGx9fQ0KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2Pg0KICAgICAgICA8ZGl2IGNsYXNzPSJjbGVhcmZpeCI+PC9kaXY+DQogICAgPC9kaXY+DQo8L2Rpdj4NCjxkaXYgY2xhc3M9ImNsZWFyZml4Ij48L2Rpdj4NCjwvc2NyaXB0Pg0KPHNjcmlwdCB0eXBlPSJ0ZXh0L25nLXRlbXBsYXRlIiBpZD0iL2FwcC9jb21wb25lbnRzL2NoYW5uZWwvc2hhcmVkL2VtcHR5LXZpZGVvcy5odG1sIj4NCjxkaXYgY2xhc3M9InZpZGVvcyI+DQogICAgPGRpdiBjbGFzcz0iY29tcG9uZW50LWhlYWRlci13cmFwcGVyIj4NCiAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyLWZsdWlkIj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTEyIj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50LWhlYWRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbW1vbi1pY29uIGZyYW1lIHN0YXItZnJhbWUiPjwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb21wb25lbnQtbmFtZSIgbmctYmluZD0iOjpMb2MuTGF0ZXN0VmlkZW9zLlRpdGxlICsgJzonIj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQogICAgPGRpdiBjbGFzcz0idXBsb2FkLWludml0ZSI+DQogICAgICAgIDxpbWcgc3JjPSIvYXNzZXRzL2ltYWdlcy9lcnJvci1sb2FkLXZpZGVvLnBuZyIgLz4NCiAgICAgICAgPGRpdiBjbGFzcz0iZXJyb3ItbWVzc2FnZSI+DQogICAgICAgICAgICA8c3BhbiBjbGFzcz0iZXJyb3ItbWVzc2FnZS10aXR0bGUiIG5nLWJpbmQ9Ijo6TG9jLk5vVmlkZW9BZGRUaGVtLlRpdHRsZSI+PC9zcGFuPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZXJyb3ItbWVzc2FnZS10ZXh0Ij4NCiAgICAgICAgICAgICAgICA8c3BhbiBuZy1iaW5kPSI6OkxvYy5Ob1ZpZGVvQWRkVGhlbS5UZXh0Ij48L3NwYW4+IMKrPGEgbmctaHJlZj0ie3s6OlJvdXRlUGF0aC51c2VyTGF0ZXJ9fSIgbmctYmluZD0iOjpMb2MuTm9WaWRlb0FkZFRoZW0uU2VlTGF0ZSI+PC9hPsK7DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQogICAgICAgIDxhIGNsYXNzPSJidXR0b24gY29tbW9uLWljb24gdXBsb2FkIiBuZy1ocmVmPSJ7ezo6Um91dGVQYXRoLnVwbG9hZH19Ij4NCiAgICAgICAgICAgIDxzcGFuPnt7OjpMb2NCYXNlLlVwbG9hZFZpZGVvfX08L3NwYW4+DQogICAgICAgIDwvYT4NCiAgICA8L2Rpdj4NCjwvZGl2Pg0KPC9zY3JpcHQ+DQo8c2NyaXB0IHR5cGU9InRleHQvbmctdGVtcGxhdGUiIGlkPSIvYXBwL2NvbXBvbmVudHMvY2hhbm5lbC9zaGFyZWQvcGx1Z3MuaHRtbCI+DQo8ZGl2IGNsYXNzPSJwbHVncyI+DQoNCiAgICA8ZGl2IG5nLWlmPSI6OklzRW1wdHlDaGFubmVsICYmICFJc1ZpZGVvTm90UGxheSIgY2xhc3M9ImNvbXBvbmVudC1oZWFkZXItd3JhcHBlciI+DQogICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lci1mbHVpZCI+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC14cy0xMiI+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudC1oZWFkZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb21tb24taWNvbiBmcmFtZSBzdGFyLWZyYW1lIj48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29tcG9uZW50LW5hbWUiIG5nLWJpbmQ9Ijo6TG9jLkxhdGVzdFZpZGVvcy5UaXRsZSArICc6JyI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KDQogICAgPGRpdiBjbGFzcz0iY29udGFpbmVyLWZsdWlkIiBuZy1pZj0iOjpJc0VtcHR5Q2hhbm5lbCAmJiAhSXNWaWRlb05vdFBsYXkiPg0KICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTEyIj4NCiAgICAgICAgICAgICAgICA8ZGl2IG5nLWlmPSI6Okhhc093biIgY2xhc3M9InVwbG9hZC1pbnZpdGUgZXJyb3ItbGlzdCI+DQogICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSIvYXNzZXRzL2ltYWdlcy9lcnJvci1sb2FkLXZpZGVvLnBuZyIgLz4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZXJyb3ItbWVzc2FnZSI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZXJyb3ItbWVzc2FnZS10aXR0bGUiIG5nLWJpbmQ9Ijo6TG9jLk5vVmlkZW9BZGRUaGVtLlRpdHRsZSI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZXJyb3ItbWVzc2FnZS10ZXh0Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBuZy1iaW5kPSI6OkxvYy5Ob1ZpZGVvQWRkVGhlbS5UZXh0Ij48L3NwYW4+IMKrPGEgbmctaHJlZj0ie3s6OlJvdXRlUGF0aC51c2VyTGF0ZXJ9fSIgbmctYmluZD0iOjpMb2MuTm9WaWRlb0FkZFRoZW0uU2VlTGF0ZSI+PC9hPsK7DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJidXR0b24gY29tbW9uLWljb24gdXBsb2FkIiBuZy1ocmVmPSJ7ezo6Um91dGVQYXRoLnVwbG9hZH19Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIG5nLWJpbmQ9Ijo6TG9jQmFzZS5VcGxvYWRWaWRlbyI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPGRpdiBuZy1pZj0iOjohSGFzT3duIiBjbGFzcz0idXBsb2FkLWludml0ZSBlcnJvci1saXN0Ij4NCiAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Ii9hc3NldHMvaW1hZ2VzL25vLXNpZ25hbC5wbmciIC8+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImVycm9yLW1lc3NhZ2UiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImVycm9yLW1lc3NhZ2UtdGl0dGxlIiBuZy1iaW5kPSI6OkxvYy5Ob1NpZ25hbCI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCiAgICAgICAgPGRpdiBjbGFzcz0iY2xlYXJmaXgiPjwvZGl2Pg0KICAgIDwvZGl2Pg0KDQogICAgPGRpdiBjbGFzcz0iZXJyb3ItcGx1ZyIgbmctaWY9IklzVmlkZW9Ob3RQbGF5Ij4NCiAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyLWZsdWlkIj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTEyIGVycm9yLW1lYXNzYWdlIj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZXJyb3ItbGlzdCI+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJlcnJvci1pbWFnZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Ii9hc3NldHMvaW1hZ2VzL25vdF9hdmFpbGFibGUucG5nIiBuZy1pZj0iVmlkZW9TdGF0dXMgPT0gMiIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJlcnJvci1saXN0LXRpdGxlLW1haW4iIG5nLWJpbmQ9IkxvYy5WaWRlb05vdEF2YWlsYWJsZSIgbmctaWY9IlZpZGVvU3RhdHVzID09IDIiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iL2Fzc2V0cy9pbWFnZXMvaW5fcHJvY2Vzc2luZy5wbmciIG5nLWlmPSJWaWRlb1N0YXR1cyA9PSAzIi8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImVycm9yLWxpc3QtdGl0bGUtbWFpbiIgbmctYmluZD0iTG9jLlZpZGVvSW5Qcm9jZXNzaW5nIiBuZy1pZj0iVmlkZW9TdGF0dXMgPT0gMyI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjbGVhcmZpeCI+PC9kaXY+DQogICAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KDQo8L2Rpdj4NCjwvc2NyaXB0Pg0KPHNjcmlwdCB0eXBlPSJ0ZXh0L25nLXRlbXBsYXRlIiBpZD0iL2FwcC9zaGFyZWQvZmF2b3JpdGUtdGFnL2Zhdm9yaXRlLXRhZy1lbGVtZW50Lmh0bWwiPg0KPGRsIGNsYXNzPSJwb3N0ZXItd3JhcHBlciI+DQogICAgPGR0IGNsYXNzPSJwb3N0ZXItaW1hZ2UiPg0KICAgICAgICA8YSBuZy1ocmVmPSJ7ezo6JGN0cmwuRmF2b3JpdGVUYWcuYXJjaGl2ZVVybH19IiBjbGFzcz0iY2VudGVyIiB0aXRsZT0iI3t7OjokY3RybC5GYXZvcml0ZVRhZy5uYW1lfX0iPg0KICAgICAgICAgICAgPGltZyBuZy1zcmM9Int7OjokY3RybC5GYXZvcml0ZVRhZy5wcmV2aWV3VXJsfX0iIC8+DQogICAgICAgIDwvYT4NCg0KICAgICAgICA8c3BhbiBuZy1pZj0iJGN0cmwuRWRpdE1vZGUgJiYgISRjdHJsLlJlc3RvcmVNb2RlIiBjbGFzcz0iZGVsZXRlIGNvbW1vbi1pY29uIiBuZy1jbGljaz0iJGN0cmwub25EZWxldGUoKSI+PC9zcGFuPg0KICAgICAgICA8c3BhbiBuZy1pZj0iJGN0cmwuRWRpdE1vZGUgJiYgJGN0cmwuUmVzdG9yZU1vZGUiIGNsYXNzPSJyZXN0b3JlIGNvbW1vbi1pY29uIiBuZy1jbGljaz0iJGN0cmwub25SZXN0b3JlKCkiPjwvc3Bhbj4NCiAgICAgICAgPHNwYW4gbmctaWY9IiRjdHJsLkVkaXRNb2RlICYmICRjdHJsLkVkaXRQb3NpdGlvbk1vZGUiIGNsYXNzPSJpbnRvcCIgbmctY2xpY2s9IiRjdHJsLkNoYW5nZVBvc2l0aW9uKDEpIiBuZy1iaW5kPSI6OiRjdHJsLkVkaXRMb2MuSW5Ub3AiPjwvc3Bhbj4NCiAgICA8L2R0Pg0KICAgIDxkZCBjbGFzcz0idmlkZW8tdGl0bGUiPg0KICAgICAgICA8YSBjbGFzcz0idGFncy1jb250YWluZXIiIG5nLWhyZWY9Int7OjokY3RybC5GYXZvcml0ZVRhZy5hcmNoaXZlVXJsfX0iIHRpdGxlPSIje3s6OiRjdHJsLkZhdm9yaXRlVGFnLm5hbWV9fSI+DQogICAgICAgICAgICA8c3BhbiBjbGFzcz0idGFnIHZpZGVvLW5hbWUiPg0KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzaGFycCI+Izwvc3Bhbj48c3BhbiBuZy1iaW5kPSI6OiRjdHJsLkZhdm9yaXRlVGFnLm5hbWUiPjwvc3Bhbj4NCiAgICAgICAgICAgIDwvc3Bhbj4NCiAgICAgICAgPC9hPg0KDQogICAgICAgIDxkaXYgY2xhc3M9InRhZy1wb3NpdGlvbi1jb250YWluZXIiIG5nLWlmPSIkY3RybC5FZGl0TW9kZSI+DQogICAgICAgICAgICA8c3BhbiBjbGFzcz0icG9zaXRpb24iIG5nLWlmPSIhJGN0cmwuRWRpdFBvc2l0aW9uTW9kZSIgbmctY2xpY2s9IiRjdHJsLlN0YXJ0RWRpdFBvc2l0aW9uTW9kZSgpIj57ezo6JGN0cmwuRmF2b3JpdGVUYWcucG9zaXRpb259fTwvc3Bhbj4NCiAgICAgICAgICAgIDxmb3JtIG5vdmFsaWRhdGUgbmFtZT0iZm9ybSIgbmctaWY9IiRjdHJsLkVkaXRQb3NpdGlvbk1vZGUiIG5nLXN1Ym1pdD0iJGN0cmwuU3VibWl0Q2hhbmdlUG9zaXRpb24oZm9ybSkiPg0KICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiANCiAgICAgICAgICAgICAgICAgICAgICAgbmFtZT0icG9zaXRpb24iIA0KICAgICAgICAgICAgICAgICAgICAgICBuZy1tb2RlbD0iJGN0cmwuQ3VycmVudFBvc2l0aW9uIiANCiAgICAgICAgICAgICAgICAgICAgICAgZm9jdXM9IiRjdHJsLkZvY3VzSW5wdXQiDQogICAgICAgICAgICAgICAgICAgICAgIGZvY3VzLWVzYz0iJGN0cmwuU3RvcEVkaXRQb3NpdGlvbk1vZGUoKSINCiAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQgDQogICAgICAgICAgICAgICAgICAgICAgIG51bWJlci1yYW5nZSANCiAgICAgICAgICAgICAgICAgICAgICAgbnVtYmVyLXJhbmdlLW1pbj0iMCIgDQogICAgICAgICAgICAgICAgICAgICAgIG51bWJlci1yYW5nZS1tYXg9IjEwMDAiIC8+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1lcnJvciIgbmctc2hvdz0iZm9ybS4kaW52YWxpZCI+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIG5nLXNob3c9ImZvcm0ucG9zaXRpb24uJGVycm9yLnJlcXVpcmVkIiBuZy1iaW5kPSI6OiRjdHJsLkVkaXRMb2MuUmVxdWlyZWRFcnJvciI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8c3BhbiBuZy1zaG93PSJmb3JtLnBvc2l0aW9uLiRlcnJvci5kaWdpdHMiIG5nLWJpbmQ9Ijo6JGN0cmwuRWRpdExvYy5kaWdpdHNFcnJvciI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8c3BhbiBuZy1zaG93PSIhZm9ybS5wb3NpdGlvbi4kZXJyb3IuZGlnaXRzICYmIGZvcm0ucG9zaXRpb24uJGVycm9yLnJhbmdlIiBuZy1iaW5kPSI6OiRjdHJsLkVkaXRMb2MucmFuZ2VFcnJvciI+PC9zcGFuPg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPC9mb3JtPg0KICAgICAgICA8L2Rpdj4NCg0KICAgICAgICA8c3BhbiBjbGFzcz0idmlkZW8tY291bnQiIG5nLWJpbmQ9Ijo6JGN0cmwuRmF2b3JpdGVUYWcudmlkZW9Db3VudCIgdGl0bGU9Int7OjokY3RybC5Mb2MuRmF2b3JpdGVUYWdzLkNvdW50VmlkZW99fSI+PC9zcGFuPg0KICAgIDwvZGQ+DQo8L2RsPg0KPC9zY3JpcHQ+DQo8c2NyaXB0IHR5cGU9InRleHQvbmctdGVtcGxhdGUiIGlkPSIvYXBwL3NoYXJlZC92aWRlby1lZGl0L3ZpZGVvLWVkaXQuaHRtbCI+DQo8bXktcG9wdXAgZGF0YS12aXNpYmxlPSIkY3RybC5TaG93IiBjbGFzcz0iZGVmYXVsdC1wb3B1cCB2aWRlby1lZGl0LXBvcHVwIj4NCiAgICA8ZGl2IGNsYXNzPSJoZWFkIj4NCiAgICAgICAgPHNwYW4gbmctYmluZD0iOjokY3RybC5Mb2MuUG9wdXBUaXRsZSI+PC9zcGFuPg0KICAgICAgICA8c3BhbiBjbGFzcz0iY29tbW9uLWljb24gY2xvc2UgcmlnaHQiIG5nLWNsaWNrPSIkY3RybC5TaG93ID0gZmFsc2UiPjwvc3Bhbj4NCiAgICA8L2Rpdj4NCiAgICA8Zm9ybSBub3ZhbGlkYXRlIG5hbWU9InZpZGVvRm9ybSI+DQoNCiAgICAgICAgPGRpdiBjbGFzcz0icG9wdXAtY29udGVudCI+DQoNCiAgICAgICAgICAgIDxsYWJlbCBmb3I9InZpZGVvLW5hbWUiIGNsYXNzPSJsYWJlbCBsZWZ0IiBuZy1iaW5kPSI6OiRjdHJsLkxvYy5OYW1lRmllbGQuVGl0bGUgKyAnOiciPjwvbGFiZWw+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjbGVhcmZpeCB2aXNpYmxlLXhzIHZpc2libGUtc20iPjwvZGl2Pg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtY29udGFpbmVyIj4NCiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgaWQ9InZpZGVvLW5hbWUiIG5hbWU9InZpZGVvTmFtZSIgbmctbW9kZWw9IiRjdHJsLlZpZGVvLnRpdGxlIiBuZy1yZXF1aXJlZD0idHJ1ZSIgbmctbWF4bGVuZ3RoPSIxMDAiIGF1dG9jb21wbGV0ZT0ib2ZmIiAvPg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZXJyb3IiIG5nLXNob3c9InZpZGVvRm9ybS4kc3VibWl0dGVkIHx8IHZpZGVvRm9ybS52aWRlb05hbWUuJHRvdWNoZWQiPg0KICAgICAgICAgICAgICAgICAgICA8c3BhbiBuZy1zaG93PSJ2aWRlb0Zvcm0udmlkZW9OYW1lLiRlcnJvci5yZXF1aXJlZCIgbmctYmluZD0iOjokY3RybC5Mb2MuTmFtZUZpZWxkLlJlcXVpcmVkRXJyb3IiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gbmctc2hvdz0idmlkZW9Gb3JtLnZpZGVvTmFtZS4kZXJyb3IubWF4bGVuZ3RoIiBuZy1iaW5kPSI6OiRjdHJsLkxvYy5OYW1lRmllbGQuTWF4TGVuZ3RoRXJyb3IiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2xlYXJmaXgiPjwvZGl2Pg0KDQogICAgICAgICAgICA8bGFiZWwgZm9yPSJ2aWRlby1lZGl0LWNhdGVnb3J5IiBjbGFzcz0ibGFiZWwgbGVmdCIgbmctYmluZD0iOjokY3RybC5Mb2MuQ2F0ZWdvcnlGaWVsZC5UaXRsZSArICc6JyI+PC9sYWJlbD4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNsZWFyZml4IHZpc2libGUteHMgdmlzaWJsZS1zbSI+PC9kaXY+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbnB1dC1jb250YWluZXIiPg0KICAgICAgICAgICAgICAgIDxzZWxlY3Qgbmctb3B0aW9ucz0iJGN0cmwuTG9jQmFzZS5DYXRlZ29yeU5hbWVbaXRlbV0gZm9yIGl0ZW0gaW4gJGN0cmwuQ2F0ZWdvcmllcyIgbmFtZT0idmlkZW9DYXRlZ29yeSIgbmctbW9kZWw9IiRjdHJsLlZpZGVvLmNhdGVnb3J5TmFtZSIgbmctcmVxdWlyZWQ9InRydWUiPjwvc2VsZWN0Pg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZXJyb3IiIG5nLXNob3c9InZpZGVvRm9ybS4kc3VibWl0dGVkIHx8IHZpZGVvRm9ybS52aWRlb0NhdGVnb3J5LiR0b3VjaGVkIj4NCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gbmctc2hvdz0idmlkZW9Gb3JtLnZpZGVvQ2F0ZWdvcnkuJGVycm9yLnJlcXVpcmVkIiBuZy1iaW5kPSI6OiRjdHJsLkxvYy5DYXRlZ29yeUZpZWxkLlJlcXVpcmVkRXJyb3IiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICA8bGFiZWwgZm9yPSJ2aWRlby1kZXNjcmlwdGlvbiIgY2xhc3M9ImxhYmVsIGxlZnQiIG5nLWJpbmQ9Ijo6JGN0cmwuTG9jLkRlc2NyaXB0aW9uRmllbGQuVGl0bGUgKyAnOiciPjwvbGFiZWw+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjbGVhcmZpeCB2aXNpYmxlLXhzIHZpc2libGUtc20iPjwvZGl2Pg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtY29udGFpbmVyIj4NCiAgICAgICAgICAgICAgICA8dGV4dGFyZWEgaWQ9InZpZGVvLWRlc2NyaXB0aW9uIiBuYW1lPSJ2aWRlb0Rlc2NyaXB0aW9uIiBuZy1tb2RlbD0iJGN0cmwuVmlkZW8uZGVzY3JpcHRpb24iIG5nLW1heGxlbmd0aD0iMjA0OCI+PC90ZXh0YXJlYT4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWVycm9yIiBuZy1zaG93PSJ2aWRlb0Zvcm0uJHN1Ym1pdHRlZCB8fCB2aWRlb0Zvcm0udmlkZW9EZXNjcmlwdGlvbi4kdG91Y2hlZCI+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIG5nLXNob3c9InZpZGVvRm9ybS52aWRlb0Rlc2NyaXB0aW9uLiRlcnJvci5tYXhsZW5ndGgiIG5nLWJpbmQ9Ijo6JGN0cmwuTG9jLkRlc2NyaXB0aW9uRmllbGQuTWF4TGVuZ3RoRXJyb3IiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICA8ZGl2IG5nLWlmPSIkY3RybC5WaWRlby5jdXJyZW50UHJldmlldyAhPSB1bmRlZmluZWQiPg0KICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0ibGFiZWwgbGVmdCIgbmctYmluZD0iOjokY3RybC5Mb2MuUHJpdmlld0ZpZWxkLlRpdGxlICsgJzonIj48L2xhYmVsPg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNsZWFyZml4IHZpc2libGUteHMgdmlzaWJsZS1zbSI+PC9kaXY+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJldmlldy1jb250YWluZXIiPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcmV2aWV3LW1vdmUtY29udGFpbmVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByZXZpZXctbW92ZSIgcHJldmlldy1zY3JvbGwtaW5kZXg9Int7JGN0cmwuU2hvd1ByZXZpZXdJbmRleH19IiBwcmV2aWV3LXNjcm9sbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcmV2aWV3IiBuZy1jbGFzcz0ieydzZWxlY3RlZCcgOiAkY3RybC5WaWRlby5jdXJyZW50UHJldmlldyA9PSAxfSIgbmctY2xpY2s9IiRjdHJsLlZpZGVvLmN1cnJlbnRQcmV2aWV3ID0gMSIgc3R5bGU9ImJhY2tncm91bmQtaW1hZ2U6IHVybCgne3skY3RybC5WaWRlby5wcmV2aWV3c1VybFswXX19JykiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb21tb24taWNvbiI+PC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJldmlldyIgbmctY2xhc3M9Insnc2VsZWN0ZWQnIDogJGN0cmwuVmlkZW8uY3VycmVudFByZXZpZXcgPT0gMn0iIG5nLWNsaWNrPSIkY3RybC5WaWRlby5jdXJyZW50UHJldmlldyA9IDIiIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ3t7JGN0cmwuVmlkZW8ucHJldmlld3NVcmxbMV19fScpIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29tbW9uLWljb24iPjwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByZXZpZXciIG5nLWNsYXNzPSJ7J3NlbGVjdGVkJyA6ICRjdHJsLlZpZGVvLmN1cnJlbnRQcmV2aWV3ID09IDN9IiBuZy1jbGljaz0iJGN0cmwuVmlkZW8uY3VycmVudFByZXZpZXcgPSAzIiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTogdXJsKCd7eyRjdHJsLlZpZGVvLnByZXZpZXdzVXJsWzJdfX0nKSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbW1vbi1pY29uIj48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RyZXRjaCI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJvdyBhcnJvdy1sZWZ0IHZpc2libGUteHMiIG5nLWNsaWNrPSIkY3RybC5Nb3ZlQmFja3dhcmQoKSI+PC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycm93IGFycm93LXJpZ2h0IHZpc2libGUteHMiIG5nLWNsaWNrPSIkY3RybC5Nb3ZlRm9yd2FyZCgpIj48L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImxhYmVsIGxlZnQiIG5nLWJpbmQ9Ijo6JGN0cmwuTG9jLlRhZ3NGaWVsZC5UaXRsZSArICc6JyI+PC9sYWJlbD4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNsZWFyZml4IHZpc2libGUteHMgdmlzaWJsZS1zbSI+PC9kaXY+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0YWdzLWlucHV0LWNvbnRhaW5lciI+DQogICAgICAgICAgICAgICAgPHRhZ3MtaW5wdXQgcGxhY2Vob2xkZXI9Int7OjokY3RybC5Mb2MuVGFnc0ZpZWxkLlRhZ1BsYWNlaG9sZGVyfX0iIG5hbWU9InZpZGVvVGFncyIgbWluLXRhZ3M9IjEiIHJlcGxhY2Utc3BhY2VzLXdpdGgtZGFzaGVzPSJmYWxzZSIgbmctbW9kZWw9IiRjdHJsLlRhZ3MiPg0KICAgICAgICAgICAgICAgICAgICA8YXV0by1jb21wbGV0ZSBzb3VyY2U9IiRjdHJsLkxvYWRUYWdzKCRxdWVyeSkiIG1pbi1sZW5ndGg9IjIiIGRlYm91bmNlLWRlbGF5PSIxIj48L2F1dG8tY29tcGxldGU+DQogICAgICAgICAgICAgICAgPC90YWdzLWlucHV0Pg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZXJyb3IiIG5nLXNob3c9InZpZGVvRm9ybS4kc3VibWl0dGVkIHx8IHZpZGVvRm9ybS52aWRlb1RhZ3MuJHRvdWNoZWQiPg0KICAgICAgICAgICAgICAgICAgICA8c3BhbiBuZy1zaG93PSJ2aWRlb0Zvcm0udmlkZW9UYWdzLiRlcnJvci5taW5UYWdzIiBuZy1iaW5kPSI6OiRjdHJsLkxvYy5UYWdzRmllbGQuTWluVGFnc0Vycm9yIj48L3NwYW4+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtY29udGFpbmVyIGNoZWNrYm94LWNvbnRhaW5lciI+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGltaXRhdGlvbiI+DQogICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImN1c3RvbS1jaGVja2JveCIgbmctY2xhc3M9InsnZGlzYWJsZWQnIDogJGN0cmwuVmlkZW8uaXNCYW5uZWQgPT0gdHJ1ZSB9Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIG5nLW1vZGVsPSIkY3RybC5WaWRlby5pc1ByaXZhdGUiIG5nLWRpc2FibGVkPSIkY3RybC5WaWRlby5pc0Jhbm5lZCIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29tbW9uLWljb24iPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7ezo6JGN0cmwuTG9jLkNoZWNrYm94RmllbGQuUHJpdmF0ZVZpZGVvfX0NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICA8IS0tPGxhYmVsIGNsYXNzPSJjdXN0b20tY2hlY2tib3giPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgbmctbW9kZWw9IiRjdHJsLlZpZGVvLmlzRGlzYWJsZUNvbW1lbnRzIiAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb21tb24taWNvbiI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7OjokY3RybC5Mb2MuQ2hlY2tib3hGaWVsZC5EaXNhYmxlQ29tbWVudHN9fQ0KICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4tLT4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImN1c3RvbS1jaGVja2JveCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBuZy1tb2RlbD0iJGN0cmwuVmlkZW8uaXNBZHVsdCIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29tbW9uLWljb24iPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7ezo6JGN0cmwuTG9jLkNoZWNrYm94RmllbGQuQWR1bHR9fQ0KICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS08bGFiZWwgY2xhc3M9ImN1c3RvbS1jaGVja2JveCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBuZy1tb2RlbD0iJGN0cmwuVmlkZW8uaXNMb2NhbCIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29tbW9uLWljb24iPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7ezo6JGN0cmwuTG9jLkNoZWNrYm94RmllbGQuU2hvd09ubHlNeXZpfX0NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImN1c3RvbS1jaGVja2JveCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBuZy1tb2RlbD0iJGN0cmwuVmlkZW8uaXNEaXNhYmxlQ29weSIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29tbW9uLWljb24iPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7ezo6JGN0cmwuTG9jLkNoZWNrYm94RmllbGQuRGlzYWJsZUNvcHl9fQ0KICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4tLT4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2xlYXJmaXgiPjwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCg0KICAgICAgICA8ZGl2IGNsYXNzPSJjb25maXJtYXRpb24tcGFuZWwiPg0KICAgICAgICAgICAgPGlucHV0IHR5cGU9InN1Ym1pdCIgY2xhc3M9ImJ1dHRvbiIgbmctY2xhc3M9InsnYnV0dG9uLWxvYWRpbmcnIDogJGN0cmwuSXNTdWJtaXR9IiBuZy1jbGljaz0iJGN0cmwuRWRpdFZpZGVvcyh2aWRlb0Zvcm0pIiB2YWx1ZT0ie3s6OiRjdHJsLkxvYy5TdWJtaXRCdXR0b259fSIgLz4NCiAgICAgICAgICAgIDxkaXYgbmctaWY9IiRjdHJsLklzRXJyb3IiIGNsYXNzPSJmb3JtLWVycm9yIHN1Ym1pdC1lcnJvciIgbmctYmluZD0iOjokY3RybC5Mb2MuU3VibWl0RXJyb3IiPjwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCg0KICAgIDwvZm9ybT4NCjwvbXktcG9wdXA+DQo8L3NjcmlwdD4NCg0KPHNjcmlwdD4kYnVuZGxlci5hZGRBc1Jlc29sdmVkKCJhYy1jaGFubmVsLGFzLWZhdm9yaXRlLXRhZyxhcy12aWRlby1lZGl0IiwiaHRtbCIpOzwvc2NyaXB0Pg0KDQo8c2NyaXB0IHR5cGU9ImFwcGxpY2F0aW9uL2pzb24iIGRhdGEtbXlsPSJ0cnVlIj57DQoiYWMtY2hhbm5lbC1pbmRleF9ydSI6ew0KICAiVGl0bGUiOiAie3tDSEFOTkVMX05BTUV9fSDigJQg0JrQsNC90LDQuyDQvdCwINCc0YPQstC4LtGC0LIiLA0KICAiVGl0bGVWaWRlbyI6ICJ7e1ZJREVPX1RJVExFfX0gIyB7e0NIQU5ORUxfTkFNRX19IOKAlCDQmtCw0L3QsNC7INC90LAg0JzRg9Cy0Lgu0YLQsiIsDQoNCiAgIlNVQlNDUklQVElPTiI6ICLQn9C+0LTQv9C40YHQutCwINC90LAg0LrQsNC90LDQuyIsDQogICJTVUJTQ1JJUFRJT05fVEFHIjogItCf0L7QtNC/0LjRgdC60LAg0L3QsCDRgtC10LMg0LIg0LrQsNC90LDQu9C1IiwNCg0KICAiUmVsYXRlZFRpdGxlX2xhdGVzdCI6ICLQktGB0LUg0LLQuNC00LXQviIsDQogICJSZWxhdGVkVGl0bGVfcG9wdWxhciI6ICLQn9C+0L/Rg9C70Y/RgNC90YvQtSIsDQogICJGaWx0ZXJCeVRhZyI6ICLQntGC0YTQuNC70YzRgtGA0L7QstCw0YLRjCDQv9C+INGC0LXQs9GDIFwie3t0YWd9fVwiIiwNCg0KICAiQWxsIjogItCy0YHQtSIsDQogICJTaG93IjogItC/0L7QutCw0LfQsNGC0YwiLA0KICAiRmF2b3JpdGVUYWdzIjogew0KICAgICJUaXRsZSI6ICLQmNC30LHRgNCw0L3QvdC+0LUiLA0KICAgICJNb3JlQnV0dG9uIjogIis2INGC0LXQs2Eg0LrQsNC90LDQu9CwIiwNCiAgICAiRXhhbXBsZSI6IHsNCiAgICAgICJUYWdOYW1lMSI6ICLQn9GD0YLQtdGI0LXRgdGC0LLQuNGPIiwNCiAgICAgICJUYWdOYW1lMiI6ICLQmtGD0LvQuNC90LDRgNC40Y8iLA0KICAgICAgIlRhZ05hbWUzIjogItCh0L/QvtGA0YIg0Lgg0Y3QutGB0YLRgNC40LwiDQogICAgfSwNCiAgICAiTm9JdGVtTWVzc2VnZSI6ICLQndCw0YHRgtGA0L7QudGC0LUg0Y3RgtC+0YIg0YDQsNC30LTQtdC7LCDRh9GC0L7QsdGLINGB0LPRgNGD0L/Qv9C40YDQvtCy0LDRgtGMINCy0LjQtNC10L4g0L/QviDRgtC10LzQsNC8Ig0KICB9LA0KICAiTGF0ZXN0VmlkZW9zIjogew0KICAgICJUaXRsZSI6ICLQktC40LTQtdC+INC60LDQvdCw0LvQsCIsDQogICAgIk1vcmVCdXR0b24iOiAiKzEyINCy0LjQtNC10L4iDQogIH0sDQogICJPdGhlclVzZXJDaGFubmVscyI6IHsNCiAgICAiVGl0bGUiOiAi0JTRgNGD0LPQuNC1INC60LDQvdCw0LvRiyDQv9C+0LvRjNC30L7QstCw0YLQtdC70Y8iLA0KICAgICJNb3JlQnV0dG9uIjogIis2INC60LDQvdCw0LvQvtCyIg0KICB9LA0KICAiRWRpdEJ1dHRvbiI6IHsNCiAgICAiRWRpdCI6ICLQoNC10LTQsNC60YLQuNGA0L7QstCw0YLRjCIsDQogICAgIlJlYWR5IjogItCT0L7RgtC+0LLQviINCiAgfSwNCiAgIk5vVmlkZW9BZGRUaGVtIjogew0KICAgICJUaXR0bGUiOiAi0JfQsNCz0YDRg9C30LjRgtC1INGB0LLQvtC1INC/0LXRgNCy0L7QtSDQstC40LTQtdC+IiwNCiAgICAiVGV4dCI6ICLQuNC70Lgg0LTQvtCx0LDQstGM0YLQtSDQuNC3INGB0L/QuNGB0LrQsCIsDQogICAgIlNlZUxhdGUiOiAi0J/QvtGB0LzQvtGC0YDQtdGC0Ywg0L/QvtC30LbQtSINCiAgfSwNCiAgIlZpZGVvTm90QXZhaWxhYmxlIjogItCS0LjQtNC10L4g0L3QtdC00L7RgdGC0YPQv9C90L4iLA0KICAiTm9TaWduYWwiOiAi0J3QsCDRjdGC0L7QvCDQutCw0L3QsNC70LUg0L/QvtC60LAg0L3QtdGCINCy0LjQtNC10L4iLA0KICAiVmlkZW9JblByb2Nlc3NpbmciOiAi0JLQuNC00LXQviDQvtCx0YDQsNCx0LDRgtGL0LLQsNC10YLRgdGPIg0KfQ0KLA0KImFjLWNoYW5uZWwtZGV0YWlsX3J1Ijp7DQogICJFZGl0IjogItCg0LXQtNCw0LrRgtC40YDQvtCy0LDRgtGMIiwNCiAgIlN0YXQiOiB7DQogICAgIlZpZXdWaWRlb0NvdW50Ijogew0KICAgICAgIk9uZSI6ICLQv9GA0L7RgdC80L7RgtGAIiwNCiAgICAgICJGZXciOiAi0L/RgNC+0YHQvNC+0YLRgNCwIiwNCiAgICAgICJNYW55IjogItC/0YDQvtGB0LzQvtGC0YDQvtCyIiwNCiAgICAgICJPdGhlciI6ICLQv9GA0L7RgdC80L7RgtGA0L7QsiINCiAgICB9LA0KICAgICJTdWJzY3JpYmVyc0NvdW50Ijogew0KICAgICAgIk9uZSI6ICLQv9C+0LTQv9C40YHRh9C40LoiLA0KICAgICAgIkZldyI6ICLQv9C+0LTQv9C40YHRh9C40LrQsCIsDQogICAgICAiTWFueSI6ICLQv9C+0LTQv9C40YHRh9C40LrQvtCyIiwNCiAgICAgICJPdGhlciI6ICLQv9C+0LTQv9C40YHRh9C40LrQvtCyIg0KICAgIH0NCiAgfQ0KfQ0KLA0KImFzLXZpZGVvLWRldGFpbF9ydSI6eyIkJHJlc291cmNlTm90Rm91bnQiOnRydWV9DQosDQoiYXMtdmlkZW8tZWRpdF9ydSI6ew0KICAiUG9wdXBUaXRsZSI6ICLQoNC10LTQsNC60YLQuNGA0L7QstCw0YLRjCDQstC40LTQtdC+IiwNCiAgIk5hbWVGaWVsZCI6IHsNCiAgICAiVGl0bGUiOiAi0J3QsNC30LLQsNC90LjQtSDQstC40LTQtdC+IiwNCiAgICAiUmVxdWlyZWRFcnJvciI6ICLQo9C60LDQttC40YLQtSDQvdCw0LfQstCw0L3QuNC1INCy0LjQtNC10L4iLA0KICAgICJNYXhMZW5ndGhFcnJvciI6ICLQndCw0LfQstCw0L3QuNC1INCy0LjQtNC10L4g0L3QtSDQtNC+0LvQttC90L4g0L/RgNC10LLRi9GI0LDRgtGMIDEwMCDRgdC40LzQstC+0LvQvtCyIg0KICB9LA0KICAiQ2F0ZWdvcnlGaWVsZCI6IHsNCiAgICAiVGl0bGUiOiAi0JrQsNGC0LXQs9C+0YDQuNGPIiwNCiAgICAiUmVxdWlyZWRFcnJvciI6ICLQo9C60LDQttC40YLQtSDQutCw0YLQtdCz0L7RgNC40Y4iDQogIH0sDQogICJEZXNjcmlwdGlvbkZpZWxkIjogew0KICAgICJUaXRsZSI6ICLQntC/0LjRgdCw0L3QuNC1INCy0LjQtNC10L4iLA0KICAgICJNYXhMZW5ndGhFcnJvciI6ICLQntC/0LjRgdCw0L3QuNC1INCy0LjQtNC10L4g0L3QtSDQtNC+0LvQttC90L4g0L/RgNC10LLRi9GI0LDRgtGMIDIwNDgg0YHQuNC80LLQvtC70L7QsiINCiAgfSwNCiAgIlByaXZpZXdGaWVsZCI6IHsNCiAgICAiVGl0bGUiOiAi0J/RgNC10LLRjNGOIg0KICB9LA0KICAiVGFnc0ZpZWxkIjogew0KICAgICJUaXRsZSI6ICLQotC10LPQuCIsDQogICAgIlRhZ1BsYWNlaG9sZGVyIjogItCy0LLQvtC0INC/0L4gZW50ZXIiLA0KICAgICJNaW5UYWdzRXJyb3IiOiAi0JTQvtC70LbQtdC9INCx0YvRgtGMINC30LDQtNCw0L0g0LzQuNC90LjQvNGD0Lwg0L7QtNC40L0g0YLQtdCzIg0KICB9LA0KICAiQ2hlY2tib3hGaWVsZCI6IHsNCiAgICAiUHJpdmF0ZVZpZGVvIjogItC/0YDQuNCy0LDRgtC90L7QtSIsDQogICAgIkRpc2FibGVDb21tZW50cyI6ICLQvtGC0LrQu9GO0YfQuNGC0Ywg0LrQvtC80LzQtdC90YLQsNGA0LjQuCIsDQogICAgIlNob3dPbmx5TXl2aSI6ICLQv9C+0LrQsNC30YvQstCw0YLRjCDRgtC+0LvRjNC60L4g0L3QsCDQnNGD0LLQuCIsDQogICAgIkRpc2FibGVDb3B5IjogItC30LDQv9GA0LXRgtC40YLRjCDQutC+0L/QuNGA0L7QstCw0L3QuNC1IiwNCiAgICAiQWR1bHQiOiAi0LbQtdGB0YLRjCINCiAgfSwNCiAgIlN1Ym1pdEVycm9yIjogItCe0YjQuNCx0LrQsCEg0J/QvtC20LDQu9GD0LnRgdGC0LAsINC/0L7QstGC0L7RgNC40YLQtSDQv9C+0LfQtNC90LXQtS4iLA0KICAiU3VibWl0QnV0dG9uIjogItGB0L7RhdGA0LDQvdC40YLRjCINCn0NCn08L3NjcmlwdD4NCg0KPHNjcmlwdD4NCiAgICAvLy8gPHJlZmVyZW5jZSBwYXRoPSIvYXNzZXRzL2xpYnMvYnVuZGxlci9idW5kbGVyLmpzIiAvPg0KICAgICRidW5kbGVyLnJlcXVpcmUoImFjLWNoYW5uZWwsYXMtc3Vic2NyaWJlLWJ1dHRvbixhcy1mYXZvcml0ZS10YWcsYXMtdmlkZW8tZWRpdCxhc3MtdXBTZXJ2aWNlIiwgImpzIik7DQogICAgJGJ1bmRsZXIucmVxdWlyZSgiYWMtY2hhbm5lbCxhcy12aWRlb3MsYXMtZmF2b3JpdGUtdGFnLGFzLXZpZGVvLWVkaXQiLCAiY3NzIik7DQo8L3NjcmlwdD4NCiAgICAgICAgPHNjcmlwdCB0eXBlPSJhcHBsaWNhdGlvbi9qc29uIiBkYXRhLW15bD0idHJ1ZSIgaWQ9Ii9sb2NhbGl6YXRpb24vY29tbW9uIj57DQoiY29tbW9uX2VuIjp7DQogICJTaXRlTmFtZSI6ICJNeXZpLlR2IiwNCiAgIkVSUk9SX09OX1BBR0UiOiAiQnVnIGRldGVjdGVkLjxici8+UGxlYXNlIDxhIGhyZWY9XCJ7e3VybH19XCI+cmVsb2FkPC9hPiB0aGUgcGFnZSIsDQogICJFUlJPUl9MT0FESU5HIjogIjotKCA8YSBocmVmPVwie3t1cmx9fVwiPnJlbG9hZDwvYT4iLA0KICAiVXBsb2FkVmlkZW8iOiAiVXBsb2FkIGEgdmlkZW8iLA0KICAiVXBsb2FkQ29tcGxldGVkIjogIlVwbG9hZCBjb21wbGV0ZWQiLA0KICAiQ2F0ZWdvcnkiOiAiQ2F0ZWdvcnkiLA0KICAiRmlsdGVyQnlUYWciOiAiRmlsdGVyIGJ5IiwNCiAgIkZpbHRlciI6ICJGaWx0ZXIiLA0KICAiRXJyb3IiOiAi0J/RgNC+0LjQt9C+0YjQu9CwINC+0YjQuNCx0LrQsC4g0J/QvtCy0YLQvtGA0LjRgtC1INC/0L7Qv9GL0YLQutGDINC/0L7Qt9C00L3QtdC1LiIsDQogICJFbWJlZCI6IHsNCiAgICAiQ29weUNvZGUiOiAiQ29kZSBjb3BpZWQhIiwNCiAgICAiQWRkaXRpb25hbE9wdGlvbnMiOiAiQWRkaXRpb25hbCBvcHRpb25zIiwNCiAgICAiUHJvdG9jb2wiOiAiUHJvdG9jb2wiLA0KICAgICJTaXplIjogIlNpemUiLA0KICAgICJBZGRQbGF5bGlzdCI6ICJBZGQgcGxheWxpc3QiLA0KICAgICJJbmZvIjogew0KICAgICAgIkFkZFRhZzEiOiAiQWRkIHRvIiwNCiAgICAgICJBZGRUYWcyIjogImZhdm9yaXRlcyB0YWciLA0KICAgICAgIk5vdFRhZyI6ICJUaGlzIHZpZGVvIGRvZXNuJ3QgaGF2ZSBhIHBsYXlsaXN0IiwNCiAgICAgICJEZWZhdWx0IjogIlBsYXlsaXN0IHdpbGwgYmUgY3JlYXRlZCBiYXNlZCBvbiB0aGUgc2VsZWN0ZWQgdGFnIg0KICAgIH0sDQogICAgIlZpZGVvIjogInZpZGVvIiwNCiAgICAiVmlkZW9zIjogInZpZGVvcyIsDQogICAgIlNob3ciOiAic2hvdyIsDQogICAgIkhpZGUiOiAiaGlkZSIsDQogICAgIlNvcnRUeXBlIjogew0KICAgICAgIm5hbWUiOiAiQnkgbmFtZSIsDQogICAgICAiZGF0ZSI6ICJCeSBkYXRlIg0KICAgIH0sDQogICAgIlNvcnRPcmRlciI6IHsNCiAgICAgICJhc2MiOiAiQnkgYXNjIiwNCiAgICAgICJkZXNjIjogIkJ5IGRlc2MiDQogICAgfQ0KICB9LA0KICAiTWVudSI6IHsNCiAgICAiQ2F0ZWdvcnkiOiAiQ2F0ZWdvcnkiLA0KICAgICJUYWdzIjogIlRhZ3MiDQogIH0sDQogICJDYXRlZ29yeU5hbWUiOiB7DQogICAgImFsbCI6ICJBbGwgY2F0ZWdvcmllcyIsDQogICAgInByaWtvbHlfcmF6dmxlY2hlbmlhIjogIkZ1biBhbmQgRW50ZXJ0YWlubWVudCIsDQogICAgIm5hdWthX2lfb2J1Y2hlbmllIjogIlNjaWVuY2UgYW5kIGVkdWNhdGlvbiIsDQogICAgIm11enlrYSI6ICJNdXNpYyIsDQogICAgImlncnkiOiAiR2FtZXMiLA0KICAgICJ6aGl2b3RueWUiOiAiQW5pbWFscyIsDQogICAgInNwb3J0IjogIlNwb3J0IiwNCiAgICAiYmxvZ2kiOiAiUGVvcGxlICYgQmxvZ3MiLA0KICAgICJ0cmF2ZWwiOiAiVHJhdmVsIiwNCiAgICAicmVrbGFtYSI6ICJBZHZlcnRpc2luZyIsDQogICAgIm11bHRpcGxpa2FjaWEiOiAiQ2FydG9vbnMiLA0KICAgICJvdGhlcnMiOiAiT3RoZXIiLA0KICAgICJrbHVibm9lX3ZpZGVvIjogIkNsdWIgbGlmZSIsDQogICAgInRyZWpsZXJ5IjogIlRyYWlsZXJzIiwNCiAgICAiY2FycyI6ICJDYXJzIiwNCiAgICAiYW5pbWUiOiAiQW5pbWUiLA0KICAgICJmYXNoaW9uIjogIkZhc2hpb24iLA0KICAgICJuZXdzX3BvbGl0aWNzIjogIk5ld3MgJiBQb2xpdGljcyIsDQogICAgImpkcmFtYSI6ICJEb3JhbWEiLA0KICAgICJraW5vX2lfdHYiOiAiRmlsbSBhbmQgVFYiDQogIH0sDQogICJQYWdpbmciOiB7DQogICAgIlByZXYiOiAiUHJldmlvdXMiLA0KICAgICJOZXh0IjogIk5leHQiDQogIH0sDQogICJTaG93IjogInNob3ciLA0KICAiYWxsIjogImFsbCIsDQoNCiAgIlZpZGVvRmlsdGVycyI6IHsNCiAgICAiRGF0ZSI6IHsNCiAgICAgICJhbGwtZGF0ZSI6ICJkdXJpbmcgYWxsIHRoaXMgdGltZSIsDQogICAgICAiMSI6ICJpbiBhIGRheSIsDQogICAgICAiMiI6ICJpbiB0d28gZGF5cyIsDQogICAgICAiNyI6ICJkdXJpbmcgdGhlIHdlZWsiLA0KICAgICAgIjMwIjogInBlciBtb250aCIsDQogICAgICAiMzY1IjogImluIGEgeWVhciINCiAgICB9LA0KICAgICJEdXJhdGlvbiI6IHsNCiAgICAgICJhbGwtZHVyYXRpb24iOiAiYW55IGR1cmF0aW9uIiwNCiAgICAgICItMjAiOiAiMjAgbWluIiwNCiAgICAgICIyMC02MCI6ICJmcm9tIDIwIHRvIDYwIG1pbnV0ZXMiLA0KICAgICAgIjYwLSI6ICI2MCBtaW4iDQogICAgfSwNCiAgICAiVHlwZSI6IHsNCiAgICAgICJsYXRlc3QiOiAiYWxsIHZpZGVvIiwNCiAgICAgICJwb3B1bGFyIjogInBvcHVsYXIiDQogICAgfQ0KICB9LA0KICAiQ2hhbm5lbEZpbHRlciI6IHsNCiAgICAicG9wdWxhciI6ICJwb3B1bGFyIiwNCiAgICAiYWN0aXZlIjogImFjdGl2ZSINCiAgfSwNCiAgIk5hdmlnYXRpb24iOiB7DQogICAgInN0YXJ0IjogInN0YXJ0IiwNCiAgICAiZW5kIjogImVuZCIsDQogICAgIm5leHQiOiAibmV4dCIsDQogICAgImJhY2siOiAiYmFjayINCiAgfSwNCiAgIlVzZXJNZW51Ijogew0KICAgICJGZWVkIjogIkZlZWQiLA0KICAgICJNeUNoYW5uZWwiOiAiTXkgY2hhbm5lbCIsDQogICAgIk15Q2hhbm5lbHMiOiAiTXkgY2hhbm5lbHMiLA0KICAgICJDcmVhdGVDaGFubmVsIjogIkNyZWF0ZSBjaGFubmVsIiwNCiAgICAiU3RvcmVkIjogIlN0b3JlZCIsDQogICAgIlN1YnNjcmlwdGlvbnMiOiAiU3Vic2NyaXB0aW9ucyIsDQogICAgIkRlZmF1bHROYW1lIjogIkRlZmF1bHQgbmFtZSIsDQogICAgIlByb2ZpbGUiOiAiTXkgcHJvZmlsZSIsDQogICAgIkV4aXQiOiAiRXhpdCIsDQogICAgIlBhcnRuZXJDaGFubmVsU3RhdCI6ICJTdGF0IGNoYW5uZWwiLA0KICAgICJQYXJ0bmVyTWFya2V0cGxhY2VTdGF0IjogIlN0YXQgZG9tYWluIiwNCiAgICAiU3RhdCI6ICJTdGF0aXN0aWMiLA0KICAgICJDaGFubmVsIjogIkNoYW5uZWwiLA0KICAgICJNYXJrZXRwbGFjZSI6ICJEb21haW4iLA0KICAgICJMYXRlciI6ICJTZWUgbGF0ZXIiDQogIH0sDQogICJTdWJzY3JpcHRpb24iOiB7DQogICAgIlN1YnNjcmliZSI6ICJTdWJzY3JpYmUiLA0KICAgICJVbnN1YnNjcmliZSI6ICJVbnN1YnNjcmliZSIsDQogICAgIlN1YnNjcmliZWQiOiAiU3Vic2NyaWJlIHN1Y2Nlc3MiLA0KICAgICJBbHJlYWR5IjogIllvdSBhcmUgYWxyZWFkeSBzdWJzY3JpYmVkIiwNCiAgICAiTWF4U3Vic2NyaXB0aW9uIjogIllvdSBzY29yZWQgdGhlIG1heGltdW0gbnVtYmVyIG9mIHN1YnNjcmlwdGlvbnMsIGRlbGV0ZSBhbmQgcmUtc3Vic2NyaWJlIiwNCiAgICAiRXJyb3IiOiAiRXJyb3IhIiwNCiAgICAiRXJyb3JUcmFuc2NyaXB0IjogIkFuIGVycm9yIGhhcyBvY2N1cnJlZC4gUGxlYXNlIHRyeSBhZ2FpbiBsYXRlci4iLA0KICAgICJFcnJvckF1dGgiOiAiUGxlYXNlLCIsDQogICAgIkVycm9yQXV0aEFuY2hvciI6ICJzaWduIGluIHRvIHN1YnNjcmliZSIsDQogICAgIlJlZXN0YWJsaXNoIjogIlJlZXN0YWJsaXNoIiwNCiAgICAiU3Vic2NyaWJlQnlDaGFubmVsIjogIlN1YnNjcmliZSBieSBjaGFubmVsIiwNCiAgICAiU3Vic2NyaWJlQnlDaGFubmVsVGFnIjogIlN1YnNjcmliZSBieSB0YWcgY2hhbm5lbCIsDQogICAgIlN1YnNjcmliZUJ5Q2F0ZWdvcnkiOiAiU3Vic2NyaWJlIGJ5IGNhdGVnb3J5IiwNCiAgICAiU3Vic2NyaWJlQnlDYXRlZ29yeVRhZyI6ICJTdWJzY3JpYmUgYnkgdGFnIGNhdGVnb3J5IiwNCiAgICAiU3Vic2NyaWJlQnlUYWciOiAiU3Vic2NyaWJlIGJ5IHRhZyINCiAgfSwNCiAgIkRlbGF5ZWRWaWRlbyI6IHsNCiAgICAiVGl0bGVBZGQiOiAiQWRkIHRvIFdhdGNoIGxhdGVyIiwNCiAgICAiVGl0bGVEZWxldGUiOiAiRGVsZXRlIGZyb20gV2F0Y2ggbGF0ZXIiLA0KICAgICJQYWdlIjogInNlZSBsYXRlciIsDQogICAgIkFkZCI6ICJBZGRlZCB0byBXYXRjaCBsYXRlciIsDQogICAgIkRlbGV0ZSI6ICJEZWxldGVkIGZyb20gV2F0Y2ggbGF0ZXIgIiwNCiAgICAiQWxyZWFkeSI6ICJBbHJlYWR5IGFkZGVkIHRvIHNlY3Rpb24iLA0KICAgICJFcnJvciI6ICJBbiBlcnJvciBoYXMgb2NjdXJyZWQuIFBsZWFzZSB0cnkgYWdhaW4gbGF0ZXIuIiwNCiAgICAiRXJyb3JBdXRoIjogIlBsZWFzZSwiLA0KICAgICJFcnJvckF1dGhBbmNob3IiOiAic2lnbiBpbiB0byBzdWJzY3JpYmUiDQogIH0sDQogICJQbHVyYWwiOiB7DQogICAgIlNlY29uZCI6IHsNCiAgICAgICJPbmUiOiAic2Vjb25kIiwNCiAgICAgICJPdGhlciI6ICJzZWNvbmRzIg0KICAgIH0sDQogICAgIk1pbnV0ZSI6IHsNCiAgICAgICJPbmUiOiAibWludXRlIiwNCiAgICAgICJPdGhlciI6ICJtaW51dGVzIg0KICAgIH0sDQogICAgIkhvdXIiOiB7DQogICAgICAiT25lIjogImhvdXIiLA0KICAgICAgIk90aGVyIjogImhvdXJzIg0KICAgIH0sDQogICAgIkRheSI6IHsNCiAgICAgICJPbmUiOiAiZGF5IiwNCiAgICAgICJPdGhlciI6ICJkYXlzIg0KICAgIH0sDQogICAgIk1vbnRoIjogew0KICAgICAgIk9uZSI6ICJtb250aCIsDQogICAgICAiT3RoZXIiOiAibW9udGhzIg0KICAgIH0sDQogICAgIlllYXIiOiB7DQogICAgICAiT25lIjogInllYXIiLA0KICAgICAgIk90aGVyIjogInllYXJzIg0KICAgIH0NCiAgfSwNCiAgIkFnbyI6ICJhZ28iLA0KICAiUGx1Z3MiOiB7DQogICAgIkVycm9yVGl0bGVNYWluIjogIkxvYWRpbmcgZXJyb3IiLA0KICAgICJFcnJvclRpdGxlQWRkIjogIlRyeSByZWZyZXNoaW5nIHRoZSBwYWdlIiwNCiAgICAiRW1wdHlUaXRsZSI6ICJTb3JyeSwgbm8gcmVzdWx0cyB3ZXJlIGZvdW5kIGZvciB5b3VyIHJlcXVlc3QiDQogIH0sDQogICJWaWRlb1N0YXR1cyI6IHsNCiAgICAiTm90UmVhZHkiOiAibm90IHJlYWR5IiwNCiAgICAiRmFpbHVyZSI6ICJmYWlsdXJlIiwNCiAgICAiRGVsZXRlZCI6ICJkZWxldGVkIiwNCiAgICAiTm90QWN0aXZlIjogIm5vdCBhY3RpdmUiLA0KICAgICJOb3RBY3RpdmVEZXNjIjogImZpbGwgaW4gcmVxdWlyZWQgZmllbGRzIiwNCiAgICAiTm93UGxheWluZyI6ICJub3cgcGxheWluZyINCiAgfSwNCiAgIkNvbmZpcm1FbWFpbE1lc3NhZ2UiOiB7DQogICAgIlBhcnQxIjogIk11c3QiLA0KICAgICJQYXJ0MiI6ICJpbmRpY2F0ZSBhbmQgY29uZmlybSBlbWFpbCIsDQogICAgIlBhcnQzIjogIm90aGVyd2lzZSwgdGhlIGFjY2VzcyBjYW4gbm90IGJlIHJlc3RvcmVkIiwNCiAgICAiQ2xvc2UiOiAiVGhhbmsgeW91LCBvZiBjb3Vyc2UiDQogIH0sDQogICJGYXZvcml0ZVRhZ3MiOiB7DQogICAgIkNvdW50VmlkZW8iOiAiVG90YWwgdmlkZW8iDQogIH0sDQogICJTaG93Q2FzZSI6IHsNCiAgICAiUmF0aW5nIjogIlJhdGluZyIsDQogICAgIkdlb0Jsb2NrZWRDb250ZW50IjogIlZpZGVvIGlzIG5vdCBhdmFpbGFibGUiLA0KICAgICJWaWRlb0RlbGV0ZWQiOiAiVGhlIHZpZGVvIHdhcyByZW1vdmVkIiwNCiAgICAiRWRpdEJ1dHRvbiI6ICJFZGl0IiwNCiAgICAiRGVsZXRlQnV0dG9uIjogIlJlbW92ZSIsDQogICAgIlJlc3RvcmVCdXR0b24iOiAiUmVzdG9yZSINCiAgfSwNCiAgIlZpZGVvcG9ydGFsIjogIlZpZGVvIHBvcnRhbCIsDQogICJTZWFyY2giOiAiU2VhcmNoIg0KfSwNCiJjb21tb25fcnUiOnsNCiAgIlNpdGVOYW1lIjogItCc0YPQstC4LtCi0LIiLA0KICAiRVJST1JfT05fUEFHRSI6ICLQl9Cw0LzQtdGH0LXQvSDQttGD0LouPGJyLz7Qn9C+0LbQsNC70YPQudGB0YLQsCA8YSBocmVmPVwie3t1cmx9fVwiPtC/0LXRgNC10LfQsNCz0YDRg9C30LjRgtC1PC9hPiDRgdGC0YDQsNC90LjRhtGDIiwNCiAgIkVSUk9SX0xPQURJTkciOiAiOi0oIDxhIGhyZWY9XCJ7e3VybH19XCI+0L/QtdGA0LXQt9Cw0LPRgNGD0LfQuNGC0LU8L2E+IiwNCiAgIlVwbG9hZFZpZGVvIjogItCX0LDQs9GA0YPQt9C40YLRjCDQstC40LTQtdC+IiwNCiAgIlVwbG9hZENvbXBsZXRlZCI6ICLQl9Cw0LPRgNGD0LfQutCwINC30LDQstC10YDRiNC10L3QsCIsDQogICJDYXRlZ29yeSI6ICLQmtCw0YLQtdCz0L7RgNC40Y8iLA0KICAiRmlsdGVyQnlUYWciOiAi0KTQuNC70YzRgtGAINC/0L4iLA0KICAiRmlsdGVyIjogItCk0LjQu9GM0YLQtdGAIiwNCiAgIkVycm9yIjogItCf0YDQvtC40LfQvtGI0LvQsCDQvtGI0LjQsdC60LAuINCf0L7QstGC0L7RgNC40YLQtSDQv9C+0L/Ri9GC0LrRgyDQv9C+0LfQtNC90LXQtS4iLA0KICAiRW1iZWQiOiB7DQogICAgIkNvcHlDb2RlIjogItCa0L7QtCDRgdC60L7Qv9C40YDQvtCy0LDQvSEiLA0KICAgICJBZGRpdGlvbmFsT3B0aW9ucyI6ICLQlNC+0L/QvtC70L3QuNGC0LXQu9GM0L3Ri9C1INC+0L/RhtC40LgiLA0KICAgICJQcm90b2NvbCI6ICLQn9GA0L7RgtC+0LrQvtC7IiwNCiAgICAiU2l6ZSI6ICLQoNCw0LfQvNC10YAiLA0KICAgICJBZGRQbGF5bGlzdCI6ICLQlNC+0LHQsNCy0LjRgtGMINC/0LvQtdC50LvQuNGB0YIiLA0KICAgICJJbmZvIjogew0KICAgICAgIkFkZFRhZzEiOiAi0JTQvtCx0LDQstGM0YLQtSIsDQogICAgICAiQWRkVGFnMiI6ICLQuNC30LHRgNCw0L3QvdGL0LUg0YLQtdCz0LgiLA0KICAgICAgIk5vdFRhZyI6ICLQoyDRjdGC0L7Qs9C+INCy0LjQtNC10L4g0L3QtdGCINC/0LvQtdC50LvQuNGB0YLQsCIsDQogICAgICAiRGVmYXVsdCI6ICLQn9C70LXQudC70LjRgdGCINCx0YPQtNC10YIg0YHRhNC+0YDQvNC40YDQvtCy0LDQvSDQvdCwINC+0YHQvdC+0LLQtSDQstGL0LHRgNCw0L3QvdC+0LPQviDRgtC10LPQsCINCiAgICB9LA0KICAgICJWaWRlbyI6ICLQstC40LTQtdC+IiwNCiAgICAiVmlkZW9zIjogItCy0LjQtNC10L4iLA0KICAgICJTaG93IjogItC/0L7QutCw0LfQsNGC0YwiLA0KICAgICJIaWRlIjogItGB0LLQtdGA0L3Rg9GC0YwiLA0KICAgICJTb3J0VHlwZSI6IHsNCiAgICAgICJuYW1lIjogItCf0L4g0LjQvNC10L3QuCIsDQogICAgICAiZGF0ZSI6ICLQn9C+INC00LDRgtC1Ig0KICAgIH0sDQogICAgIlNvcnRPcmRlciI6IHsNCiAgICAgICJhc2MiOiAi0J/QviDQstC+0LfRgNCw0YHRgtCw0L3QuNGOIiwNCiAgICAgICJkZXNjIjogItCf0L4g0YPQsdGL0LLQsNC90LjRjiINCiAgICB9DQogIH0sDQogICJNZW51Ijogew0KICAgICJDYXRlZ29yeSI6ICLQmtCw0YLQtdCz0L7RgNC40LgiLA0KICAgICJUYWdzIjogItCi0LXQs9C4Ig0KICB9LA0KICAiQ2F0ZWdvcnlOYW1lIjogew0KICAgICJhbGwiOiAi0JLRgdC1INC60LDRgtC10LPQvtGA0LjQuCIsDQogICAgInByaWtvbHlfcmF6dmxlY2hlbmlhIjogItCf0YDQuNC60L7Qu9GLINC4INGA0LDQt9Cy0LvQtdGH0LXQvdC40Y8iLA0KICAgICJuYXVrYV9pX29idWNoZW5pZSI6ICLQndCw0YPQutCwINC4INC+0LHRg9GH0LXQvdC40LUiLA0KICAgICJtdXp5a2EiOiAi0JzRg9C30YvQutCwIiwNCiAgICAiaWdyeSI6ICLQmNCz0YDRiyIsDQogICAgInpoaXZvdG55ZSI6ICLQltC40LLQvtGC0L3Ri9C1IiwNCiAgICAic3BvcnQiOiAi0KHQv9C+0YDRgiIsDQogICAgImJsb2dpIjogItCb0Y7QtNC4INC4INCx0LvQvtCz0LgiLA0KICAgICJ0cmF2ZWwiOiAi0J/Rg9GC0LXRiNC10YHRgtCy0LjRjyIsDQogICAgInJla2xhbWEiOiAi0KDQtdC60LvQsNC80LAiLA0KICAgICJtdWx0aXBsaWthY2lhIjogItCc0YPQu9GM0YLRhNC40LvRjNC80YsiLA0KICAgICJvdGhlcnMiOiAi0KDQsNC30L3QvtC1IiwNCiAgICAia2x1Ym5vZV92aWRlbyI6ICLQmtC70YPQsdC90LDRjyDQttC40LfQvdGMIiwNCiAgICAidHJlamxlcnkiOiAi0KLRgNC10LnQu9C10YDRiyIsDQogICAgImNhcnMiOiAi0JDQstGC0L4g0Lgg0LzQvtGC0L4iLA0KICAgICJhbmltZSI6ICLQkNC90LjQvNC1IiwNCiAgICAiZmFzaGlvbiI6ICLQnNC+0LTQsCDQuCDRgdGC0LjQu9GMIiwNCiAgICAibmV3c19wb2xpdGljcyI6ICLQndC+0LLQvtGB0YLQuCDQuCDQv9C+0LvQuNGC0LjQutCwIiwNCiAgICAiamRyYW1hIjogItCU0L7RgNCw0LzRiyIsDQogICAgImtpbm9faV90diI6ICLQmtC40L3QviDQuCDQotCSIg0KICB9LA0KICAiUGFnaW5nIjogew0KICAgICJQcmV2IjogItCf0YDQtdC00YvQtNGD0YnQsNGPIiwNCiAgICAiTmV4dCI6ICLQodC70LXQtNGD0Y7RidCw0Y8iDQogIH0sDQogICJTaG93IjogItCf0L7QutCw0LfQsNGC0YwiLA0KICAiYWxsIjogItCy0YHRkSIsDQoNCiAgIlZpZGVvRmlsdGVycyI6IHsNCiAgICAiRGF0ZSI6IHsNCiAgICAgICJhbGwtZGF0ZSI6ICLQt9CwINCy0YHQtSDQstGA0LXQvNGPIiwNCiAgICAgICIxIjogItC30LAg0LTQtdC90YwiLA0KICAgICAgIjIiOiAi0LfQsCDQtNCy0LAg0LTQvdGPIiwNCiAgICAgICI3IjogItC30LAg0L3QtdC00LXQu9GOIiwNCiAgICAgICIzMCI6ICLQt9CwINC80LXRgdGP0YYiLA0KICAgICAgIjM2NSI6ICLQt9CwINCz0L7QtCINCiAgICB9LA0KICAgICJEdXJhdGlvbiI6IHsNCiAgICAgICJhbGwtZHVyYXRpb24iOiAi0LvRjtCx0LDRjyDQv9GA0L7QtNC+0LvQttC40YLQtdC70YzQvdC+0YHRgtGMIiwNCiAgICAgICItMjAiOiAi0LTQviAyMCDQvNC40L0iLA0KICAgICAgIjIwLTYwIjogItC+0YIgMjAg0LTQviA2MCDQvNC40L0iLA0KICAgICAgIjYwLSI6ICLQvtGCIDYwINC80LjQvSINCiAgICB9LA0KICAgICJUeXBlIjogew0KICAgICAgImxhdGVzdCI6ICLQstGB0LUg0LLQuNC00LXQviIsDQogICAgICAicG9wdWxhciI6ICLQv9C+0L/Rg9C70Y/RgNC90YvQtSINCiAgICB9DQogIH0sDQogICJDaGFubmVsRmlsdGVyIjogew0KICAgICJwb3B1bGFyIjogItC/0L7Qv9GD0LvRj9GA0L3Ri9C1IiwNCiAgICAiYWN0aXZlIjogItCw0LrRgtC40LLQvdGL0LUiDQogIH0sDQogICJOYXZpZ2F0aW9uIjogew0KICAgICJzdGFydCI6ICLQsiDQvdCw0YfQsNC70L4iLA0KICAgICJlbmQiOiAi0LIg0LrQvtC90LXRhiIsDQogICAgIm5leHQiOiAi0LLQv9C10YDRkdC0IiwNCiAgICAiYmFjayI6ICLQvdCw0LfQsNC0Ig0KICB9LA0KICAiVXNlck1lbnUiOiB7DQogICAgIkZlZWQiOiAi0J3QvtCy0L7RgdGC0LgiLA0KICAgICJNeUNoYW5uZWwiOiAi0JzQvtC5INC60LDQvdCw0LsiLA0KICAgICJNeUNoYW5uZWxzIjogItCc0L7QuCDQutCw0L3QsNC70YsiLA0KICAgICJDcmVhdGVDaGFubmVsIjogItCh0L7Qt9C00LDRgtGMINC60LDQvdCw0LsiLA0KICAgICJTdG9yZWQiOiAi0KHQvtGF0YDQsNC90LXQvdC90L7QtSIsDQogICAgIlN1YnNjcmlwdGlvbnMiOiAi0J/QvtC00L/QuNGB0LrQuCIsDQogICAgIkRlZmF1bHROYW1lIjogItCR0LXQtyDQuNC80LXQvdC4IiwNCiAgICAiUHJvZmlsZSI6ICLQnNC+0Lkg0L/RgNC+0YTQuNC70YwiLA0KICAgICJFeGl0IjogItCS0YvRhdC+0LQiLA0KICAgICJQYXJ0bmVyQ2hhbm5lbFN0YXQiOiAi0KHRgtCw0YLQuNGB0YLQuNC60LAg0LrQsNC90LDQu9CwIiwNCiAgICAiUGFydG5lck1hcmtldHBsYWNlU3RhdCI6ICLQodGC0LDRgtC40YHRgtC40LrQsCDQv9C70L7RidCw0LTQutC4IiwNCiAgICAiU3RhdCI6ICLQodGC0LDRgtC40YHRgtC40LrQsCIsDQogICAgIkNoYW5uZWwiOiAi0JrQsNC90LDQu9CwIiwNCiAgICAiTWFya2V0cGxhY2UiOiAi0J/Qu9C+0YnQsNC00LrQuCIsDQogICAgIkxhdGVyIjogItCf0L7RgdC80L7RgtGA0LXRgtGMINC/0L7Qt9C20LUiDQogIH0sDQogICJTdWJzY3JpcHRpb24iOiB7DQogICAgIlN1YnNjcmliZSI6ICLQn9C+0LTQv9C40YHQsNGC0YzRgdGPIiwNCiAgICAiVW5zdWJzY3JpYmUiOiAi0J7RgtC/0LjRgdCw0YLRjNGB0Y8iLA0KICAgICJTdWJzY3JpYmVkIjogItCj0YHQv9C10YjQvdC+INC/0L7QtNC/0LjRgdCw0L3QvdGLIiwNCiAgICAiQWxyZWFkeSI6ICLQktGLINGD0LbQtSDQv9C+0LTQv9C40YHQsNC90L3RiyIsDQogICAgIk1heFN1YnNjcmlwdGlvbiI6ICLQktGLINC90LDQsdGA0LDQu9C4INC80LDQutGB0LjQvNCw0LvRjNC90L7QtSDQutC+0LvQuNGH0LXRgdGC0LLQviDQv9C+0LTQv9C40YHQvtC6LCDRg9C00LDQu9C40YLQtSDQvdC1INC90YPQttC90YvQtSDQuCDQv9C+0LTQv9C40YjQuNGC0LXRgdGMINC30LDQvdC+0LLQviIsDQogICAgIkVycm9yIjogItCe0YjQuNCx0LrQsCEiLA0KICAgICJFcnJvclRyYW5zY3JpcHQiOiAi0J/RgNC+0LjQt9C+0YjQu9CwINC+0YjQuNCx0LrQsC4g0J/QvtCy0YLQvtGA0LjRgtC1INC/0L7Qv9GL0YLQutGDINC/0L7Qt9C00L3QtdC1LiIsDQogICAgIkVycm9yQXV0aCI6ICLQp9GC0L7QsdGLINC/0L7QtNC/0LjRgdCw0YLRjNGB0Y8sINGB0L3QsNGH0LDQu9CwIiwNCiAgICAiRXJyb3JBdXRoQW5jaG9yIjogItCw0LLRgtC+0YDQuNC30YPQudGC0LXRgdGMIiwNCiAgICAiUmVlc3RhYmxpc2giOiAi0JLQvtGB0YHRgtCw0L3QvtCy0LjRgtGMIiwNCiAgICAiU3Vic2NyaWJlQnlDaGFubmVsIjogItCf0L7QtNC/0LjRgdC60LAg0L3QsCDQutCw0L3QsNC7IiwNCiAgICAiU3Vic2NyaWJlQnlDaGFubmVsVGFnIjogItCf0L7QtNC/0LjRgdC60LAg0L3QsCDRgtC10LMg0LIg0LrQsNC90LDQu9C1IiwNCiAgICAiU3Vic2NyaWJlQnlDYXRlZ29yeSI6ICLQn9C+0LTQv9C40YHQutCwINC90LAg0LrQsNGC0LXQs9C+0YDQuNGOIiwNCiAgICAiU3Vic2NyaWJlQnlDYXRlZ29yeVRhZyI6ICLQn9C+0LTQv9C40YHQutCwINC90LAg0YLQtdCzINCyINC60LDRgtC10LPQvtGA0LjQuCIsDQogICAgIlN1YnNjcmliZUJ5VGFnIjogItCf0L7QtNC/0LjRgdC60LAg0L3QsCDRgtC10LMiDQogIH0sDQogICJEZWxheWVkVmlkZW8iOiB7DQogICAgIlRpdGxlQWRkIjogItCU0L7QsdCw0LLQuNGC0Ywg0LIg0YDQsNC30LTQtdC7INC/0L7RgdC80L7RgtGA0LXRgtGMINC/0L7Qt9C20LUiLA0KICAgICJUaXRsZURlbGV0ZSI6ICLQo9C00LDQu9C40YLRjCDQuNC3INGA0LDQt9C00LXQu9CwINC/0L7RgdC80L7RgtGA0LXRgtGMINC/0L7Qt9C20LUiLA0KICAgICJQYWdlIjogItC/0L7RgdC80L7RgtGA0LXRgtGMINC/0L7Qt9C20LUiLA0KICAgICJBZGQiOiAi0JTQvtCx0LDQstC70LXQvdC+INCyINGA0LDQt9C00LXQuyIsDQogICAgIkRlbGV0ZSI6ICLQo9C00LDQu9C10L3QviDQuNC3INGA0LDQt9C00LXQu9CwIiwNCiAgICAiQWxyZWFkeSI6ICLQo9C20LUg0LTQvtCx0LDQstC70LXQvdC+INCyINGA0LDQt9C00LXQuyIsDQogICAgIkVycm9yIjogItCf0YDQvtC40LfQvtGI0LvQsCDQvtGI0LjQsdC60LAuINCf0L7QstGC0L7RgNC40YLQtSDQv9C+0L/Ri9GC0LrRgyDQv9C+0LfQtNC90LXQtS4iLA0KICAgICJFcnJvckF1dGgiOiAi0KfRgtC+0LHRiyDQv9C+0LTQv9C40YHQsNGC0YzRgdGPLCDRgdC90LDRh9Cw0LvQsCIsDQogICAgIkVycm9yQXV0aEFuY2hvciI6ICLQsNCy0YLQvtGA0LjQt9GD0LnRgtC10YHRjCINCiAgfSwNCiAgIlBsdXJhbCI6IHsNCiAgICAiU2Vjb25kIjogew0KICAgICAgIk9uZSI6ICLRgdC10LrRg9C90LTRgyIsDQogICAgICAiRmV3IjogItGB0LXQutGD0L3QtNGLIiwNCiAgICAgICJNYW55IjogItGB0LXQutGD0L3QtCIsDQogICAgICAiT3RoZXIiOiAi0YHQtdC60YPQvdC0Ig0KICAgIH0sDQogICAgIk1pbnV0ZSI6IHsNCiAgICAgICJPbmUiOiAi0LzQuNC90YPRgtGDIiwNCiAgICAgICJGZXciOiAi0LzQuNC90YPRgtGLIiwNCiAgICAgICJNYW55IjogItC80LjQvdGD0YIiLA0KICAgICAgIk90aGVyIjogItC80LjQvdGD0YIiDQogICAgfSwNCiAgICAiSG91ciI6IHsNCiAgICAgICJPbmUiOiAi0YfQsNGBIiwNCiAgICAgICJGZXciOiAi0YfQsNGB0LAiLA0KICAgICAgIk1hbnkiOiAi0YfQsNGB0L7QsiIsDQogICAgICAiT3RoZXIiOiAi0YfQsNGB0L7QsiINCiAgICB9LA0KICAgICJEYXkiOiB7DQogICAgICAiT25lIjogItC00LXQvdGMIiwNCiAgICAgICJGZXciOiAi0LTQvdGPIiwNCiAgICAgICJNYW55IjogItC00L3QtdC5IiwNCiAgICAgICJPdGhlciI6ICLQtNC90LXQuSINCiAgICB9LA0KICAgICJNb250aCI6IHsNCiAgICAgICJPbmUiOiAi0LzQtdGB0Y/RhiIsDQogICAgICAiRmV3IjogItC80LXRgdGP0YbQsCIsDQogICAgICAiTWFueSI6ICLQvNC10YHRj9GG0LXQsiIsDQogICAgICAiT3RoZXIiOiAi0LzQtdGB0Y/RhtC10LIiDQogICAgfSwNCiAgICAiWWVhciI6IHsNCiAgICAgICJPbmUiOiAi0LPQvtC0IiwNCiAgICAgICJGZXciOiAi0LPQvtC00LAiLA0KICAgICAgIk1hbnkiOiAi0LvQtdGCIiwNCiAgICAgICJPdGhlciI6ICLQu9C10YIiDQogICAgfQ0KICB9LA0KICAiQWdvIjogItC90LDQt9Cw0LQiLA0KICAiUGx1Z3MiOiB7DQogICAgIkVycm9yVGl0bGVNYWluIjogItCe0YjQuNCx0LrQsCDQt9Cw0LPRgNGD0LfQutC4IiwNCiAgICAiRXJyb3JUaXRsZUFkZCI6ICLQn9C+0L/RgNC+0LHRg9C50YLQtSDQvtCx0L3QvtCy0LjRgtGMINGB0YLRgNCw0L3QuNGG0YMiLA0KICAgICJFbXB0eVRpdGxlIjogItCj0LLRiywg0L3QviDQvdCwINCy0LDRiCDQt9Cw0L/RgNC+0YEg0L3QuNGH0LXQs9C+INC90LUg0L3QsNC50LTQtdC90L4iDQogIH0sDQogICJWaWRlb1N0YXR1cyI6IHsNCiAgICAiTm90UmVhZHkiOiAi0LrQvtC90LLQtdGA0YLQsNGG0LjRjyIsDQogICAgIkZhaWx1cmUiOiAi0L7RiNC40LHQutCwIiwNCiAgICAiRGVsZXRlZCI6ICLRg9C00LDQu9C10L3QviIsDQogICAgIk5vdEFjdGl2ZSI6ICLQvdC1INCw0LrRgtC40LLQvdC+IiwNCiAgICAiTm90QWN0aXZlRGVzYyI6ICLQt9Cw0L/QvtC70L3QuNGC0LUg0L7QsdGP0LfQsNGC0LXQu9GM0L3Ri9C1INC/0L7Qu9GPIiwNCiAgICAiTm93UGxheWluZyI6ICLQv9GA0L7QuNCz0YDRi9Cy0LDQtdGC0YHRjyINCiAgfSwNCiAgIkNvbmZpcm1FbWFpbE1lc3NhZ2UiOiB7DQogICAgIlBhcnQxIjogItCd0LXQvtCx0YXQvtC00LjQvNC+IiwNCiAgICAiUGFydDIiOiAi0YPQutCw0LfQsNGC0Ywg0Lgg0L/QvtC00YLQstC10YDQtNC40YLRjCBlbWFpbCIsDQogICAgIlBhcnQzIjogItC40L3QsNGH0LUg0LTQvtGB0YLRg9C/INC90LXQu9GM0LfRjyDQsdGD0LTQtdGCINCy0L7RgdGB0YLQsNC90L7QstC40YLRjCIsDQogICAgIkNsb3NlIjogItCh0L/QsNGB0LjQsdC+LCDQv9C+0L3Rj9GC0L3QviINCiAgfSwNCiAgIkZhdm9yaXRlVGFncyI6IHsNCiAgICAiQ291bnRWaWRlbyI6ICLQntCx0YnQtdC1INC60L7Qu9C40YfQtdGB0YLQstC+INCy0LjQtNC10L4iDQogIH0sDQogICJTaG93Q2FzZSI6IHsNCiAgICAiUmF0aW5nIjogItCg0LXQudGC0LjQvdCzIiwNCiAgICAiR2VvQmxvY2tlZENvbnRlbnQiOiAi0JfQsNC/0YDQsNGI0LjQstCw0LXQvNC+0LUg0LLQuNC00LXQviDQvdC1INC00L7RgdGC0YPQv9C90L4iLA0KICAgICJWaWRlb0RlbGV0ZWQiOiAi0JLQuNC00LXQviDRg9C00LDQu9C10L3QviIsDQogICAgIkVkaXRCdXR0b24iOiAi0KDQtdC00LDQutGC0LjRgNC+0LLQsNGC0YwiLA0KICAgICJEZWxldGVCdXR0b24iOiAi0KPQtNCw0LvQuNGC0YwiLA0KICAgICJSZXN0b3JlQnV0dG9uIjogItCS0L7RgdGB0YLQsNC90L7QstC40YLRjCINCiAgfSwNCiAgIlZpZGVvcG9ydGFsIjogItCS0LjQtNC10L7Qv9C+0YDRgtCw0LsiLA0KICAiU2VhcmNoIjogItCf0L7QuNGB0LoiDQp9DQp9PC9zY3JpcHQ+DQogICAgICAgIDxzY3JpcHQgdHlwZT0iYXBwbGljYXRpb24vanNvbiIgZGF0YS1teWw9InRydWUiIGlkPSIvbG9jYWxpemF0aW9uL2Zvb3RlciI+ew0KImZvb3Rlcl9lbiI6ew0KICAiQWJvdXRVcyI6ICJBYm91dCB1cyIsDQogICJBYm91dCI6ICJBYm91dCB0aGUgcHJvamVjdCIsDQogICJBZHYiOiAiQWR2ZXJ0aXNlIiwNCiAgIlBhcnRuZXJzIjogIlBhcnRuZXJzIiwNCiAgIkNvcHlyaWdodEhvbGRlcnMiOiAiQ29weXJpZ2h0IGhvbGRlcnMiLA0KICAiRm9yVXNlcnMiOiAiRm9yIFVzZXJzIiwNCiAgIkNvbnRhY3RzIjogIkNvbnRhY3RzIiwNCiAgIlRlcm1zT29mVXNlIjogIlRlcm1zIG9mIHVzZSIsDQogICJNYWludGVuYW5jZSI6ICJUZWNoIHN1cHBvcnQiLA0KICAiTXl2aSI6ICJNeXZpIiwNCiAgIkNoYW5lbHNBbmRUQWdzIjogIkNoYW5uZWxzIGFuZCB0YWdzIiwNCiAgIkluZm9QYXJ0bmVyc1J1bGVzIjogIkFmZmlsaWF0ZSBwcm9ncmFtIHBvbGljaWVzIiwNCiAgIkluZm9QYXJ0bmVycyI6ICJBZmZpbGlhdGUgcHJvZ3JhbSIsDQogICJJbmZvUHJpdmFjeVBvbGljeSI6ICJQcml2YWN5IFBvbGljeSINCn0sDQoiZm9vdGVyX3J1Ijp7DQogICJBYm91dFVzIjogItCeINC90LDRgSIsDQogICJBYm91dCI6ICLQniDQv9GA0L7QtdC60YLQtSIsDQogICJBZHYiOiAi0KDQsNC30LzQtdGJ0LXQvdC40LUg0YDQtdC60LvQsNC80YsiLA0KICAiUGFydG5lcnMiOiAi0J3QsNGI0Lgg0L/QsNGA0YLQvdC10YDRiyIsDQogICJDb3B5cmlnaHRIb2xkZXJzIjogItCf0YDQsNCy0L7QvtCx0LvQsNC00LDRgtC10LvRj9C8IiwNCiAgIkZvclVzZXJzIjogItCf0L7Qu9GM0LfQvtCy0LDRgtC10LvRj9C8IiwNCiAgIkNvbnRhY3RzIjogItCa0L7QvdGC0LDQutGC0YsiLA0KICAiVGVybXNPb2ZVc2UiOiAi0J/QvtC70YzQt9C+0LLQsNGC0LXQu9GM0YHQutC+0LUg0YHQvtCz0LvQsNGI0LXQvdC40LUiLA0KICAiTWFpbnRlbmFuY2UiOiAi0KLQtdGF0L/QvtC00LTQtdGA0LbQutCwIiwNCiAgIk15dmkiOiAi0JzRg9Cy0LgiLA0KICAiQ2hhbmVsc0FuZFRBZ3MiOiAi0JrQsNC90LDQu9GLINC4INGC0LXQs9C4IiwNCiAgIkluZm9QYXJ0bmVyc1J1bGVzIjogItCf0YDQsNCy0LjQu9CwINC/0LDRgNGC0L3QtdGA0YHQutC+0Lkg0L/RgNC+0LPRgNCw0LzQvNGLIiwNCiAgIkluZm9QYXJ0bmVycyI6ICLQn9Cw0YDRgtC90ZHRgNGB0LrQsNGPINC/0YDQvtCz0YDQsNC80LzQsCIsDQogICJJbmZvUHJpdmFjeVBvbGljeSI6ICLQn9C+0LvQuNGC0LjQutCwINC60L7QvdGE0LjQtNC10L3RhtC40LDQu9GM0L3QvtGB0YLQuCINCn0NCn08L3NjcmlwdD4NCiAgICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L25nLXRlbXBsYXRlIiBpZD0iL2FwcC9zaGFyZWQvdXAtYWdlbnQvdXAtYWdlbnQuaHRtbCI+DQo8YSBuZy1ocmVmPSJ7ezo6JGN0cmwuVXBsb2FkVXJsfX0iIGNsYXNzPSJjb21tb24taWNvbiB1cGxvYWQgcmlnaHQiIG5nLWlmPSIhJGN0cmwuSXNSZWFkeSI+DQogICAgPHNwYW4gY2xhc3M9ImhpZGRlbi14cyI+e3s6OiRjdHJsLkxvYy5VcGxvYWRWaWRlb319PC9zcGFuPg0KPC9hPg0KPGRpdiBuZy1pZj0iJGN0cmwuSXNSZWFkeSI+DQogICAgPGEgbmctaHJlZj0ie3s6OiRjdHJsLkNoYW5uZWxzWzBdLnVwbG9hZFVybH19IiBjbGFzcz0iY29tbW9uLWljb24gdXBsb2FkIHJpZ2h0IiBuZy1jbGFzcz0ieyd1cGxvYWRpbmcnIDogJGN0cmwuUGVyY2VudCA+IDAsICd1cGxvYWQtY29tcGxldGUnIDogJGN0cmwuUGVyY2VudCA9PSAtMX0iIA0KICAgICAgIG5nLWNsaWNrPSIkY3RybC5DaGFubmVscy5sZW5ndGggPT0gMSA/ICRjdHJsLk9wZW5TZWxlY3RGaWxlc0RpYWxvZygkY3RybC5DaGFubmVsc1swXS5pZCwgJGN0cmwuQ2hhbm5lbHNbMF0udXBsb2FkVXJsKSA6ICRjdHJsLk9wZW5DaGFubmVsc01lbnUoJGV2ZW50KSI+DQogICAgICAgIDxzcGFuIGNsYXNzPSJoaWRkZW4teHMiPnt7OjokY3RybC5Mb2MuVXBsb2FkVmlkZW99fTwvc3Bhbj4NCiAgICAgICAgPGRpdiBjbGFzcz0icHJvZ3Jlc3MtYmFyIiBuZy1zdHlsZT0ieyd3aWR0aCcgOiAkY3RybC5QZXJjZW50ICsgJyUnfSI+PC9kaXY+DQogICAgICAgIDxzcGFuIGNsYXNzPSJwcm9ncmVzcy12YWx1ZSI+e3skY3RybC5QZXJjZW50IHwgbnVtYmVyOjB9fSU8L3NwYW4+DQogICAgPC9hPg0KICAgIDxkaXYgY2xhc3M9InVwbG9hZC1jaGFubmVscy1saXN0IiBuZy1pZj0iJGN0cmwuQ2hhbm5lbHMubGVuZ3RoID4gMSIgbmctY2xhc3M9IntleHBhbmQ6ICRjdHJsLlNob3dDaGFubmVsc30iPg0KICAgICAgICA8dWwgY2xhc3M9ImN1c3RvbS1zY3JvbGxiYXIiPg0KICAgICAgICAgICAgPGxpIG5nLXJlcGVhdD0iaXRlbSBpbiAkY3RybC5DaGFubmVscyI+DQogICAgICAgICAgICAgICAgPGEgY2xhc3M9Im1lbnUtaXRlbSIgbmctaHJlZj0ie3s6Oml0ZW0udXBsb2FkVXJsfX0iIG5nLWNsaWNrPSIkY3RybC5PcGVuU2VsZWN0RmlsZXNEaWFsb2coaXRlbS5pZCwgaXRlbS51cGxvYWRVcmwpIj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2hhbm5lbC1hdmF0YXIiIG5nLXN3aXRjaD0iaXRlbS5kZWZhdWx0UHJldmlld0lkICE9IHVuZGVmaW5lZCI+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjZW50ZXIgYXZhdGFyIGNoYW5uZWwtZGVmYXVsdC1hdmF0YXIiIG5nLWNsYXNzPSInZGVmYXVsdC0nICsgaXRlbS5kZWZhdWx0UHJldmlld0lkIiBuZy1zd2l0Y2gtd2hlbj0idHJ1ZSI+e3tpdGVtLm5hbWUuY2hhckF0KDApfX08L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNlbnRlciBhdmF0YXIiIG5nLXN0eWxlPSI6OntiYWNrZ3JvdW5kSW1hZ2U6ICd1cmwoXCcnK2l0ZW0ucHJldmlld1VybCsnXCcpJ30iIG5nLXN3aXRjaC13aGVuPSJmYWxzZSI+PC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICB7e2l0ZW0ubmFtZX19DQogICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgPC9saT4NCiAgICAgICAgPC91bD4NCiAgICA8L2Rpdj4NCiAgICA8ZGl2IGNsYXNzPSJteXVwIj48L2Rpdj4NCjwvZGl2Pg0KPC9zY3JpcHQ+DQo8c2NyaXB0IHR5cGU9InRleHQvbmctdGVtcGxhdGUiIGlkPSIvYXBwL3NoYXJlZC9oZWFkZXIvaGVhZGVyLmh0bWwiPg0KPGRpdiBjbGFzcz0iaGVhZGVyIiBuZy1jbGFzcz0iaGVhZGVyU3R5bGUiPg0KICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lci1mbHVpZCBoZWFkZXItY29udGFpbmVyIiBuZy1jbGFzcz0iY29udGFpbmVyU3R5bGUiPg0KICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTEyIj4NCg0KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJuYXYgbGVmdCBjb21tb24taWNvbiIgbmctY2xpY2s9ImN0cmwuQWN0aXZhdGVNZW51KCkiPjwvc3Bhbj4NCg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxvZ28td3JhcHBlciBsZWZ0Ij4NCiAgICAgICAgICAgICAgICAgICAgPGEgbmctaHJlZj0ie3s6Om1haW5Vcmx9fSIgY2xhc3M9ImNvbW1vbi1pY29uIiBuZy1jbGFzcz0ieydsb2dvcnUnOiBjdXJyZW50TGFuZyA9PSAncnUnLCAnbG9nb2VuJzogY3VycmVudExhbmcgPT0gJ2VuJ30iPjwvYT4NCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gbmctYmluZD0iOjpsb2MuVmlkZW9wb3J0YWwiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8bGFuZy1zd2l0Y2hlciBjbGFzcz0iaGlkZGVuLXhzIiBkYXRhLWhlYWRlci1zdHlsZT0iaGVhZGVyU3R5bGUiPjwvbGFuZy1zd2l0Y2hlcj4NCg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InVzZXItbWVudSByaWdodCIgbmctc3dpdGNoPSJ1c2VyTWVudS5hdXRob3JpemVkIj4NCiAgICAgICAgICAgICAgICAgICAgPGEgbmctaHJlZiBjbGFzcz0iY29tbW9uLWljb24gcmlnaHQgbG9naW4gYXV0aG9yaXplZCIgbmctY2xpY2s9ImN0cmwuVG9nZ2xlVXNlck1lbnUoKSIgbmctc3dpdGNoLXdoZW49InRydWUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNlbnRlciBhdmF0YXIgbm8tYXZhdGFyIiBuZy1iaW5kPSJ1c2VyTWVudS5uYW1lWzBdIj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idXNlcm1lbnUiIG5nLWNsYXNzPSJ7J2V4cGFuZCc6IHVzZXJNZW51LnNob3d9IiBuZy1zd2l0Y2gtd2hlbj0idHJ1ZSI+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LXRhYnMiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtdGFiIGV4cGFuZCIgbmctYmluZD0idXNlck1lbnUubmFtZSI+PC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbXMiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGNsYXNzPSJtZW51LWl0ZW0iIG5nLWhyZWY9Int7Ojpyb3V0ZVBhdGgudXNlck5ld3N9fSIgbmctYmluZD0iOjpsb2MuVXNlck1lbnUuRmVlZCI+PC9hPjwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBuZy1pZj0iIXVzZXJNZW51Lmhhc0NoYW5uZWxzIj48YSBjbGFzcz0ibWVudS1pdGVtIiBuZy1ocmVmPSJ7ezo6bWFpblVybCArIHJvdXRlUGF0aC51c2VyQ2hhbm5lbENyZWF0ZX19IiBuZy1iaW5kPSI6OmxvYy5Vc2VyTWVudS5DcmVhdGVDaGFubmVsIj48L2E+PC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIG5nLWlmPSJ1c2VyTWVudS5oYXNDaGFubmVscyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibWVudS1pdGVtIiBuZy1ocmVmPSJ7ezo6dXNlck1lbnUuY2hhbm5lbHNbMF0uZGV0YWlsVXJsfX0iIG5nLWJpbmQ9Ijo6bG9jLlVzZXJNZW51Lk15Q2hhbm5lbCIgbmctaWY9InVzZXJNZW51LmNoYW5uZWxzLmxlbmd0aCA9PSAxIj48L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibWVudS1pdGVtIGNoYW5uZWxzLWxpc3QtdG9nZ2xlIiBuZy1iaW5kPSI6OmxvYy5Vc2VyTWVudS5NeUNoYW5uZWxzIiBuZy1pZj0idXNlck1lbnUuY2hhbm5lbHMubGVuZ3RoID4gMSIgbmctY2xpY2s9InVzZXJNZW51LnNob3dDaGFubmVscyA9ICF1c2VyTWVudS5zaG93Q2hhbm5lbHM7ICRldmVudC5zdG9wUHJvcGFnYXRpb24oKTsiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iaXRlbS1saXN0IGNoYW5uZWwtaXRlbS1saXN0IGN1c3RvbS1zY3JvbGxiYXIiIG5nLWlmPSJ1c2VyTWVudS5jaGFubmVscy5sZW5ndGggPiAxICYmIHVzZXJNZW51LnNob3dDaGFubmVscyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIG5nLXJlcGVhdD0iaXRlbSBpbiB1c2VyTWVudS5jaGFubmVscyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJtZW51LWl0ZW0iIG5nLWhyZWY9Int7OjppdGVtLmRldGFpbFVybH19Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNoYW5uZWwtYXZhdGFyIiBuZy1zd2l0Y2g9Iml0ZW0uZGVmYXVsdFByZXZpZXdJZCAhPSB1bmRlZmluZWQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNlbnRlciBhdmF0YXIgY2hhbm5lbC1kZWZhdWx0LWF2YXRhciIgbmctY2xhc3M9IidkZWZhdWx0LScgKyBpdGVtLmRlZmF1bHRQcmV2aWV3SWQiIG5nLXN3aXRjaC13aGVuPSJ0cnVlIj57e2l0ZW0ubmFtZS5jaGFyQXQoMCl9fTwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNlbnRlciBhdmF0YXIiIG5nLXN0eWxlPSI6OntiYWNrZ3JvdW5kSW1hZ2U6ICd1cmwoXCcnK2l0ZW0ucHJldmlld1VybCsnXCcpJ30iIG5nLXN3aXRjaC13aGVuPSJmYWxzZSI+PC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7aXRlbS5uYW1lfX0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgY2xhc3M9Im1lbnUtaXRlbSIgbmctaHJlZj0ie3s6OnJvdXRlUGF0aC5hY2NvdW50UHJvZmlsZX19IiBuZy1iaW5kPSI6OmxvYy5Vc2VyTWVudS5Qcm9maWxlIj48L2E+PC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIG5nLWlmPSJ1c2VyTWVudS5pc1BhcnRuZXJDaGFubmVsIHx8IHVzZXJNZW51LmlzUGFydG5lck1hcmtldHBsYWNlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJtZW51LWl0ZW0iIG5nLWhyZWY9Int7Ojpyb3V0ZVBhdGguYWNjb3VudFBhcnRuZXJDaGFubmVsfX0iIG5nLWJpbmQ9Ijo6bG9jLlVzZXJNZW51LlBhcnRuZXJDaGFubmVsU3RhdCIgbmctaWY9InVzZXJNZW51LmlzUGFydG5lckNoYW5uZWwgJiYgIXVzZXJNZW51LmlzUGFydG5lck1hcmtldHBsYWNlIj48L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibWVudS1pdGVtIiBuZy1ocmVmPSJ7ezo6cm91dGVQYXRoLmFjY291bnRQYXJ0bmVyTWFya2V0cGxhY2V9fSIgbmctYmluZD0iOjpsb2MuVXNlck1lbnUuUGFydG5lck1hcmtldHBsYWNlU3RhdCIgbmctaWY9IiF1c2VyTWVudS5pc1BhcnRuZXJDaGFubmVsICYmIHVzZXJNZW51LmlzUGFydG5lck1hcmtldHBsYWNlIj48L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibWVudS1pdGVtIGNoYW5uZWxzLWxpc3QtdG9nZ2xlIiBuZy1iaW5kPSI6OmxvYy5Vc2VyTWVudS5TdGF0Ig0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctaWY9InVzZXJNZW51LmlzUGFydG5lckNoYW5uZWwgJiYgdXNlck1lbnUuaXNQYXJ0bmVyTWFya2V0cGxhY2UiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1jbGljaz0idXNlck1lbnUuc2hvd1N0YXQgPSAhdXNlck1lbnUuc2hvd1N0YXQ7ICRldmVudC5zdG9wUHJvcGFnYXRpb24oKTsiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iaXRlbS1saXN0IiBuZy1pZj0idXNlck1lbnUuaXNQYXJ0bmVyQ2hhbm5lbCAmJiB1c2VyTWVudS5pc1BhcnRuZXJNYXJrZXRwbGFjZSAmJiB1c2VyTWVudS5zaG93U3RhdCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIG5nLWhyZWY9Int7Ojpyb3V0ZVBhdGguYWNjb3VudFBhcnRuZXJDaGFubmVsfX0iIGNsYXNzPSJtZW51LWl0ZW0iIG5nLWJpbmQ9Ijo6bG9jLlVzZXJNZW51LkNoYW5uZWwiPjwvYT48L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBuZy1ocmVmPSJ7ezo6cm91dGVQYXRoLmFjY291bnRQYXJ0bmVyTWFya2V0cGxhY2V9fSIgY2xhc3M9Im1lbnUtaXRlbSIgbmctYmluZD0iOjpsb2MuVXNlck1lbnUuTWFya2V0cGxhY2UiPjwvYT48L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGNsYXNzPSJtZW51LWl0ZW0iIG5nLWhyZWY9Int7Ojpyb3V0ZVBhdGgudXNlckxhdGVyfX0iIG5nLWJpbmQ9Ijo6bG9jLlVzZXJNZW51LkxhdGVyIj48L2E+PC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGNsYXNzPSJtZW51LWl0ZW0iIG5nLWhyZWY9Int7Ojpyb3V0ZVBhdGgudXNlclN1YnNjcmlwdGlvbnN9fSIgbmctYmluZD0iOjpsb2MuVXNlck1lbnUuU3Vic2NyaXB0aW9ucyI+PC9hPjwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBjbGFzcz0ibWVudS1pdGVtIiBuZy1ocmVmIG5nLWNsaWNrPSJjdHJsLkV4aXQoKSIgbmctYmluZD0iOjpsb2MuVXNlck1lbnUuRXhpdCI+PC9hPjwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPGEgbmctaHJlZj0ie3s6OnJvdXRlUGF0aC5hdXRofX0iIGNsYXNzPSJjb21tb24taWNvbiByaWdodCBsb2dpbiIgbmctc3dpdGNoLXdoZW49ImZhbHNlIj48L2E+DQogICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICA8dXAtYWdlbnQgY2xhc3M9InJpZ2h0IiBkYXRhLWNoYW5uZWxzPSI6OnVzZXJNZW51LmNoYW5uZWxzIiBkYXRhLWxvYz0iOjpsb2MiPjwvdXAtYWdlbnQ+DQogICAgICAgICAgICAgICAgPHNlYXJjaC1mb3JtIGRhdGEtaGVhZGVyLXN0eWxlPSJoZWFkZXJTdHlsZSIgZGF0YS1sb2M9Ijo6bG9jIj48L3NlYXJjaC1mb3JtPg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjbGVhcmZpeCI+PC9kaXY+DQogICAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KPC9kaXY+DQoNCjxkaXYgY2xhc3M9Im1haWwtd2FybmluZyIgbmctaWY9ImNvbmZpcm1FbWFpbE1lc3NhZ2VTaG93Ij4NCiAgICA8ZGl2IGNsYXNzPSJjb250YWluZXItZmx1aWQiPg0KICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTEyIj4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYWlsLXdhcm5pbmctY29udGFpbmVyIj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb21tb24taWNvbiBpY29uIj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPnt7Ojpsb2MuQ29uZmlybUVtYWlsTWVzc2FnZS5QYXJ0MX19IDxhIG5nLWhyZWY9Int7OjptYWluVXJsICsgcm91dGVQYXRoLmF1dGhWYWxpZGF0ZUVtYWlsfX0iIG5nLWNsaWNrPSJjdHJsLkNsb3NlQ29uZmlybUVtYWlsTWVzc2FnZSgpIj57ezo6bG9jLkNvbmZpcm1FbWFpbE1lc3NhZ2UuUGFydDJ9fTwvYT4ge3s6OmxvYy5Db25maXJtRW1haWxNZXNzYWdlLlBhcnQzfX08L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjbG9zZS1idXR0b24iIG5nLWNsaWNrPSJjdHJsLkNsb3NlQ29uZmlybUVtYWlsTWVzc2FnZSgpIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPnt7Ojpsb2MuQ29uZmlybUVtYWlsTWVzc2FnZS5DbG9zZX19PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCjwvZGl2Pg0KDQo8YXNpZGUgY2xhc3M9Im1lbnUiIG5nLWNsYXNzPSJtZW51U3R5bGUiPg0KICAgIDxuYXY+DQogICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtdGFicyIgbmctY2xhc3M9ImhlYWRlclN0eWxlIj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtdGFiIGNhdGVnb3JpZXMtbWVudSBsZWZ0IiBuZy1jbGFzcz0ibWVudUNhdGVnb3J5SGVhZGVyU3R5bGUiIG5nLWNsaWNrPSJjdHJsLkFjdGl2YXRlTWVudUNhdGVnb3J5KCkiPnt7Ojpsb2MuTWVudS5DYXRlZ29yeX19PC9kaXY+DQogICAgICAgICAgICA8IS0tPGRpdiBjbGFzcz0ibWVudS10YWIgdGFncy1tZW51IHJpZ2h0IGhpZGRlbi14cyIgbmctY2xhc3M9Im1lbnVUYWdIZWFkZXJTdHlsZSIgbmctY2xpY2s9ImN0cmwuQWN0aXZhdGVNZW51VGFnKCkiPnt7Ojpsb2MuTWVudS5UYWdzfX08L2Rpdj4tLT4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtdGFiIHRhZ3MtbWVudSByaWdodCBoaWRkZW4teHMiIG5nLWNsYXNzPSJtZW51VGFnSGVhZGVyU3R5bGUiPiZuYnNwOzwvZGl2Pg0KICAgICAgICAgICAgPGxhbmctc3dpdGNoZXIgY2xhc3M9InZpc2libGUteHMiIGRhdGEtaGVhZGVyLXN0eWxlPSJoZWFkZXJTdHlsZSI+PC9sYW5nLXN3aXRjaGVyPg0KICAgICAgICA8L2Rpdj4NCiAgICAgICAgPGRpdiBjbGFzcz0iY2xlYXJmaXgiPjwvZGl2Pg0KICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW1zIG1lbnUtc2Nyb2xsIj4NCiAgICAgICAgICAgIDx1bCBjbGFzcz0iY2F0ZWdvcmllcy1tZW51IiBuZy1jbGFzcz0ibWVudUNhdGVnb3J5U3R5bGUiPiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8bGkgbmctcmVwZWF0PSJpdGVtIGluIG1lbnUuY2F0ZWdvcnkiPg0KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibWVudS1pdGVtIiBuZy1ocmVmPSJ7ezo6dXJsfX0iIG5nLWNsYXNzPSJ7YWN0aXZlIDogdXJsID09IGN1cnJlbnRQYXRofSIgbmctaW5pdD0idXJsID0gKGl0ZW0gfCBtZW51Q2F0ZWdvcnlVcmwpIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgbmctc3JjPSJhc3NldHMvaW1hZ2VzL2NhdGVnb3J5L21lbnUve3s6Oml0ZW19fS5qcGciIGFsdD0iIiAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+e3s6OmxvYy5DYXRlZ29yeU5hbWVbaXRlbV19fTwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgIDwvbGk+DQogICAgICAgICAgICA8L3VsPg0KICAgICAgICAgICAgPCEtLTx1bCBjbGFzcz0idGFncy1tZW51IHRhZ3MtY29udGFpbmVyIiBuZy1jbGFzcz0ibWVudVRhZ1N0eWxlIj4NCiAgICAgICAgICAgICAgICA8bGkgbmctcmVwZWF0PSJ0YWcgaW4gbWVudS50YWdzIj4NCiAgICAgICAgICAgICAgICAgICAgPGEgbmctaHJlZj0ie3s6OnRhZy5uYW1lIHwgbWVudVRhZ1VybH19IiBjbGFzcz0ibWVudS1pdGVtIHRhZyI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic2hhcnAiPiM8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGFnLW5hbWUiPnt7Ojp0YWcubmFtZX19PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InJhdGluZyI+e3s6OnRhZy5jb3VudH19PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgIDwvdWw+LS0+DQogICAgICAgIDwvZGl2Pg0KICAgICAgICA8ZGl2IGlkPSJNZW51U3Vic3RyYXRlIj48L2Rpdj4NCiAgICA8L25hdj4NCjwvYXNpZGU+DQoNCjwvc2NyaXB0Pg0KPHNjcmlwdCB0eXBlPSJ0ZXh0L25nLXRlbXBsYXRlIiBpZD0iL2FwcC9zaGFyZWQvZm9vdGVyL2Zvb3Rlci5odG1sIj4NCjxkaXYgY2xhc3M9ImNvbnRhaW5lci1mbHVpZCIgbmctaWY9ImluaXRpYWxpemVkIj4NCiAgICA8ZGl2IGNsYXNzPSJyb3ciPg0KICAgICAgICA8ZGl2IGlkPSJhYm91dC11cyIgY2xhc3M9ImNvbC14cy0xMiBjb2wtbWQtNCBjb2wtbWQtcHVzaC00IGZvb3Rlci1saXN0IiBvbmNsaWNrPSJhbmd1bGFyLmVsZW1lbnQodGhpcykudG9nZ2xlQ2xhc3MoJ2V4cGFuZCcpIj4NCiAgICAgICAgICAgIDxwPnt7Ojpsb2MuQWJvdXRVc319PC9wPg0KICAgICAgICAgICAgPHVsPg0KICAgICAgICAgICAgICAgIDxsaT48YSBuZy1ocmVmPSJ7ezo6cm91dGVQYXRoLmluZm9BYm91dH19Ij57ezo6bG9jLkFib3V0fX08L2E+PC9saT4NCiAgICAgICAgICAgICAgICA8bGk+PGEgbmctaHJlZj0ie3s6OnJvdXRlUGF0aC5pbmZvQ29udGFjdHN9fSI+e3s6OmxvYy5Db250YWN0c319PC9hPjwvbGk+DQogICAgICAgICAgICAgICAgPGxpIG5nLWlmPSJJc1J1TGFuZyAmJiBJc0F1dGgiPjxhIG5nLWhyZWY9Int7Ojpyb3V0ZVBhdGguaW5mb1BhcnRuZXJzfX0iIG5nLWJpbmQ9Ijo6bG9jLkluZm9QYXJ0bmVycyI+PC9hPjwvbGk+DQogICAgICAgICAgICAgICAgPGxpIG5nLWlmPSJJc1J1TGFuZyAmJiBJc0F1dGgiPjxhIG5nLWhyZWY9Int7Ojpyb3V0ZVBhdGguaW5mb1BhcnRuZXJzUnVsZXN9fSIgbmctYmluZD0iOjpsb2MuSW5mb1BhcnRuZXJzUnVsZXMiPjwvYT48L2xpPg0KICAgICAgICAgICAgPC91bD4NCiAgICAgICAgPC9kaXY+DQogICAgICAgIDxkaXYgaWQ9ImZvci11c2VycyIgY2xhc3M9ImNvbC14cy0xMiBjb2wtbWQtNCBjb2wtbWQtcHVzaC00IGZvb3Rlci1saXN0IiBvbmNsaWNrPSJhbmd1bGFyLmVsZW1lbnQodGhpcykudG9nZ2xlQ2xhc3MoJ2V4cGFuZCcpIj4NCiAgICAgICAgICAgIDxwPnt7Ojpsb2MuRm9yVXNlcnN9fTwvcD4NCiAgICAgICAgICAgIDx1bD4NCiAgICAgICAgICAgICAgICA8bGk+PGEgbmctaHJlZj0ie3s6OnJvdXRlUGF0aC5pbmZvQ2hhbm5lbHN9fSI+e3s6OmxvYy5DaGFuZWxzQW5kVEFnc319PC9hPjwvbGk+DQogICAgICAgICAgICAgICAgPGxpIG5nLWlmPSJJc1J1TGFuZyI+PGEgbmctaHJlZj0ie3s6OnJvdXRlUGF0aC5pbmZvVGVybXNPZlVzZX19Ij57ezo6bG9jLlRlcm1zT29mVXNlfX08L2E+PC9saT4NCiAgICAgICAgICAgICAgICA8bGk+PGEgbmctaHJlZj0ie3s6OnJvdXRlUGF0aC5pbmZvUHJpdmFjeVBvbGljeX19Ij57ezo6bG9jLkluZm9Qcml2YWN5UG9saWN5fX08L2E+PC9saT4NCiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly9hZHZhcmsuYml0cml4MjQucnUvb25saW5lL215dmkiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vZm9sbG93Ij57ezo6bG9jLk1haW50ZW5hbmNlfX08L2E+PC9saT4NCiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0ie3s6OnJvdXRlUGF0aC5pbmZvRmFxUnVsZXN9fSI+RkFRPC9hPjwvbGk+DQogICAgICAgICAgICAgICAgPCEtLTxsaT48YSBocmVmPSIjIj57ezo6bG9jLlBhcnRuZXJzfX08L2E+PC9saT4NCiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iIyIgbmctYmluZD0iOjpsb2MuQ29weXJpZ2h0SG9sZGVycyI+PC9hPjwvbGk+LS0+DQogICAgICAgICAgICA8L3VsPg0KICAgICAgICA8L2Rpdj4NCiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTEyIGNvbC1tZC00IGNvbC1tZC1wdWxsLTggZm9vdGVyLWljb25zIj4NCiAgICAgICAgICAgIDxhIGhyZWY9IiIgY2xhc3M9ImNvbW1vbi1pY29uIGxvZ29ydSBjb2wtbWQtMTIgbGVmdCI+PC9hPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic29jaWFsIGNvbC1tZC0xMiBsZWZ0Ij4NCiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vbXl2aXJ1LyIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJjb21tb24taWNvbiBmYiI+PC9hPg0KICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vdmsuY29tL215dmkiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0iY29tbW9uLWljb24gdmsiPjwvYT4NCiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3R3aXR0ZXIuY29tL3J1X215dmkiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0iY29tbW9uLWljb24gdHciPjwvYT4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPHAgY2xhc3M9ImNvcHlyaWdodCBjb2wtbWQtMTIgaGlkZGVuLXhzIHJpZ2h0Ij4yMDA2LXt7Ojpjb250LkdldFllYXIoKX19ICZjb3B5OyB7ezo6bG9jLk15dml9fTwvcD4NCiAgICAgICAgPC9kaXY+DQogICAgICAgIDxkaXYgY2xhc3M9ImNsZWFyZml4Ij48L2Rpdj4NCiAgICA8L2Rpdj4NCiAgICA8ZGl2IG5nLXN0eWxlPSJwaWxsb3dTdHlsZSI+PC9kaXY+DQo8L2Rpdj4NCg0KPC9zY3JpcHQ+DQo8c2NyaXB0IHR5cGU9InRleHQvbmctdGVtcGxhdGUiIGlkPSIvYXBwL3NoYXJlZC92aWRlb3MvdmlkZW8tZWxlbWVudC5odG1sIj4NCjxkbCBjbGFzcz0icG9zdGVyLXdyYXBwZXIiPg0KICAgIDxkdCBjbGFzcz0icG9zdGVyLWltYWdlIiBuZy1jbGFzcz0ie2N1cnJlbnQ6ICRjdHJsLk5vd1BsYXlpbmd9Ij4NCiAgICAgICAgPHNwYW4gY2xhc3M9InNodXR0ZXIgY29tbW9uLWljb24gY2VudGVyIj48L3NwYW4+DQoNCiAgICAgICAgPGEgbmctaHJlZj0ie3s6OiRjdHJsLldhdGNoVXJsICsgJyN3YXRjaCd9fSIgbmctY2xpY2s9Ijo6JGN0cmwuUHJlcGxheSgpIiBjbGFzcz0iY2VudGVyIj4NCiAgICAgICAgICAgIDxpbWcgbmctc3JjPSJ7ezo6JGN0cmwuVmlkZW8ucHJldmlld1VybH19IiBuZy1hdHRyLWFsdD0ie3s6OiRjdHJsLlZpZGVvLnRpdGxlfX0iIGNsYXNzPSJpbWctcmVzcG9uc2l2ZSIgLz4NCiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwbGF5IGNlbnRlciI+PC9zcGFuPg0KICAgICAgICAgICAgPHNwYW4gY2xhc3M9InZpZXdlZC12aWRlbyBjb21tb24taWNvbiBjZW50ZXIiPjwvc3Bhbj4NCiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjdXJyZW50LXZpZGVvIGNlbnRlciI+DQogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNlbnRlciIgbmctYmluZD0iOjokY3RybC5Mb2MuVmlkZW9TdGF0dXMuTm93UGxheWluZyI+PC9zcGFuPg0KICAgICAgICAgICAgPC9zcGFuPg0KICAgICAgICA8L2E+DQoNCiAgICAgICAgPHNwYW4gY2xhc3M9InZpZGVvLXN0YXR1cyBjZW50ZXIiIG5nLWlmPSIkY3RybC5WaWRlby5kZWxldGUiPg0KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNlbnRlciBzdGF0dXMtbGFiZWwiPg0KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGF0dXMtdGV4dCIgbmctYmluZD0iOjokY3RybC5Mb2MuVmlkZW9TdGF0dXMuRGVsZXRlZCI+PC9zcGFuPg0KICAgICAgICAgICAgPC9zcGFuPg0KICAgICAgICA8L3NwYW4+DQoNCiAgICAgICAgPGRlbGF5ZWQtdmlkZW8tYnV0dG9uIGRhdGEtdmlkZW8taWQ9IiRjdHJsLlZpZGVvLmlkIiBkYXRhLWxvYz0iJGN0cmwuTG9jIj48L2RlbGF5ZWQtdmlkZW8tYnV0dG9uPg0KDQogICAgICAgIDxzcGFuIGNsYXNzPSJkdXJhdGlvbiIgbmctYmluZD0iOjokY3RybC5WaWRlby5kdXJhdGlvbiB8IGR1cmF0aW9uIj48L3NwYW4+DQogICAgPC9kdD4NCiAgICA8ZGQgY2xhc3M9InZpZGVvLXRpdGxlIj4NCiAgICAgICAgPGEgbmctaHJlZj0ie3s6OiRjdHJsLlZpZGVvLmNoYW5uZWwuZGV0YWlsVXJsfX0iIG5nLWF0dHItdGl0bGU9Int7OjokY3RybC5WaWRlby5jaGFubmVsLm5hbWV9fSIgbmctc3dpdGNoPSIkY3RybC5WaWRlby5jaGFubmVsLmRlZmF1bHRQcmV2aWV3SWQgIT0gdW5kZWZpbmVkIj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNoYW5uZWwtaW1hZ2UgY2hhbm5lbC1kZWZhdWx0LWF2YXRhciIgbmctY2xhc3M9IidkZWZhdWx0LScgKyAkY3RybC5WaWRlby5jaGFubmVsLmRlZmF1bHRQcmV2aWV3SWQiIG5nLXN3aXRjaC13aGVuPSJ0cnVlIj57ezo6JGN0cmwuVmlkZW8uY2hhbm5lbC5uYW1lLmNoYXJBdCgwKX19PC9kaXY+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjaGFubmVsLWltYWdlIiBuZy1zdHlsZT0iOjp7J2JhY2tncm91bmQtaW1hZ2UnOiAndXJsKFwnJyskY3RybC5WaWRlby5jaGFubmVsLnByZXZpZXdVcmwrJ1wnKSd9IiBuZy1zd2l0Y2gtd2hlbj0iZmFsc2UiPjwvZGl2Pg0KICAgICAgICA8L2E+DQogICAgICAgIDxhIG5nLWhyZWY9Int7OjokY3RybC5XYXRjaFVybCArICcjd2F0Y2gnIH19IiBuZy1jbGljaz0iOjokY3RybC5QcmVwbGF5KCkiIGNsYXNzPSJ2aWRlby1uYW1lIiBuZy1hdHRyLXRpdGxlPSJ7ezo6JGN0cmwuVmlkZW8udGl0bGV9fSIgbmctYmluZD0iOjokY3RybC5WaWRlby50aXRsZSIgbmctaWY9IiEkY3RybC5WaWRlby5kZWxldGUiPjwvYT4NCiAgICAgICAgPGRpdiBjbGFzcz0idmlkZW8tbmFtZSIgbmctYXR0ci10aXRsZT0ie3s6OiRjdHJsLlZpZGVvLnRpdGxlfX0iIG5nLWJpbmQ9Ijo6JGN0cmwuVmlkZW8udGl0bGUiIG5nLWlmPSIkY3RybC5WaWRlby5kZWxldGUiPjwvZGl2Pg0KICAgIDwvZGQ+DQo8L2RsPg0KPC9zY3JpcHQ+DQo8c2NyaXB0IHR5cGU9InRleHQvbmctdGVtcGxhdGUiIGlkPSIvYXBwL3NoYXJlZC92aWRlby1zaG93Y2FzZS92aWRlby1zaG93Y2FzZS5odG1sIj4NCjxuZy1zd2l0Y2ggb249IiRjdHJsLiRWaWRlb3MuJGZhaWx1cmUiIG5nLWlmPSIkY3RybC4kVmlkZW9zLmxlbmd0aCAhPSAwIj4NCg0KICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciIgbmctc3dpdGNoLXdoZW49InRydWUiPg0KICAgICAgICA8ZGl2IGNsYXNzPSJlcnJvci1saXN0LXBsdWciPjwvZGl2Pg0KICAgIDwvZGl2Pg0KDQogICAgPGRpdiBuZy1zd2l0Y2gtZGVmYXVsdD4NCiAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyLWZsdWlkIj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTEyIHNsaWRlLXNob3ctd3JhcHBlciI+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNsaWRlLXNob3ctY29udGFpbmVyIGNlbnRlciI+DQogICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzbGlkZS1zaG93LWJnLWxlZnQiPjwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgbmctY2xpY2s9Ijo6JGN0cmwuTW92ZUJhY2t3YXJkKCkiICBjbGFzcz0icHJldiBjb21tb24taWNvbiBhcnJvdyIgbmctY2xhc3M9InsnYWN0aXZlJzohJGN0cmwuSGlkZU5hdmlnYXRpb259IiBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIG5nLXNob3c9IiRjdHJsLiRWaWRlb3MubGVuZ3RoID4xIj48L2E+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNsaWRlLXNob3ciIHNsaWRlLXNob3ctc2Nyb2xsPSJ7eyRjdHJsLkN1cnJlbnRJbmRleH19IiBuZy1zd2lwZS1yaWdodD0iOjokY3RybC5Nb3ZlQmFja3dhcmQoKSIgbmctc3dpcGUtbGVmdD0iOjokY3RybC5Nb3ZlRm9yd2FyZCgpIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IG5nLXJlcGVhdD0iaXRlbSBpbiAkY3RybC4kVmlkZW9zIiBjbGFzcz0idmlkZW8tcHJldmlldy1jb250YWluZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ2aWRlbyINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1zdHlsZT0ie2JhY2tncm91bmRJbWFnZTogJ3VybChcJycraXRlbS5wcmV2aWV3VXJsKydcJyknfSINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBteXZpLXZpZGVvLXBsYXllci1jb250YWluZXI9Int7OjooJGN0cmwuSWQgKyAkaW5kZXgpfX0iDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmctaWY9IiFpdGVtLmlzR2VvQmxvY2tlZCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ2aWRlby1ibG9ja2VkLWNvbnRhaW5lciIgbmctaWY9Iml0ZW0uaXNHZW9CbG9ja2VkIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InZpZGVvLWJsb2NrZWQiIG5nLWlmPSJpdGVtLmlzR2VvQmxvY2tlZCIgbmctYmluZD0iOjokY3RybC5Mb2MuU2hvd0Nhc2UuR2VvQmxvY2tlZENvbnRlbnQiPjwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idmlkZW8tZGVsZXRlLWNvbnRhaW5lciIgbmctaWY9Iml0ZW0uZGVsZXRlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIG5nLWJpbmQ9Ijo6JGN0cmwuTG9jLlNob3dDYXNlLlZpZGVvRGVsZXRlZCI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzbGlkZS1zaG93LWJnLXJpZ2h0Ij48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIG5nLWNsaWNrPSI6OiRjdHJsLk1vdmVGb3J3YXJkKCkiIGNsYXNzPSJuZXh0IGNvbW1vbi1pY29uIGFycm93IiBuZy1jbGFzcz0ieydhY3RpdmUnOiEkY3RybC5IaWRlTmF2aWdhdGlvbn0iIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgbmctc2hvdz0iJGN0cmwuJFZpZGVvcy5sZW5ndGggPiAxIj48L2E+DQoNCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQogICAgICAgIDxkaXYgY2xhc3M9ImNsZWFyZml4Ij48L2Rpdj4NCg0KICAgICAgICA8bXl2aS12aWRlby1pbmZvIGRhdGEtdmlkZW89IiRjdHJsLkN1cnJlbnREZXRhaWxlZCIgZGF0YS1tb2RlPSJ7ezo6JGN0cmwuTW9kZX19IiBkYXRhLXN0YXRlPSIkY3RybC5TdGF0ZSIgZGF0YS1sb2M9IiRjdHJsLkxvYyI+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0aXRsZSIgbmctY2xhc3M9IntkZWxldGU6JGN0cmwuQ3VycmVudFZpZGVvLmRlbGV0ZX0iIG5nLWNsaWNrPSIkY3RybC5TdGF0ZSA9ICgkY3RybC5TdGF0ZSA9PSAxIHx8ICRjdHJsLkN1cnJlbnRWaWRlby5kZWxldGUgPyAwIDogMSkiPg0KICAgICAgICAgICAgICAgIDxkaXYgbmctYmluZD0iJGN0cmwuQ3VycmVudFZpZGVvLnRpdGxlIiBuZy1zdHlsZT0ie3Zpc2liaWxpdHk6ICRjdHJsLlN0YXRlICE9IDEgPyAndmlzaWJsZScgOiAnaGlkZGVuJ30iPjwvZGl2Pg0KICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRlc2NyaXB0aW9uLWJ1dHRvbiIgbmctY2xhc3M9IntkZWxldGU6JGN0cmwuQ3VycmVudFZpZGVvLmRlbGV0ZX0iIG5nLWNsaWNrPSIkY3RybC5TdGF0ZSA9ICgkY3RybC5TdGF0ZSA9PSAxID8gMCA6IDEpIj48L2Rpdj4NCg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZWRpdC1idXR0b25zIiBuZy1pZj0iJGN0cmwuSGFzT3duIj4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJlZGl0LWJ1dHRvbiIgbmctY2xpY2s9IiRjdHJsLk9uRWRpdEJ0bkNsaWNrKHskdmlkZW9faWQ6ICRjdHJsLkN1cnJlbnRWaWRlby5pZCwgJGVkaXRfdHlwZTogMH0pIiBuZy1pZj0iISRjdHJsLkN1cnJlbnRWaWRlby5kZWxldGUiPg0KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29tbW9uLWljb24iPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRleHQiIG5nLWJpbmQ9Ijo6JGN0cmwuTG9jLlNob3dDYXNlLkVkaXRCdXR0b24iPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkZWxldGUtYnV0dG9uIiBuZy1jbGljaz0iJGN0cmwuT25FZGl0QnRuQ2xpY2soeyR2aWRlb19pZDogJGN0cmwuQ3VycmVudFZpZGVvLmlkLCAkZWRpdF90eXBlOiAxfSkiIG5nLWlmPSIhJGN0cmwuQ3VycmVudFZpZGVvLmRlbGV0ZSI+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb21tb24taWNvbiI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGV4dCIgbmctYmluZD0iOjokY3RybC5Mb2MuU2hvd0Nhc2UuRGVsZXRlQnV0dG9uIj48L3NwYW4+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVzdG9yZS1idXR0b24iIG5nLWNsaWNrPSIkY3RybC5PbkVkaXRCdG5DbGljayh7JHZpZGVvX2lkOiAkY3RybC5DdXJyZW50VmlkZW8uaWQsICRlZGl0X3R5cGU6IDJ9KSIgbmctaWY9IiRjdHJsLkN1cnJlbnRWaWRlby5kZWxldGUiPg0KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29tbW9uLWljb24iPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRleHQiIG5nLWJpbmQ9Ijo6JGN0cmwuTG9jLlNob3dDYXNlLlJlc3RvcmVCdXR0b24iPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjbGVhcmZpeCI+PC9kaXY+DQogICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZHVyYXRpb24iIG5nLWJpbmQ9Ijo6JGN0cmwuQ3VycmVudFZpZGVvLmR1cmF0aW9uIHwgZHVyYXRpb24iPjwvZGl2Pg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2xlYXJmaXgiPjwvZGl2Pg0KICAgICAgICA8L215dmktdmlkZW8taW5mbz4NCg0KICAgIDwvZGl2Pg0KPC9uZy1zd2l0Y2g+DQo8ZGl2IGNsYXNzPSJjbGVhcmZpeCI+PC9kaXY+DQoNCjwvc2NyaXB0Pg0KPHNjcmlwdCB0eXBlPSJ0ZXh0L25nLXRlbXBsYXRlIiBpZD0iL2FwcC9zaGFyZWQvdmlkZW8tc2hvd2Nhc2UvdmlkZW8taW5mby5odG1sIj4NCjxkaXYgY2xhc3M9ImNvbnRhaW5lciIgbmctaWY9IiRjdHJsLlZpZGVvLiRmYWlsdXJlID09IHRydWUiPg0KICAgIDxkaXYgY2xhc3M9ImVycm9yLWxpc3QtcGx1ZyI+PC9kaXY+DQo8L2Rpdj4NCg0KPGRpdiBuZy1yZXBlYXQ9InZpZGVvIGluIFskY3RybC5WaWRlb10iIG5nLWlmPSIkY3RybC5WaWRlby4kZmFpbHVyZSAhPSB0cnVlIj4NCiAgICA8ZGl2IGNsYXNzPSJzbGlkZS1zaG93LXZpZGVvLWluZm8gY29udGFpbmVyLWZsdWlkIj4NCiAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC14cy0xMiBjb2wtbGctMTAgY29sLWxnLW9mZnNldC0xIj4NCg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InZpZGVvLWluZm8iIG5nLXRyYW5zY2x1ZGU+PC9kaXY+DQoNCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkZXNjcmlwdGlvbiIgbmctY2xhc3M9IntleHBhbmQgOiAkY3RybC5TdGF0ZSA9PSAxfSIgbmctc3dpdGNoIG9uPSIkY3RybC5Nb2RlIj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBuZy1zd2l0Y2gtd2hlbj0iJ2NoYW5uZWwnIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRpdGxlIGNoYW5uZWwtaW5mbyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAge3s6OnZpZGVvLnRpdGxlfX0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRpbWU+e3s6OnZpZGVvLmNyZWF0ZURhdGUgfCBkYXRlIDogJ2Z1bGxEYXRlJ319PC90aW1lPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idmlld3MiPjxzcGFuIGNsYXNzPSJjb21tb24taWNvbiBkb3VibGUtc3RhciI+PC9zcGFuPnt7Ojp2aWRlby5yYXRpbmcgfCBudW1iZXJ9fTwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNsZWFyZml4Ij48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIG5nLWhyZWY9Int7Ojp2aWRlby5jYXRlZ29yeS51cmx9fSI+e3s6OiRjdHJsLkxvYy5DYXRlZ29yeU5hbWVbdmlkZW8uY2F0ZWdvcnkubmFtZV19fTwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJ0ZXh0Ij57ezo6dmlkZW8uZGVzY3JpcHRpb259fTwvcD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRhZ3MtY29udGFpbmVyIiBuZy1pZj0iOjp2aWRlby50YWdzLmxlbmd0aCA+IDAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIG5nLWhyZWY9Int7Ojp2aWRlby5hcmNoaXZlVXJsIHwgY2hhbm5lbEFyY2hpdmVVcmwgOiB0YWcubmFtZX19IiBuZy1yZXBlYXQ9InRhZyBpbiA6OnZpZGVvLnRhZ3MiIGNsYXNzPSJ0YWciPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic2hhcnAiPiM8L3NwYW4+e3s6OnRhZy5uYW1lfX0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgbmctc3dpdGNoLWRlZmF1bHQ+DQogICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0idGl0bGUgY2hhbm5lbC1pbmZvIiBuZy1ocmVmPSJ7ezo6dmlkZW8uY2hhbm5lbC5kZXRhaWxVcmx9fSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXZhdGFyIGNoYW5uZWwtZGVmYXVsdC1hdmF0YXIiIG5nLWNsYXNzPSInZGVmYXVsdC0nICsgdmlkZW8uY2hhbm5lbC5kZWZhdWx0UHJldmlld0lkIiBhbHQ9Int7Ojp2aWRlby5jaGFubmVsLm5hbWV9fSIgbmctaWY9InZpZGVvLmNoYW5uZWwuZGVmYXVsdFByZXZpZXdJZCAhPSB1bmRlZmluZWQiPnt7Ojp2aWRlby5jaGFubmVsLm5hbWUuY2hhckF0KDApfX08L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhdmF0YXIiIG5nLXN0eWxlPSI6OnsnYmFja2dyb3VuZC1pbWFnZSc6ICd1cmwoXCcnK3ZpZGVvLmNoYW5uZWwucHJldmlld1VybCsnXCcpJ30iIGFsdD0ie3s6OnZpZGVvLmNoYW5uZWwubmFtZX19IiBuZy1pZj0idmlkZW8uY2hhbm5lbC5kZWZhdWx0UHJldmlld0lkID09IHVuZGVmaW5lZCI+PC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNoYW5uZWwtbmFtZSI+e3s6OnZpZGVvLmNoYW5uZWwubmFtZX19PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGltZT57ezo6dmlkZW8uY3JlYXRlRGF0ZSB8IGRhdGUgOiAnZnVsbERhdGUnfX08L3RpbWU+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ2aWV3cyI+PHNwYW4gY2xhc3M9ImNvbW1vbi1pY29uIGRvdWJsZS1zdGFyIj48L3NwYW4+e3s6OnZpZGVvLnJhdGluZyB8IG51bWJlcn19PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNsZWFyZml4Ij48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIG5nLWhyZWY9Int7Ojp2aWRlby5jYXRlZ29yeS51cmx9fSI+e3s6OiRjdHJsLkxvYy5DYXRlZ29yeU5hbWVbdmlkZW8uY2F0ZWdvcnkubmFtZV19fTwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJ0ZXh0Ij57ezo6dmlkZW8uZGVzY3JpcHRpb259fTwvcD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRhZ3MtY29udGFpbmVyIiBuZy1pZj0iOjp2aWRlby50YWdzLmxlbmd0aCA+IDAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIG5nLWhyZWY9Int7Ojp2aWRlby5hcmNoaXZlVXJsIHwgY2hhbm5lbEFyY2hpdmVVcmwgOiB0YWcubmFtZX19IiBuZy1yZXBlYXQ9InRhZyBpbiB2aWRlby50YWdzIiBjbGFzcz0idGFnIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InNoYXJwIj4jPC9zcGFuPnt7Ojp0YWcubmFtZX19DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQoNCiAgICA8ZGl2IGNsYXNzPSJjbGVhcmZpeCI+PC9kaXY+DQoNCiAgICA8ZGl2IGNsYXNzPSJzbGlkZS1zaG93LXZpZGVvLXN0YXRlLWluZm8gY29udGFpbmVyLWZsdWlkIj4NCiAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC14cy0xMiBjb2wtbGctMTAgY29sLWxnLW9mZnNldC0xIj4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ2aWRlby1zdGF0ZS1pbmZvIj4NCg0KICAgICAgICAgICAgICAgICAgICA8bXl2aS12aWRlby12b3RlIGRhdGEtaWQ9InZpZGVvLmlkIiBkYXRhLWxpa2U9InZpZGVvLnZvdGVMaWtlIiBkYXRhLWRpc2xpa2U9InZpZGVvLnZvdGVEaXNsaWtlIj48L215dmktdmlkZW8tdm90ZT4NCg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ2aWV3cyIgdGl0bGU9Int7OjokY3RybC5Mb2MuU2hvd0Nhc2UuUmF0aW5nfX0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbW1vbi1pY29uIGRvdWJsZS1zdGFyIj48L3NwYW4+e3s6OnZpZGVvLnJhdGluZyB8IG1lZ2FOdW1iZXJ9fQ0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0YWdzLWJ0biIgbmctY2xpY2s9IiRjdHJsLlN0YXRlPSgkY3RybC5TdGF0ZSA9PSAyID8gMCA6IDIpIiBuZy1jbGFzcz0ie2V4cGFuZCA6ICRjdHJsLlN0YXRlID09IDJ9Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb21tb24taWNvbiI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICA8ZGVsYXllZC12aWRlby1idXR0b24gZGF0YS12aWRlby1pZD0idmlkZW8uaWQiIGRhdGEtbG9jPSIkY3RybC5Mb2MiPjwvZGVsYXllZC12aWRlby1idXR0b24+DQoNCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2hhcmUtYnRuIiBuZy1jbGljaz0iJGN0cmwuU3RhdGU9KCRjdHJsLlN0YXRlID09IDMgPyAwIDogMykiIG5nLWNsYXNzPSJ7ZXhwYW5kIDogJGN0cmwuU3RhdGUgPT0gM30iIG5nLWlmPSJ2aWRlby5lbmFibGVTaGFyZWRVcmwiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbW1vbi1pY29uIj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNsZWFyZml4Ij48L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjbGVhcmZpeCI+PC9kaXY+DQoNCiAgICAgICAgICAgICAgICA8ZW1iZWQtc2V0dGluZ3MgZGF0YS12aWRlbz0idmlkZW8iIGRhdGEtbG9jPSIkY3RybC5Mb2MiIGNsYXNzPSJzaGFyZS1jb250YWluZXIiIG5nLWNsYXNzPSJ7ZXhwYW5kIDogJGN0cmwuU3RhdGUgPT0gM30iPjwvZW1iZWQtc2V0dGluZ3M+DQoNCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0YWdzIHRhZ3MtY29udGFpbmVyIiBuZy1jbGFzcz0ie2V4cGFuZCA6ICRjdHJsLlN0YXRlPT0yfSIgbmctc2hvdz0idmlkZW8udGFncy5sZW5ndGggPiAwIj4NCiAgICAgICAgICAgICAgICAgICAgPGEgbmctaHJlZj0ie3s6OnZpZGVvLmFyY2hpdmVVcmwgfCBjaGFubmVsQXJjaGl2ZVVybCA6IHRhZy5uYW1lfX0iIG5nLXJlcGVhdD0idGFnIGluIHZpZGVvLnRhZ3MiIGNsYXNzPSJ0YWciPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InNoYXJwIj4jPC9zcGFuPnt7Ojp0YWcubmFtZX19DQogICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2xlYXJmaXgiPjwvZGl2Pg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KDQo8L2Rpdj4NCjwvc2NyaXB0Pg0KPHNjcmlwdCB0eXBlPSJ0ZXh0L25nLXRlbXBsYXRlIiBpZD0iL2FwcC9zaGFyZWQvdmlkZW8tc2hvd2Nhc2Uvc2hhcmVkL2VtYmVkLXNldHRpbmdzLmh0bWwiPg0KPGlucHV0IHR5cGU9InRleHQiIGlkPSJFbWJlZElucHV0IiBzZWxlY3Qtb24tY2xpY2sgdmFsdWU9IjxpZnJhbWUgd2lkdGg9JiMzNDt7eyRjdHJsLklmcmFtZVdpZHRoIHx8IDY0MH19JiMzNDsgaGVpZ2h0PSYjMzQ7e3skY3RybC5JZnJhbWVIZWlnaHQgfHwgNDgwfX0mIzM0OyBzcmM9JiMzNDt7eyRjdHJsLkVtYmVkVXJsfX17eyRjdHJsLlBsYXlsaXN0LkVtYmVkUGFyYW0gfHwgJyd9fSYjMzQ7IGZyYW1lYm9yZGVyPSYjMzQ7MCYjMzQ7IGFsbG93ZnVsbHNjcmVlbj48L2lmcmFtZT4iIC8+DQo8c3BhbiBpZD0iQ29weU1lc3NhZ2UiIGNsYXNzPSJpcy1jb3B5Ij57ezo6JGN0cmwuTG9jLkVtYmVkLkNvcHlDb2RlfX08L3NwYW4+DQo8ZGl2IGNsYXNzPSJjbGVhcmZpeCI+PC9kaXY+DQoNCjxkaXYgY2xhc3M9ImFkZGl0aW9uYWwtb3B0aW9ucy1ibG9jayIgbmctY2xhc3M9InsnZXhwYW5kJzogb3B0aW9uc1Nob3d9Ij4NCg0KICAgIDxzcGFuIGNsYXNzPSJ0b29nbGUtYWRkaXRpb25hbC1vcHRpb25zIiBuZy1jbGljaz0ib3B0aW9uc1Nob3cgPSAhb3B0aW9uc1Nob3ciPg0KICAgICAgICA8c3BhbiBjbGFzcz0idGV4dCIgbmctYmluZD0iOjokY3RybC5Mb2MuRW1iZWQuQWRkaXRpb25hbE9wdGlvbnMiPjwvc3Bhbj4NCiAgICAgICAgPHNwYW4gY2xhc3M9ImNhcmV0Ij48L3NwYW4+DQogICAgPC9zcGFuPg0KICAgIDxkaXYgY2xhc3M9ImNsZWFyZml4Ij48L2Rpdj4NCg0KICAgIDxkaXYgY2xhc3M9ImFkZGl0aW9uYWwtb3B0aW9ucy1jb250YWluZXIiPg0KICAgICAgICA8ZGl2IGNsYXNzPSJ2aWRlby1vcHRpb25zIj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb3RvY29sIj4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJvcHRpb25zLWhlYWQiIG5nLWJpbmQ9Ijo6JGN0cmwuTG9jLkVtYmVkLlByb3RvY29sICsgJzonIj48L2Rpdj4NCiAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9InNlbGVjdC1hbGwgY3VzdG9tLWNoZWNrYm94Ij4NCiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InJhZGlvIiBuZy1tb2RlbD0iJGN0cmwuRW1iZWRVcmwiIHZhbHVlPSJ7ezo6JGN0cmwuVmlkZW9JbmZvLkh0dHBVcmx9fSI+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb21tb24taWNvbiI+PC9zcGFuPmh0dHANCiAgICAgICAgICAgICAgICA8L2xhYmVsPg0KICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0ic2VsZWN0LWFsbCBjdXN0b20tY2hlY2tib3giPg0KICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0icmFkaW8iIG5nLW1vZGVsPSIkY3RybC5FbWJlZFVybCIgdmFsdWU9Int7OjokY3RybC5WaWRlb0luZm8uSHR0cHNVcmx9fSI+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb21tb24taWNvbiI+PC9zcGFuPmh0dHBzDQogICAgICAgICAgICAgICAgPC9sYWJlbD4NCg0KICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNpemUiPg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9wdGlvbnMtaGVhZCI+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIG5nLWJpbmQ9Ijo6JGN0cmwuTG9jLkVtYmVkLlNpemUgKyAnOiciPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InNlbGVjdC1zaXplIiBuZy1jbGFzcz0ieydhY3RpdmUnOiAkY3RybC5DdXJyZW50U2NyZWVuVHlwZSA9PSAnbm9ybWFsJyB8fCAkY3RybC5DdXJyZW50U2NyZWVuVHlwZSA9PSB1bmRlZmluZWR9IiBuZy1jbGljaz0iJGN0cmwuT25TY3JlZW5UeXBlQ2xpY2soJ25vcm1hbCcpIj40eDM8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzZWxlY3Qtc2l6ZSIgaHJlZj0iIyIgbmctY2xhc3M9InsnYWN0aXZlJzogJGN0cmwuQ3VycmVudFNjcmVlblR5cGUgPT0gJ3dpZGUnfSIgbmctY2xpY2s9IiRjdHJsLk9uU2NyZWVuVHlwZUNsaWNrKCd3aWRlJykiPjE2eDk8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNsZWFyZml4Ij48L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjbGVhcmZpeCI+PC9kaXY+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZWRpdC1zaXplIj4NCiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIG5nLW1vZGVsPSIkY3RybC5JZnJhbWVXaWR0aCIgbmctY2hhbmdlPSIkY3RybC5PbldpZHRoQ2hhbmdlKCkiIHJlcXVpcmVkIG51bWJlci1yYW5nZSBudW1iZXItcmFuZ2UtbWluPSIxMDAiIG51bWJlci1yYW5nZS1tYXg9IjIwMDAiIC8+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkZWxpbWl0ZXIiPtGFPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgbmctbW9kZWw9IiRjdHJsLklmcmFtZUhlaWdodCIgbmctY2hhbmdlPSIkY3RybC5PbkhlaWdodENoYW5nZSgpIiByZXF1aXJlZCBudW1iZXItcmFuZ2UgbnVtYmVyLXJhbmdlLW1pbj0iMTAwIiBudW1iZXItcmFuZ2UtbWF4PSIyMDAwIiAvPg0KDQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2xlYXJmaXgiPjwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCiAgICAgICAgPGRpdiBjbGFzcz0iYWRkLXBsYXlsaXN0LWJsb2NrIj4NCiAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iYWRkLXBsYXlsaXN0IGN1c3RvbS1jaGVja2JveCIgbmctY2xhc3M9InsnZGlzYWJsZWQnOiAhJGN0cmwuUGxheWxpc3QuSXNBdmFpbGFibGV9IiBuZy1jbGljaz0iJGN0cmwuU2hvd0luZm8odHJ1ZSkiPg0KICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCINCiAgICAgICAgICAgICAgICAgICAgICAgbmctbW9kZWw9IiRjdHJsLlBsYXlsaXN0LklzSW5jbHVkZWQiDQogICAgICAgICAgICAgICAgICAgICAgIG5nLWRpc2FibGVkPSIhJGN0cmwuUGxheWxpc3QuSXNBdmFpbGFibGUiDQogICAgICAgICAgICAgICAgICAgICAgIG5nLWNoYW5nZT0iJGN0cmwuSW5jbHVkZVBsYXlsaXN0KCkiIC8+DQogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbW1vbi1pY29uIj48L3NwYW4+DQogICAgICAgICAgICAgICAgPHNwYW4gbmctYmluZD0iOjokY3RybC5Mb2MuRW1iZWQuQWRkUGxheWxpc3QiPjwvc3Bhbj4NCiAgICAgICAgICAgIDwvbGFiZWw+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbmZvcm1hdGlvbi1pY29uIiBuZy1jbGljaz0iJGN0cmwuU2hvd0luZm8oKSI+DQogICAgICAgICAgICAgICAgaQ0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRvb2x0aXAgaG92ZXItdGV4dCIgbmctaWY9IiRjdHJsLlBsYXlsaXN0LklzSW5mb1Nob3ciIG5nLXN3aXRjaD0iJGN0cmwuUGxheWxpc3QuSXNVc2VyT3duIj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBuZy1zd2l0Y2gtd2hlbj0idHJ1ZSI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBuZy1iaW5kPSI6OiRjdHJsLkxvYy5FbWJlZC5JbmZvLkFkZFRhZzEiPjwvc3Bhbj48YnIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIG5nLWhyZWY9Int7OjokY3RybC5QbGF5bGlzdC5FZGl0VGFnVXJsfX0iIHRhcmdldD0iX2JsYW5rIiBuZy1iaW5kPSI6OiRjdHJsLkxvYy5FbWJlZC5JbmZvLkFkZFRhZzIiPjwvYT4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgbmctc3dpdGNoLXdoZW49ImZhbHNlIiBuZy1iaW5kPSI6OiRjdHJsLkxvYy5FbWJlZC5JbmZvLk5vdFRhZyI+PC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgbmctc3dpdGNoLWRlZmF1bHQgbmctYmluZD0iOjokY3RybC5Mb2MuRW1iZWQuSW5mby5EZWZhdWx0Ij48L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2xlYXJmaXgiPjwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCg0KICAgICAgICA8ZGl2IG5nLWlmPSIkY3RybC5QbGF5bGlzdC5Jc0luY2x1ZGVkIj4NCg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0idGFncy1jb250YWluZXIiIG5nLWlmPSIkY3RybC5WaWRlb0luZm8uVGFncyAhPSB1bmRlZmluZWQgJiYgJGN0cmwuVmlkZW9JbmZvLlRhZ3MubGVuZ3RoID4gMSI+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGFnIiBuZy1yZXBlYXQ9InRhZyBpbiAkY3RybC5WaWRlb0luZm8uVGFncyIgbmctY2xhc3M9InsnYWN0aXZlJzogJGN0cmwuUGxheWxpc3QuVGFnSWQgPT0gdGFnLmlkfSIgbmctY2xpY2s9IiRjdHJsLlNldFRhZ1BsYXlsaXN0KHRhZy5pZCkiPg0KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic2hhcnAiPiM8L3NwYW4+e3s6OnRhZy5uYW1lfX0NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICA8bmctc3dpdGNoIGNsYXNzPSJ2aWRlb3MiIG9uPSIkY3RybC5QbGF5bGlzdC5QcmV2aWV3LiRmYWlsdXJlIiBuZy1pZj0iJGN0cmwuUGxheWxpc3QuUHJldmlldy52aWRlb3MgJiYgJGN0cmwuUGxheWxpc3QuUHJldmlldy52aWRlb3MubGVuZ3RoICE9IDAiPg0KICAgICAgICAgICAgICAgIDxkaXYgbmctc3dpdGNoLXdoZW49InRydWUiIG5nLWJpbmQ9Ijo6JGN0cmwuTG9jLkVycm9yIj48L2Rpdj4NCiAgICAgICAgICAgICAgICA8ZGl2IG5nLXN3aXRjaC1kZWZhdWx0Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ2aWRlb3MiPg0KDQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0YWdzLWNvbnRhaW5lciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGFnIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InNoYXJwIj4jPC9zcGFuPnt7JGN0cmwuUGxheWxpc3QuVGFnTmFtZX19DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPG5nLXBsdXJhbGl6ZSBjbGFzcz0iYWxsLXZpZGVvcy1jb3VudCIgY291bnQ9IiRjdHJsLlBsYXlsaXN0LlByZXZpZXcudG90YWxDb3VudCIgd2hlbj0ieycwJzogJ3t7JGN0cmwuUGxheWxpc3QuUHJldmlldy50b3RhbENvdW50fX0ge3skY3RybC5Mb2MuRW1iZWQuVmlkZW99fScsICdvbmUnOiAne3skY3RybC5QbGF5bGlzdC5QcmV2aWV3LnRvdGFsQ291bnR9fSB7eyRjdHJsLkxvYy5FbWJlZC5WaWRlb319JywgJ290aGVyJzone3skY3RybC5QbGF5bGlzdC5QcmV2aWV3LnRvdGFsQ291bnR9fSB7eyRjdHJsLkxvYy5FbWJlZC5WaWRlb3N9fSd9Ij48L25nLXBsdXJhbGl6ZT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYWxsLXZpZGVvcy1zaG93Ig0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5nLWNsaWNrPSIkY3RybC5QbGF5bGlzdC5Jc0hpZGVWaWRlbyA9ICEkY3RybC5QbGF5bGlzdC5Jc0hpZGVWaWRlbyINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZy1iaW5kPSIkY3RybC5QbGF5bGlzdC5Jc0hpZGVWaWRlbyA/ICRjdHJsLkxvYy5FbWJlZC5TaG93IDogJGN0cmwuTG9jLkVtYmVkLkhpZGUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmaWx0ZXIgdmlkZW9zLWZpbHRlciBsZWZ0IiBuZy1pZj0iISRjdHJsLlBsYXlsaXN0LklzSGlkZVZpZGVvIiBuZy1jbGFzcz0ieydleHBhbmQnOiAkY3RybC5QbGF5bGlzdC5Jc1NvcnRUeXBlRXhwYW5kfSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlbGVjdGVkIiBuZy1jbGljaz0iJGN0cmwuT25Tb3J0VHlwZUZpbHRlckNsaWNrKCkiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im5nLWJpbmRpbmcgbmctc2NvcGUiIG5nLWJpbmQ9IiRjdHJsLkxvYy5FbWJlZC5Tb3J0VHlwZVskY3RybC5QbGF5bGlzdC5Tb3J0VHlwZV0iPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIG5nLXJlcGVhdD0idHlwZSBpbiAkY3RybC5Tb3J0VHlwZXMiIG5nLWNsaWNrPSIkY3RybC5TZXRTb3J0VHlwZVBsYXlsaXN0KHR5cGUpIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJzZWxlY3QtYWxsIGN1c3RvbS1jaGVja2JveCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0icmFkaW8iIG5hbWU9IlNvcnRUeXBlcyIgbmctY2hlY2tlZD0idHlwZSA9PSAkY3RybC5QbGF5bGlzdC5Tb3J0VHlwZSIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb21tb24taWNvbiI+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gbmctYmluZD0iJGN0cmwuTG9jLkVtYmVkLlNvcnRUeXBlW3R5cGVdIj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImhyTGluZSI+PGhyIC8+PC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgbmctcmVwZWF0PSJvcmRlciBpbiAkY3RybC5Tb3J0T3JkZXJzIiBuZy1jbGljaz0iJGN0cmwuU2V0U29ydE9yZGVyUGxheWxpc3Qob3JkZXIpIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJzZWxlY3QtYWxsIGN1c3RvbS1jaGVja2JveCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0icmFkaW8iIG5hbWU9InN0eXBlIiBuZy1jaGVja2VkPSJvcmRlciA9PSAkY3RybC5QbGF5bGlzdC5Tb3J0T3JkZXIiIC8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29tbW9uLWljb24iPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIG5nLWJpbmQ9IiRjdHJsLkxvYy5FbWJlZC5Tb3J0T3JkZXJbb3JkZXJdIj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjbGVhcmZpeCI+PC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InZpZGVvcy1jb250YWluZXIiIG5nLWlmPSIhJGN0cmwuUGxheWxpc3QuSXNIaWRlVmlkZW8iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InZpZGVvIiBuZy1yZXBlYXQ9InZpZGVvIGluICRjdHJsLlBsYXlsaXN0LlByZXZpZXcudmlkZW9zIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idmlkZW8tY29sLWxlZnQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvdW50IiBuZy1iaW5kPSIkaW5kZXggKyAxICsgJy4nIj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIG5nLXNyYz0ie3t2aWRlby5wcmV2aWV3VXJsfX0iIGFsdD0iIiAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGFnby1kYXRlIGNsYXNzPSJ2aWRlby1kYXRlIiBkYXRhLWxvYz0iOjokY3RybC5Mb2MiIGRhdGEtZGF0ZT0idmlkZW8uY3JlYXRlRGF0ZSI+PC9hZ28tZGF0ZT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idmlkZW8tbmFtZSIgbmctYmluZD0idmlkZW8udGl0bGUiPjwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjbGVhcmZpeCI+PC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8L25nLXN3aXRjaD4NCiAgICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQo8L2Rpdj4NCjxkaXYgY2xhc3M9ImNsZWFyZml4Ij48L2Rpdj4NCjwvc2NyaXB0Pg0KPHNjcmlwdCB0eXBlPSJ0ZXh0L25nLXRlbXBsYXRlIiBpZD0iL2FwcC9zaGFyZWQvbmF2aWdhdGlvbi9uYXZpZ2F0aW9uLmh0bWwiPg0KPGRpdiBjbGFzcz0icGFnaW5nIj4gICAgDQogICAgPGEgbmctaHJlZj0ie3skY3RybC5TdGFydFVybH19IiB0aXRsZT0ie3s6OiRjdHJsLkxvYy5OYXZpZ2F0aW9uLnN0YXJ0fX0iIGNsYXNzPSJzdGFydCBjb21tb24taWNvbiIgbmctY2xhc3M9InsnZGlzYWJsZWQnOiAhJGN0cmwuRW5hYmxlUHJldn0iPjwvYT4NCiAgICA8YSBuZy1ocmVmPSJ7eyRjdHJsLlByZXZVcmx9fSIgdGl0bGU9Int7OjokY3RybC5Mb2MuTmF2aWdhdGlvbi5iYWNrfX0iIGNsYXNzPSJwcmV2IGNvbW1vbi1pY29uIiBuZy1jbGFzcz0ieydkaXNhYmxlZCc6ICEkY3RybC5FbmFibGVQcmV2fSI+PC9hPg0KICAgIDxhIG5nLWhyZWY9Int7JGN0cmwuTmV4dFVybH19IiB0aXRsZT0ie3s6OiRjdHJsLkxvYy5OYXZpZ2F0aW9uLm5leHR9fSIgY2xhc3M9Im5leHQgY29tbW9uLWljb24iIG5nLWNsYXNzPSJ7J2Rpc2FibGVkJzogISRjdHJsLkVuYWJsZU5leHR9Ij48L2E+DQogICAgPGEgbmctaHJlZj0ie3skY3RybC5FbmRVcmx9fSIgdGl0bGU9Int7OjokY3RybC5Mb2MuTmF2aWdhdGlvbi5lbmR9fSIgY2xhc3M9ImVuZCBjb21tb24taWNvbiIgbmctY2xhc3M9InsnZGlzYWJsZWQnOiAhJGN0cmwuRW5hYmxlTmV4dH0iPjwvYT4NCjwvZGl2Pg0KPC9zY3JpcHQ+DQo8c2NyaXB0IHR5cGU9InRleHQvbmctdGVtcGxhdGUiIGlkPSIvYXBwL3NoYXJlZC9zZWxlY3QtbGlzdC9zZWxlY3QtbGlzdC5odG1sIj4NCjxkaXYgY2xhc3M9InNlbGVjdGVkIj4NCiAgICA8c3BhbiB0aXRsZT0ie3s6OmxvYyAhPSB1bmRlZmluZWQgPyBsb2NbZGF0YS5zZWxlY3RlZF0gOiBkYXRhLnNlbGVjdGVkfX0iIG5nLWJpbmQ9ImxvYyAhPSB1bmRlZmluZWQgPyBsb2NbZGF0YS5zZWxlY3RlZF0gOiBkYXRhLnNlbGVjdGVkIiBuZy1pZj0ic2VsZWN0VGVtcGxhdGUgPT0gdW5kZWZpbmVkIj48L3NwYW4+DQogICAgPG5nLWluY2x1ZGUgc3JjPSJzZWxlY3RUZW1wbGF0ZSIgbmctaWY9InNlbGVjdFRlbXBsYXRlICE9IHVuZGVmaW5lZCI+PC9uZy1pbmNsdWRlPg0KPC9kaXY+DQo8ZGl2Pg0KICAgIDx1bD4NCiAgICAgICAgPGxpIG5nLXJlcGVhdD0iaXRlbSBpbiBkYXRhLml0ZW1zIj4NCiAgICAgICAgICAgIDxhIG5nLWhyZWY9Int7OjppdGVtLnVybH19IiBuZy1jbGFzcz0ieydhY3RpdmUnOiBpdGVtLm5hbWUgPT0gZGF0YS5zZWxlY3RlZH0iIHRpdGxlPSJ7ezo6bG9jICE9IHVuZGVmaW5lZCA/IGxvY1tpdGVtLm5hbWVdIDogaXRlbS5uYW1lfX0iIG5nLWJpbmQ9Ijo6bG9jICE9IHVuZGVmaW5lZCA/IGxvY1tpdGVtLm5hbWVdIDogaXRlbS5uYW1lIiBuZy1pZj0iaXRlbVRlbXBsYXRlID09IHVuZGVmaW5lZCI+PC9hPg0KICAgICAgICAgICAgPG5nLWluY2x1ZGUgc3JjPSJpdGVtVGVtcGxhdGUiIG5nLWlmPSJpdGVtVGVtcGxhdGUgIT0gdW5kZWZpbmVkIj48L25nLWluY2x1ZGU+DQogICAgICAgIDwvbGk+DQogICAgPC91bD4NCjwvZGl2Pg0KPC9zY3JpcHQ+DQo8c2NyaXB0IHR5cGU9InRleHQvbmctdGVtcGxhdGUiIGlkPSIvYXBwL3NoYXJlZC9sYW5nLXN3aXRjaGVyL2xhbmctc3dpdGNoZXIuaHRtbCI+DQo8ZGl2IGNsYXNzPSJsYW5nLXN3aXRjaGVyIGxlZnQiIG5nLWNsYXNzPSIkY3RybC5TdHlsZSI+DQogICAgPHNwYW4gbmctY2xhc3M9InsnY3VycmVudC1sYW5ndWFnZSc6ICRjdHJsLkN1cnJlbnRMYW5nID09ICdydSd9IiBuZy1jbGljaz0iJGN0cmwuVG9nZ2xlTGFuZ3VhZ2UoJ3J1JykiPnJ1PC9zcGFuPg0KICAgIDxzcGFuIG5nLWNsYXNzPSJ7J2N1cnJlbnQtbGFuZ3VhZ2UnOiAkY3RybC5DdXJyZW50TGFuZyA9PSAnZW4nfSIgbmctY2xpY2s9IiRjdHJsLlRvZ2dsZUxhbmd1YWdlKCdlbicpIj5lbjwvc3Bhbj4NCjwvZGl2Pg0KPGRpdiBjbGFzcz0ibGFuZy1zd2l0Y2hlci1zaGFkb3cgY2VudGVyIiBuZy1pZj0iJGN0cmwuU2hvd1NoYWRvdyI+PC9kaXY+DQo8L3NjcmlwdD4NCjxzY3JpcHQgdHlwZT0idGV4dC9uZy10ZW1wbGF0ZSIgaWQ9Ii9hcHAvc2hhcmVkL3NlYXJjaC1mb3JtL3NlYXJjaC1mb3JtLmh0bWwiPg0KPGRpdiBjbGFzcz0ic2VhcmNoLXdyYXBwZXIgcmlnaHQiPg0KICAgIDxzcGFuIGNsYXNzPSJyaWdodCBiYWNrIGNvbW1vbi1pY29uIiBuZy1jbGljaz0iJGN0cmwuVG9nZ2xlKCkiPjwvc3Bhbj4NCiAgICA8ZGl2IGNsYXNzPSJjb250cm9sLWNvbnRhaW5lciI+DQogICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBwbGFjZWhvbGRlcj0ie3skY3RybC5Mb2MuU2VhcmNofX0uLiIgbmctbW9kZWw9IiRjdHJsLlNlYXJjaFRleHQiIG5nLWtleWRvd249IiRjdHJsLkNoZWNrU2VhcmNoKCRldmVudCkiPg0KICAgICAgICA8c3BhbiBjbGFzcz0iY29tbW9uLWljb24gc2VhcmNoIiBuZy1jbGljaz0iJGN0cmwuU2VhcmNoU3RhcnQoKSI+PC9zcGFuPg0KICAgICAgICA8c3BhbiBjbGFzcz0iY29tbW9uLWljb24gc2VhcmNoLWV4cGFuZC1idXR0b24gaGlkZGVuLWxnIGhpZGRlbi1tZCIgbmctY2xpY2s9IiRjdHJsLlRvZ2dsZSgpIj48L3NwYW4+ICAgICAgIA0KICAgIDwvZGl2Pg0KPC9kaXY+DQo8L3NjcmlwdD4NCjxzY3JpcHQgdHlwZT0idGV4dC9uZy10ZW1wbGF0ZSIgaWQ9Ii9hcHAvc2hhcmVkL3ZpZGVvLXZvdGUvdmlkZW8tdm90ZS5odG1sIj4NCjxkaXYgY2xhc3M9InZvdGUiPg0KICAgIDxzcGFuIGNsYXNzPSJjb21tb24taWNvbi1iZWZvcmUgbGlrZSIgbmctY2xhc3M9InthY3RpdmUgOiAkY3RybC5Jc0xpa2V9IiBuZy1jbGljaz0iJGN0cmwuVm90ZSh0cnVlKSIgbmctYmluZD0iJGN0cmwuTGlrZSB8IG51bWJlciI+PC9zcGFuPg0KICAgIDxzcGFuIGNsYXNzPSJjb21tb24taWNvbi1iZWZvcmUgZGlzbGlrZSIgbmctY2xhc3M9InthY3RpdmUgOiAkY3RybC5Jc0Rpc2xpa2V9IiBuZy1jbGljaz0iJGN0cmwuVm90ZShmYWxzZSkiIG5nLWJpbmQ9IiRjdHJsLkRpc2xpa2UgfCBudW1iZXIiPjwvc3Bhbj4NCjwvZGl2Pg0KPC9zY3JpcHQ+DQo8c2NyaXB0IHR5cGU9InRleHQvbmctdGVtcGxhdGUiIGlkPSIvYXBwL3NoYXJlZC9kZWxheWVkLXZpZGVvLWJ1dHRvbi9kZWxheWVkLXZpZGVvLWJ1dHRvbi5odG1sIj4NCjxkaXYgY2xhc3M9ImRlbGF5ZWQtdmlkZW8tYnV0dG9uIiBuZy1jbGFzcz0ie3VuZGVsYXllZDogISRjdHJsLklzRGVsYXllZH0iPg0KICAgIDxkaXYgY2xhc3M9ImRlbGF5ZWQtdmlkZW8tYnRuIiB0aXRsZT0ie3skY3RybC5Jc0RlbGF5ZWQgPyAkY3RybC5Mb2MuRGVsYXllZFZpZGVvLlRpdGxlQWRkIDogJGN0cmwuTG9jLkRlbGF5ZWRWaWRlby5UaXRsZURlbGV0ZX19IiBuZy1jbGljaz0iJGN0cmwuRGVsYXllZCgkZXZlbnQpIj4NCiAgICAgICAgPHNwYW4gY2xhc3M9ImNvbW1vbi1pY29uIj48L3NwYW4+DQogICAgPC9kaXY+DQogICAgPGRpdiBjbGFzcz0idG9vbHRpcCIgbmctaWY9IiRjdHJsLlRvb2x0aXAuSXNTaG93IiBuZy1jbGFzcz0ie2Vycm9yOiAkY3RybC5Ub29sdGlwLk1lc3NhZ2VTdGF0dXMgPT0gJ0Vycm9yJ30iPg0KICAgICAgICA8ZGl2IG5nLXN3aXRjaD0iJGN0cmwuVG9vbHRpcC5NZXNzYWdlU3RhdHVzIj4NCiAgICAgICAgICAgIDxkaXYgbmctc3dpdGNoLXdoZW49IkFkZCI+e3s6OiRjdHJsLkxvYy5EZWxheWVkVmlkZW8uQWRkfX0gPGEgbmctaHJlZj0ie3s6OiRjdHJsLkRhbGF5ZWRQYWdlVXJsfX0iIG5nLWJpbmQ9Ijo6JGN0cmwuTG9jLkRlbGF5ZWRWaWRlby5QYWdlIj48L2E+PC9kaXY+DQogICAgICAgICAgICA8ZGl2IG5nLXN3aXRjaC13aGVuPSJEZWxldGUiPnt7OjokY3RybC5Mb2MuRGVsYXllZFZpZGVvLkRlbGV0ZX19IDxhIG5nLWhyZWY9Int7OjokY3RybC5EYWxheWVkUGFnZVVybH19IiBuZy1iaW5kPSI6OiRjdHJsLkxvYy5EZWxheWVkVmlkZW8uUGFnZSI+PC9hPjwvZGl2Pg0KICAgICAgICAgICAgPGRpdiBuZy1zd2l0Y2gtd2hlbj0iQWxyZWFkeSI+e3s6OiRjdHJsLkxvYy5EZWxheWVkVmlkZW8uQWxyZWFkeX19IDxhIG5nLWhyZWY9Int7OjokY3RybC5EYWxheWVkUGFnZVVybH19IiBuZy1iaW5kPSI6OiRjdHJsLkxvYy5EZWxheWVkVmlkZW8uUGFnZSI+PC9hPjwvZGl2Pg0KICAgICAgICAgICAgPGRpdiBuZy1zd2l0Y2gtd2hlbj0iRXJyb3IiIG5nLWJpbmQ9Ijo6JGN0cmwuTG9jLkRlbGF5ZWRWaWRlby5FcnJvciI+PC9kaXY+DQogICAgICAgICAgICA8ZGl2IG5nLXN3aXRjaC13aGVuPSJBdXRoRXJyb3IiPnt7OjokY3RybC5Mb2MuRGVsYXllZFZpZGVvLkVycm9yQXV0aH19IDxhIG5nLWhyZWY9Int7OjokY3RybC5BdXRoUGFnZVVybH19IiBuZy1iaW5kPSI6OiRjdHJsLkxvYy5EZWxheWVkVmlkZW8uRXJyb3JBdXRoQW5jaG9yIj48L2E+PC9kaXY+DQogICAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KPC9kaXY+DQo8L3NjcmlwdD4NCg0KPHNjcmlwdD4kYnVuZGxlci5hZGRBc1Jlc29sdmVkKCJBYi1jb21tb24iLCJodG1sIik7PC9zY3JpcHQ+DQoNCiAgICAgICAgPCEtLS9ub2luZGV4LS0+DQogICAgPC9kaXY+DQogICAgPHNjcmlwdD4NCiAgICAgICAgTXl2aS5Cb290c3RyYXAoImh0dHBzOi8vd3d3Lm15dmkudG9wOjgwL2lkYW9meT92PWtjcHRzbzNiMW1wcjhuOGZjM3h5b2Y1dHloIiwgew0KICAgICAgICAgICAgYXV0aEFnZW50OiB7DQogICAgICAgICAgICAgICAgb3JpZ2luOiAiaHR0cHM6Ly9hcGkubXl2aS50diIsDQogICAgICAgICAgICAgICAgdXJsOiAiL2FwaS8xLjAvYXV0aD92PVM1UFlWZUM0SldFMSINCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBhcGk6ICJodHRwczovL2FwaS5teXZpLnR2L2FwaS8xLjAiLA0KICAgICAgICAgICAgaG9zdDogInd3dy5teXZpLnRvcCIsDQogICAgICAgICAgICBkZWJ1ZzogZmFsc2UsDQogICAgICAgICAgICBtYWluVXJsOiAiaHR0cHM6Ly93d3cubXl2aS50diIsDQogICAgICAgICAgICBnb29nbGVBbmFseXRpY0lkOiJVQS03NTE3MzYxNi0xIiwNCiAgICAgICAgICAgIGNvbXNjb3JlSWQ6IjE3MTk5NDkwIiwNCiAgICAgICAgICAgIHZlcnNpb246IlM1UFlWZUM0SldFMSIsDQogICAgICAgICAgICBtYWluQ2hhbm5lbElkOiIiLA0KICAgICAgICAgICAgbm90Rm91bmRVcmw6IiINCiAgICAgICAgfSk7DQogICAgPC9zY3JpcHQ+DQoNCiAgICA8IS0tIFlhbmRleC5NZXRyaWthIGNvdW50ZXIgLS0+DQogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPg0KICAgICAgICAoZnVuY3Rpb24gKGQsIHcsIGMpIHsNCiAgICAgICAgICAgICh3W2NdID0gd1tjXSB8fCBbXSkucHVzaChmdW5jdGlvbigpIHsNCiAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICB3LnlhQ291bnRlcjM4MTI0NzcwID0gbmV3IFlhLk1ldHJpa2Eoew0KICAgICAgICAgICAgICAgICAgICAgICAgaWQ6MzgxMjQ3NzAsDQogICAgICAgICAgICAgICAgICAgICAgICBjbGlja21hcDp0cnVlLA0KICAgICAgICAgICAgICAgICAgICAgICAgdHJhY2tMaW5rczp0cnVlLA0KICAgICAgICAgICAgICAgICAgICAgICAgYWNjdXJhdGVUcmFja0JvdW5jZTp0cnVlLA0KICAgICAgICAgICAgICAgICAgICAgICAgd2Vidmlzb3I6dHJ1ZQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9IGNhdGNoKGUpIHsgfQ0KICAgICAgICAgICAgfSk7DQogICAgICAgICAgICB2YXIgbiA9IGQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInNjcmlwdCIpWzBdLA0KICAgICAgICAgICAgICAgIHMgPSBkLmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpLA0KICAgICAgICAgICAgICAgIGYgPSBmdW5jdGlvbiAoKSB7IG4ucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUocywgbik7IH07DQogICAgICAgICAgICBzLnR5cGUgPSAidGV4dC9qYXZhc2NyaXB0IjsNCiAgICAgICAgICAgIHMuYXN5bmMgPSB0cnVlOw0KICAgICAgICAgICAgcy5zcmMgPSAiaHR0cHM6Ly9tYy55YW5kZXgucnUvbWV0cmlrYS93YXRjaC5qcyI7DQogICAgICAgICAgICBpZiAody5vcGVyYSA9PSAiW29iamVjdCBPcGVyYV0iKSB7DQogICAgICAgICAgICAgICAgZC5hZGRFdmVudExpc3RlbmVyKCJET01Db250ZW50TG9hZGVkIiwgZiwgZmFsc2UpOw0KICAgICAgICAgICAgfSBlbHNlIHsgZigpOyB9DQogICAgICAgIH0pKGRvY3VtZW50LCB3aW5kb3csICJ5YW5kZXhfbWV0cmlrYV9jYWxsYmFja3MiKTsNCiAgICA8L3NjcmlwdD4NCiAgICA8bm9zY3JpcHQ+PGRpdj48aW1nIHNyYz0iaHR0cHM6Ly9tYy55YW5kZXgucnUvd2F0Y2gvMzgxMjQ3NzAiIHN0eWxlPSJwb3NpdGlvbjphYnNvbHV0ZTsgbGVmdDotOTk5OXB4OyIgYWx0PSIiIC8+PC9kaXY+PC9ub3NjcmlwdD4NCiAgICA8IS0tIC9ZYW5kZXguTWV0cmlrYSBjb3VudGVyIC0tPg0KDQo8L2JvZHk+DQo8L2h0bWw+
    http_version: 
  recorded_at: Wed, 19 Sep 2018 16:02:18 GMT
- request:
    method: get
    uri: https://www.myvi.tv/idaofy?v=kcptso3b1mpr8n8fc3xyof5tyh
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML,
        like Gecko) Chrome/39.0.2171.71 Safari/537.36
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 302
      message: Found
    headers:
      Cache-Control:
      - private
      Content-Type:
      - text/html; charset=utf-8
      Location:
      - https://www.myvi.top/idaofy?v=kcptso3b1mpr8n8fc3xyof5tyh
      Server:
      - Microsoft-IIS/8.5
      Set-Cookie:
      - RequestId=V9buFxH8k0CzfxwrPgLA_Q2; domain=.myvi.tv; expires=Thu, 20-Feb-2020
        21:34:02 GMT; path=/
      Date:
      - Wed, 20 Feb 2019 21:34:02 GMT
      Content-Length:
      - '173'
    body:
      encoding: UTF-8
      string: "<html><head><title>Object moved</title></head><body>\r\n<h2>Object
        moved to <a href=\"https://www.myvi.top/idaofy?v=kcptso3b1mpr8n8fc3xyof5tyh\">here</a>.</h2>\r\n</body></html>\r\n"
    http_version: 
  recorded_at: Wed, 20 Feb 2019 21:38:23 GMT
recorded_with: VCR 4.0.0
