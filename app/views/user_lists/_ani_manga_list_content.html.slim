- @list.each do |status,data|
  header class="status-#{status}"
    a name="#{UserRateStatus.get(status).downcase.gsub(' ', '-')}"
    .b-options-floated.collapse id="collapse-#{UserRateStatus.get(status).downcase.gsub(' ', '-')}"
      span.action свернуть (#{data[:size]})
    .subheadline = t "#{params[:list_type].capitalize}RateStatus.%s" % UserRateStatus.get(status)
    .collapsed.tiny ...

  table.b-table
    tr
      th.index #
      th class="name order-control #{:active if params[:order] == 'name'}" data-order="name" title="Упорядочить по названию" Название
      th class="num order-control #{:active if params[:order] == 'my'}" data-order="my" title="Упорядочить по оценке" Оценка
      - if anime?
        th class="num order-control #{:active if params[:order] == 'episodes'}" data-order="episodes" title="Упорядочить по эпизодам" Эпизоды
      - else
        th class="num order-control #{:active if params[:order] == 'chapters'}" data-order="chapters" title="Упорядочить по главам" Главы
        - if @user.preferences.volumes_in_manga?
          th class="num order-control #{:active if params[:order] == 'volumes'}" data-order="volumes" title="Упорядочить по томам" Тома

      th class="num order-control #{:active if params[:order] == 'kind'}" data-order="kind" title="Упорядочить по типу" Тип
      - if status == UserRateStatus.get(UserRateStatus::Planned)
        th class="num order-control #{:active if params[:order] == 'status'}" data-order="status" title="Упорядочить по статусу" Статус
    tr.border
      - if anime?
        th colspan="#{status == UserRateStatus.get(UserRateStatus::Planned) ? 6 : 5}"
      - else
        th colspan="#{status == UserRateStatus.get(UserRateStatus::Planned) ? 7 : 6}"

    - data[:entries].each do |entry_rate|
      tr.unprocessed.selectable class="#{:editable if @user.own_profile?}" data-remote="#{true if @user.own_profile?}" data-action="#{user_list_edit_path @user, entry_rate[:rate_id] if @user.own_profile?}" data-type="html" data-rate_url="#{entry_rate[:rate_url]}" data-title="#{entry_rate[:name].downcase}"
        td.index
          span
            = entry_rate[:index]
          /span.anime-remove title="Удалить из списка" data-remote="true" action="#{self.send("rate_#{params[:list_type]}_url", id: entry_rate[:id])}" data-method="delete" data-type="json"
        td.name
          a.tooltipped data-href="#{entry_rate[:url]}/tooltip" data-remote="true" href="#{entry_rate[:url]}" data-predelay="650"
            span
              == entry_rate[:name]

          - if entry_rate[:ongoing?]
            span.ongoing онгоинг
          - elsif entry_rate[:anons?]
            span.anons анонс

          .rate-notice
            - if entry_rate[:rate_notice].present?
              div = entry_rate[:rate_notice]

          /- if @user.own_profile?
            span.anime-status data-field="status"
        td class="num #{:hoverable if @user.own_profile?}"
          span.current-value data-field='score' data-max="10" data-min="0"
            == entry_rate[:rate_score]

        - if anime?
          td class="num #{:hoverable if @user.own_profile?}"
            span.current-value data-field="episodes" data-max="#{entry_rate[:episodes]}" data-min="0"
              span
                = entry_rate[:rate_episodes]
            - if entry_rate[:episodes] || (entry_rate[:ongoing?] && entry_rate[:episodes_aired] > 0)
              span.misc-value
                span.sep.inline
                  | /
                - if entry_rate[:ongoing?] && entry_rate[:episodes_aired] > 0 && entry_rate[:episodes_aired] != entry_rate[:rate_episodes]
                  = entry_rate[:episodes_aired]
                  span.episodes_total
                    = entry_rate[:episodes] || '?'

                - elsif entry_rate[:episodes]
                  = entry_rate[:episodes]

        - else
          td class="num #{:hoverable if @user.own_profile?}"
            span.current-value data-field="chapters" data-max="#{entry_rate[:chapters]}" data-min="0"
              span
                = entry_rate[:rate_chapters]
            - if entry_rate[:chapters]
              span.misc-value
                span.sep.inline
                  | /
                = entry_rate[:chapters]

          - if @user.preferences.volumes_in_manga?
            td class="num #{:hoverable if @user.own_profile?}"
              span.current-value data-field="volumes" data-max="#{entry_rate[:volumes]}" data-min="0"
                span
                  = entry_rate[:rate_volumes]
              - if entry_rate[:volumes]
                span.misc-value
                  span.sep.inline
                    | /
                  = entry_rate[:volumes]

        td.num
          = entry_rate[:kind_localized]
        - if status == UserRateStatus.get(UserRateStatus::Planned)
          td.num
            = entry_rate[:status_localized]
    - if data[:stats]
      tr.summary
        td colspan="#{status == UserRateStatus.get(UserRateStatus::Planned) ? 6 : 5}"
          - data[:stats].each do |stat,value|
            = t "UserList.Short.#{stat}"
            | :&nbsp;
            span.stat-value = value
            span.sep
              | /

- if @add_postloader
  = render partial: 'site/postloader', locals: { filter: 'ani_manga_entry', url: ani_manga_filtered_list_path(params.merge(page: @page+1, format: :json, type: @params_type)) }, formats: :html

- elsif @total_stats.any? && !(@list.size == 1 && @page == 1 && !@add_postloader)
  header.summary
    h2 
  table.b-table
    tr.summary.total
      td colspan="5"
        - @total_stats.each do |stat,value|
          = t "UserList.Short.#{stat}"
          | :&nbsp;
          span.stat-value = value
          span.sep
            | /
