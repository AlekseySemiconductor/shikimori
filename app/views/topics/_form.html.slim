- topic_type = @resource.type
= simple_form_for topic.becomes(Topic) do |f|
  - topic.type = topic_type

  - if topic.errors.any?
    .b-errors
      .subheadline Ошибки
      .block
        == topic.errors.full_messages.join('<br>')

  = f.input :user_id, as: :hidden
  = f.input :section_id, as: :hidden
  = f.input :linked_id, as: :hidden
  = f.input :linked_type, as: :hidden
  = f.input :type, as: :hidden

  .m20
    = f.input :title
    /= f.input :type, collection: [Topic.name.to_sym, AnimeNews.name.to_sym, MangaNews.name.to_sym], include_blank: false

  .b-shiki_editor.unprocessed.block
    = render 'comments/shiki_editor', text: (topic.body || '').sub(/\[wall\][\s\S]*/, ''), field_name: 'topic[text]'

  - if ['news', 'a', 'm'].include?(topic.section.permalink)
    .topic_linked
      .b-input.string.optional
        label.string.optional.control-label for="topic_linked"
          = t 'activerecord.attributes.topic.linked'
          .cleanup очистить
        input.string.optional type="text" id="topic_linked" placeholder="Название аниме" data-autocomplete="#{autocomplete_animes_url search: ''}"
        /input.string.optional type="text" id="topic_linked" placeholder="Название аниме или манги" data-autocomplete="#{autocomplete_animes_url search: ''}"

      .topic-video
        - if topic.linked.present?
          a href="#{url_for topic.linked}/edit/videos" target="_blank" добавить видео
      .topic-link
        - if topic.linked.present?
          a.bubbled href="#{url_for topic.linked}" title="#{topic.linked.name}"
            = topic.linked.name

        /- else
          /p
            /= topic.linked_type
      /.action-misc Выберите с помощью автодополнения существующее аниме(мангу), либо, если на сайте нужное аниме(манга) ещё не добавлено, то просто напишите в поле полное название, не используя автодополнение.

  - if ['news'].include?(topic.section.permalink)
    .topic_posters
      .b-input.string.optional
        label.string.optional.control-label for="topic_linked"
          = t 'activerecord.attributes.topic.posters'
      .wall-ids
      .drag-here-placeholder data-upload_url="#{user_images_url linked_type: AnimeNews.name}"
        p Перетаскивайте сюда картинки, они будут отображены отдельным блоком под текстом новости.
        = render 'blocks/upload_progress'
        .b-shiki_wall.unprocessed
          - topic.user_images.each do |user_image|
            a.image-container href="#{user_image.image.url :original, false}" rel="new-wall" data-user_image_id="#{user_image.id}"
              span.image-delete.hidden title="Удалить картинку"
              span.image-delete-confirm.hidden title="Подтвердить удаление"
              span.image-delete-cancel.hidden title="Отменить удаление"
              img src="#{user_image.image.url :preview, false}"
        input type="file" multiple="multiple"

  = f.submit
