- topic_type = topic.type
= simple_form_for topic.becomes(Topic) do |f|
  - topic.type = topic_type

  - if topic.errors.any?
    .b-errors
      .subheadline Ошибки
      .block
        == topic.errors.full_messages.join('<br>')

  = f.input :user_id, as: :hidden
  = f.input :linked_id, as: :hidden
  = f.input :linked_type, as: :hidden

  .inputs
    - if topic.persisted? && can?(:manage, Topic)
      = f.input :type, as: :select, include_blank: false,
        collection: [\
          ['Топик', 'Topic'],
          ['Новость', 'Topics::NewsTopic'],
        ],
        input_html: { disabled: !(topic.new_record? || can?(:manage, Topic)) }
    - else
        = f.input :type, as: :hidden

    = f.input :forum_id, as: :select, include_blank: false,
      collection: Forum.public,
      input_html: { disabled: !(topic.new_record? || can?(:manage, Topic)) }

    = f.input :title

    .b-shiki_editor.unprocessed.block
      = render 'comments/shiki_editor',
        text: (topic.body || '').sub(/\[wall\][\s\S]*/, '').strip,
        field_name: 'topic[body]'

    .topic_linked
      .b-input.string.optional
        label.string.optional.control-label for="topic_linked"
          = t 'activerecord.attributes.topic.linked'
          .b-js-action.cleanup очистить
        input.string.optional#topic_linked[
          type="text"
          data-anime-placeholder="Название аниме"
          data-manga-placeholder="Название манги"
          data-character-placeholder="Имя персонажа"
          data-anime-autocomplete="#{autocomplete_animes_url}"
          data-manga-autocomplete="#{autocomplete_mangas_url}"
          data-character-autocomplete="#{autocomplete_characters_url}"
        ]
        /input.string.optional type="text" id="topic_linked" placeholder="Название аниме или манги" data-autocomplete="#{autocomplete_animes_url}"

      /.topic-video
        - if topic.linked.present?
          a href="#{url_for topic.linked}/edit/videos" target="_blank" добавить видео
      .topic-link
        - if topic.linked.present?
          a.bubbled.b-link href="#{url_for topic.linked}" title="#{topic.linked.name}"
            = topic.linked.name

    .topic_posters
      .b-input.string.optional
        label.string.optional.control-label for="topic_linked"
          = t 'activerecord.attributes.topic.posters'

      .wall-ids
      label: .b-dropzone[
        data-upload_url="#{api_user_images_url linked_type: Entry.name}"
        data-hint="Перетаскивайте сюда картинки, они будут отображены отдельным блоком под текстом топика."
      ]
        = render 'blocks/upload_progress'
        .b-shiki_wall.unprocessed
          = render partial: 'images/image',
            collection: topic.wall_images,
            locals: { topic_poster_edit: true }
        input type="file" multiple="multiple"

  - if current_user.admin?
    = f.input :broadcast

  .buttons
    a.cancel[
      href="#{topic.persisted? ? UrlGenerator.instance.topic_url(topic) : root_url}"
    ] = t 'actions.cancel'
    = f.button :magic_submit
