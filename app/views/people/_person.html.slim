- cover_by ||= :link
- cover_title ||= :present
- content_by ||= :tooltip

- tooltipped = content_by == :tooltip || content_by == :mini_tooltip

article.c-column.b-catalog_entry.c-person[
  class="entry-#{person.id} #{:cc if content_by == :block}"
  itemscope itemtype='http://schema.org/Person'
  itemprop="#{person.kind_of?(RoleEntry) ? (person.role.include?('Director') ? 'director' : (person.role.include?('Producer') ? 'producer' : 'none')) : 'none'}"
]
  meta[
    itemprop='image'
    content="#{{meta_image_url person.image, :original, false}}"
  ]
  meta[
    itemprop='thumbnailUrl'
    content="#{{meta_image_url person.image, :x48, false}}"
  ]

  a.cover[
    class="#{'anime-tooltip' if tooltipped}"
    href="#{person_url person}"
    data-delay="150"
    data-predelay="#{tooltip_predelay if defined? tooltip_predelay}"
    data-insert-tooltip-after="#{content_by == :mini_tooltip}"
    data-relative="#{content_by == :mini_tooltip}"
    data-tooltip_url="#{person.tooltip_url content_by == :mini_tooltip}"
  ]
    span.image-decor
      span.image-cutter
        img[
          src="#{cdn_image person, :preview}"
          srcset="#{cdn_image person, :original} 2x"
          alt="#{person.name}"
        ]

    - if cover_title != :none
      - if cover_by == :link
        span.title[
          class="#{:two_lined unless person.kind_of? RoleEntry}"
          itemprop='name'
        ]
          = localization_span person

      - if person.kind_of? RoleEntry
        span.misc.centered
          span.role itemprop='jobTitle'
            = person.formatted_role

  - unless tooltipped || content_by == :none
    .content
      - if content_by == :block
        = render partial: 'characters/content',
          object: character,
          as: :character
      - else
        - raise ArgumentError, content_by
