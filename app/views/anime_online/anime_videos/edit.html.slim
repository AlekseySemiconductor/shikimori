= render layout: 'animes/page' do
  .block
    = simple_form_for @video, url: video_online_url(@anime, @video) do |f|
      - if @video.errors.any?
        .b-errors
          .subheadline Ошибки
          .block
            == @video.errors.full_messages.join('<br>')

      .subheadline Редактирование видео
      .block
        = f.input :episode
        = f.input :url, input_html: { disabled: !current_user.video_moderator? }
        = f.input :author_name,
          input_html: { 'data-autocomplete' => autocomplete_anime_video_authors_url }
        = f.input :kind,
          as: :select,
          include_blank: false,
          collection: AnimeVideo.kind.options.delete_if {|k,v| v == 'unknown' && !@video.unknown? }.map { |k,v| [v == 'unknown' ? 'неизвестно' : k,v] }
        = f.input :language,
          as: :select,
          include_blank: false
        = f.input :quality,
          as: :select,
          include_blank: false
        - if current_user.video_moderator?
          = f.input :state,
            as: :select,
            include_blank: false,
            collection: AnimeVideo.state_machine.states.map(&:name).select { |state| ![:banned, :copyrighted].include?(state) }.map{ |state| [I18n.t("activerecord.state_machines.anime_video.states.#{state}"), state] }

      = render 'versions/reason'

      .buttons
        a.cancel href="#{@back_url}" = t 'actions.cancel'
        = f.button :magic_submit

  - if @video.versions.any?
    .subheadline История правок
    .block
      = render partial: 'versions/version', collection: @video.versions
