header.head.misc
  h1 = @page_title.last

  - if @klass == Anime
    a.misc href="#{recommendations_manga_url}" = t 'switch_to_manga'
  - else
    a.misc href="#{recommendations_anime_url}" = t 'switch_to_anime'

  - if user_signed_in?
    .b-header_filters style="#{'display: none;' if @entries.nil?}"
      - if @klass == Anime
        .filter-line
          span.title = "#{t '.method'}:"

          /a[
            /class="#{:current if @metric == 'pearson'}"
            /href="#{recommendations_url metric: 'pearson', threshold: @threshold, user: params[:user]}"
          /] pearson

          a[
            class="#{:current if @metric == 'pearson_z'}"
            href="#{recommendations_url metric: 'pearson_z', threshold: @threshold, user: params[:user]}"
          ] pearson_z

          /a[
            /class="#{:current if @metric == 'pearson_mean'}"
            /href="#{recommendations_url metric: 'pearson_mean', threshold: @threshold, user: params[:user]}"
          /] pearson_mean

          /a[
            /class="#{:current if @metric == 'euclid'}"
            /href="#{recommendations_url metric: 'euclid', threshold: @threshold, user: params[:user]}"
          /] euclid

          a[
            class="#{:current if @metric == 'svd'}"
            href="#{recommendations_url metric: 'svd', threshold: @threshold, user: params[:user]}"
          ] svd

          /a[
            /class="#{:current if @metric == 'svd_full'}"
            /href="#{recommendations_url metric: 'svd_full', threshold: @threshold, user: params[:user]}"
          /] svd_full

        .hint = t '.recommendation_hint'

      .filter-line
        span.title = "#{t '.filtering'}:"

        a[
          class="#{:current if @threshold == RecommendationsController::THRESHOLDS[@klass][0]}"
          href="#{recommendations_url metric: @metric, threshold: RecommendationsController::THRESHOLDS[@klass][0], user: params[:user]}"
        ] = t '.filtering_type.none'

        a[
          class="#{:current if @threshold == RecommendationsController::THRESHOLDS[@klass][1]}"
          href="#{recommendations_url metric: @metric, threshold: RecommendationsController::THRESHOLDS[@klass][1], user: params[:user]}"
        ] = t '.filtering_type.soft'

        a[
          class="#{:current if @threshold == RecommendationsController::THRESHOLDS[@klass][2]}"
          href="#{recommendations_url metric: @metric, threshold: RecommendationsController::THRESHOLDS[@klass][2], user: params[:user]}"
        ] = t '.filtering_type.moderate'

        a[
          class="#{:current if @threshold == RecommendationsController::THRESHOLDS[@klass][3]}"
          href="#{recommendations_url metric: @metric, threshold: RecommendationsController::THRESHOLDS[@klass][3], user: params[:user]}"
        ] = t '.filtering_type.hard'

        - if @klass == Anime
          a[
            class="#{:current if @threshold == RecommendationsController::THRESHOLDS[@klass][4]}"
            href="#{recommendations_url metric: @metric, threshold: RecommendationsController::THRESHOLDS[@klass][4], user: params[:user]}"
          ] = t '.filtering_type.full'

      .hint = t '.filtering_hint'

  .notice
    p = t '.about',
          action: (@klass == Anime ? i18n_i(:watching, 1, :dative) : i18n_i(:reading, 1, :dative)),
          kind: (@klass == Anime ? i18n_i(:anime, 1, :genitive) : i18n_i(:manga, 1, :genitive))
    p = t '.how_it_works',
          kind: (@klass == Anime ? i18n_i(:anime, 1, :genitive) : i18n_i(:manga, 1, :genitive))

- if @rankings && @rankings.empty?
  .no-rankings
    p.fail = t '.cant_generate_recommendations'
    p
      - if @klass == Anime
        = t '.anime_recommendations_generation_requirements'
      - else
        = t '.manga_recommendations_generation_requirements'

- elsif !@rankings
  p.pending = t '.generating_recommendations'
  .ajax-loading.vk-like.left title="#{t 'loading'}"

- else
  = render 'animes_collection/pagination'

  .menu-toggler
    .toggler

  .menu-slide-outer.x199
    .menu-slide-inner
      .l-content.to-process data-dynamic="cutted_covers"
        = render 'animes_collection/entries'

      .l-menu
        - if user_signed_in? || turbolinks_request?
            = render 'animes_collection/menu', menu: @menu
        - else
            .postloaded data-href="#{@menu.url}"
              .ajax-loading title="#{t 'loading'}"

  - if user_signed_in? && !current_user.preferences.postload_in_catalog
    = render 'animes_collection/pagination'
