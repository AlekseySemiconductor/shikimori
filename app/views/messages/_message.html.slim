.b-message.shiki-object.unprocessed[
    class="#{'b-generated_news' if message.generated_news?}"
    id="#{message.id}"
    data-user_id="#{message.from.id}"
    data-user_nickname="#{message.from.nickname}"
  ]
  .inner
    - if message.persisted?
      span.item-mobile title="Действия"
      aside.markers
        - if message.to == current_user
          .b-new_marker.active[
            class="#{!message.read ? '' : 'off'}"
            data-reappear="true"
            data-reappear_url="#{mark_read_messages_url unread: true}"
            data-appear_url="#{mark_read_messages_url}"
          ]

      aside.buttons
        .main-controls
          - if message.kind == MessageType::FriendRequest
            - if message.read
              span.item-delete title="#{t 'actions.delete'}"
            - else
              span.item-request-confirm[
                data-remote="true"
                data-method="post"
                data-type="json"
                action="#{api_friend_url message.from_id}"
                title="#{t 'actions.accept'}"
              ]
              span.item-request-reject.friend-request title="#{t 'actions.reject'}"
              span.item-delete title="#{t 'actions.delete'}" style="#{'display: none' unless message.read}"

          - elsif message.kind == MessageType::GroupRequest
            - if message.read
              span.item-delete title="#{t 'actions.delete'}"
            - else
              span.item-request-confirm[
                title="#{t 'actions.accept'}"
                data-remote="true"
                data-method="post"
                data-type="json"
                action="#{accept_group_invite_url message.linked}"
              ]
              span.item-request-reject[
                data-remote="true"
                data-method="post"
                data-type="json"
                action="#{reject_group_invite_url message.linked}"
                title="#{t 'actions.reject'}"
              ]
              span.item-delete title="#{t 'actions.delete'}" style="#{'display: none' unless message.read}"

          - else
            - if message.kind == MessageType::Private
              span.item-quote title="#{t 'actions.quote'}"
              - if local_assigns[:reply_as_link]
                a.item-reply href="#{reply_profile_dialog_url message.to.to_param, message.from.to_param, message}" title="#{t 'actions.reply'}"
              - else
                span.item-reply data-action="#{message_url message}" data-type="json" data-remote="true" title="#{t 'actions.reply'}"

            - if can?(:edit, message) && message.kind == MessageType::Private
              span.item-edit data-action="#{edit_message_url message}" data-type="html" data-remote="true" title="#{t 'actions.edit'}"
            - if can? :destroy, message
              span.item-delete title="#{t 'actions.delete'}"

          span.item-cancel title="#{t 'actions.cancel'}"

        - if can? :destroy, message
          .delete-controls
            span.item-delete-confirm[
              title="#{t 'actions.delete'}"
              action="#{message_url message}"
              data-type="json"
              data-remote="true"
              data-method="delete"
            ]
            span.item-delete-cancel title="#{t 'actions.cancel'}"

    header
      - unless message.generated_news?
        span.linkeable data-href="#{message.url}"
          img src="#{message.image}" srcset="#{message.image_2x} 2x" alt="#{message.title}"
      .name-date
        - if message.generated_news?
          .b-anime_status_tag class="#{message.linked.action}" = message.linked.action_text

        a href="#{message.url}" title="#{message.title}"
          = message.title

        - if message.persisted?
          time[
            datetime="#{message.created_at.iso8601}"
            data-momentjs-time="#{l message.created_at, format: :momentjs}"
          ] = l message.created_at, format: '%e %B %Y'

    .body
      - if message.generated_news?
        = render message.linked.linked.decorate,
          cover_title: :none, cover_notice: :none, content_by: :block, content_title: :none, content_text: :none
      - else
        == get_message_body message

      - if message.kind == MessageType::SiteNews && message.linked
        = link_to 'к новости→', topic_url(message.linked), class: 'right to-entry b-link'

      - if !message.read && message.to == current_user
        .appear-marker[
          class="appear-message-#{message.id}"
          data-appear_url="#{mark_read_messages_url}"
          data-disabled="#{[MessageType::FriendRequest, MessageType::GroupRequest].include?(message.kind) ? true : false}"
        ]
