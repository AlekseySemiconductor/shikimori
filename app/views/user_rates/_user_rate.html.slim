.b-user_rate.unprocessed[
    data-status="#{user_rate.status if user_rate.persisted?}"
    data-target_id="#{user_rate.target_id}"
    data-target_type="#{user_rate.target_type}"
    data-button_only="#{!!local_assigns[:button_only]}" data-unauthorized="#{"Это действие требует <a href=\"#{new_user_session_url}\">регистрации</a> на сайте."}"
  ]
  .b-add_to_list class="#{user_rate.persisted? ? user_rate.status : 'planned'}"
    = simple_form_for user_rate, remote: true, authenticity_token: true, html: { 'data-type' => :html } do |f|
      = f.input :user_id, as: :hidden
      = f.input :target_id, as: :hidden
      = f.input :target_type, as: :hidden
      = f.input :status, as: :hidden

      .trigger
        .trigger-arrow
        - if user_rate.persisted?
          .text.edit-trigger data-remote="true" data-type="html" data-action="#{edit_user_rate_url user_rate}" data-text="#{user_rate.status_name}"
            .edit
        - else
          .text.add-trigger data-status="#{UserRate.statuses[:planned]}" data-text="Добавить в список"
            .plus

      .expanded-options
        - UserRateDecorator.statuses_options(user_rate.target_type).each do |title,status|
          - if user_rate.new_record? || user_rate.status_name != title
            .option.add-trigger data-status="#{status}"
              .text data-text="#{title}"
        - if user_rate.persisted?
          .option.remove-trigger data-remote="true" data-type="html" data-action="#{user_rate_url user_rate}" data-method="delete" value="Удалить из списка"
            .text data-text="Удалить из списка"

  - if user_rate.persisted?
    .rate-edit
    .rate-show
      - if entry.respond_to? :episodes
        .rate-number
          span.current-episodes = user_rate.episodes
          - unless entry.episodes.zero?
            span.sep
              | /
            span.total-episodes
              = entry.episodes
          - if user_rate.episodes != entry.episodes || user_rate.episodes.zero?
            span.item-add.increment data-action="#{increment_user_rate_url user_rate}" data-remote="true" data-type="html" data-method="post"
        .episodes Эпизоды

      - else
        .rate-number
          span.current-episodes = user_rate.chapters
          - unless entry.chapters.zero?
            span.sep
              | /
            span.total-episodes
              = entry.chapters
          - if user_rate.chapters != entry.chapters || user_rate.chapters.zero?
            span.item-add.increment data-action="#{increment_user_rate_url user_rate}" data-remote="true" data-type="html" data-method="post"
        .episodes Главы

      = simple_form_for user_rate, remote: true, authenticity_token: true, html: { 'data-type' => :html } do |f|
        = f.input :score, as: :hidden
        = render partial: 'blocks/rate', locals: { score: user_rate ? user_rate.score : '', with_submit: true, input_selector: '#user_rate_score' }

      p.note = user_rate.text_html
