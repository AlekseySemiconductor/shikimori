.b-db_entry-variant-list_item
  .image.linkeable.bubbled[
    data-href=entry.url
    title=entry.name
  ]
    img[
      src=cdn_image(entry, :x48)
      srcset="#{cdn_image entry, :x96} 2x"
      alt=entry.name
    ]

  .info
    .name
      - if entry.respond_to?(:relation)
        .b-anime_status_tag.info data-text=t("relation.#{entry.relation}")
      - else
        - if entry.respond_to?(:studios) && entry.real_studios.any?
          - entry.real_studios.each do |studio|
            .b-anime_status_tag.info.linkeable[
              data-href=entry.collection_url(studio: studio.to_param)
              data-text=studio.name
            ]

        - if entry.respond_to?(:publishers) && entry.real_publishers.any?
          - entry.real_publishers.each do |publisher|
            .b-anime_status_tag.info.linkeable[
              data-href=entry.collection_url(publisher: publisher.to_param)
              data-text=publisher.name
            ]

      a.b-link.bubbled[
        href=entry.url
        title=entry.name
      ] = localization_span entry

    - if entry.kind.present?
      = info_line Anime.human_attribute_name(:kind) do
        - if entry.kind.present?
          .b-tag.linkeable data-href=entry.collection_url(type: entry.kind)
            = entry.kind_text
        - if entry.year.present?
          .b-tag.linkeable data-href=entry.collection_url(season: entry.year)
            = t 'animes.content.year', year: entry.year
        / - if entry.anime? && !entry.rating_none?
          .b-tag.linkeable data-href=entry.collection_url(rating: entry.rating)
            = entry.rating_text

    = info_line i18n_io('Genre', entry.main_genres.one? ? :one : :few) do
      - entry.main_genres.each do |genre|
        .b-tag.linkeable[
          temprop='genre'
          class=(:bubbled if genre.description)
          data-predelay='250'
          data-tooltip_url=tooltip_moderations_genre_url(genre, subdomain: false)
          data-href=entry.collection_url(genre: genre.to_param)
        ] = localization_span genre

    / - if entry.respond_to?(:episodes) && (entry.episodes > 0 || entry.episodes_aired > 0)
    /   = render partial: 'animes/aired_chapters', formats: :html,
    /     locals: { entry: entry,
    /       field_label: Anime.human_attribute_name(:episodes),
    /       counter: :episodes,
    /       counter_aired: :episodes_aired }

    / - if entry.respond_to?(:volumes) && entry.volumes > 0
    /   = render partial: 'animes/aired_chapters', formats: :html,
    /     locals: { entry: entry,
    /       field_label: Manga.human_attribute_name(:volumes),
    /       counter: :volumes,
    /       counter_aired: :volumes_aired }

    / - if entry.respond_to?(:chapters) && entry.chapters > 0
    /   = render partial: 'animes/aired_chapters', formats: :html,
    /     locals: { entry: entry,
    /       field_label: Manga.human_attribute_name(:chapters),
    /       counter: :chapters,
    /       counter_aired: :chapters_aired }

    - unless local_assigns[:no_user_rate]
      = render partial: 'user_rates/placeholder',
        locals: { target: entry, extended: false }
