.data.name itemprop="name"
  - if !defined?(cover_by) || cover_by != :link
    a.data.name href="#{url_for anime}" title="#{localized_name anime}" itemprop="name"
      = localized_name anime
  - else
    .linkeable data-href="#{url_for anime}" data-title="#{localized_name anime}"
      = localized_name anime

p.text itemprop="description"
  == ani_manga_description anime

- if anime.respond_to?(:studios) && anime.real_studios.any?
  .data
    span.local-title Студи#{anime.real_studios.size > 1 ? 'и' : 'я'}:
    - anime.real_studios.each do |studio|
      span.studio.tag.tag-base data-type="studio" data-value="#{studio.to_param}"
        = studio.name

- if anime.respond_to?(:publishers) && anime.real_publishers.any?
  .data
    span.local-title Издател#{anime.real_publishers.size > 1 ? 'и' : 'ь'}:
    - anime.real_publishers.each do |publisher|
      span.publisher.tag.tag-base data-type="publisher" data-value="#{publisher.to_param}"
        = publisher.name

- if anime.respond_to?(:episodes) && (anime.episodes > 0 || anime.episodes_aired > 0)
  = render partial: 'animes/aired_chapters', locals: { entry: anime, field_label: 'Эпизоды', counter: :episodes, counter_aired: :episodes_aired }, formats: :html

- if anime.respond_to?(:volumes) && anime.volumes > 0
  = render partial: 'animes/aired_chapters', locals: { entry: anime, field_label: 'Тома', counter: :volumes, counter_aired: :volumes_aired }, formats: :html

- if anime.respond_to?(:chapters) && anime.chapters > 0
  = render partial: 'animes/aired_chapters', locals: { entry: anime, field_label: 'Главы', counter: :chapters, counter_aired: :chapters_aired }, formats: :html

.data
  span.local-title Жанры:
  - anime.main_genres.each do |genre|
    span.genre.tag.tag-base data-type="genre" data-value="#{genre.to_param}" itemprop="genre" class="#{:bubbled if genre.description}" data-predelay="250" data-href="#{tooltip_genre_url genre}"
      = localized_name genre

- if anime.rating.present? && anime.rating != 'None'
  .data
    span.key Возрастной рейтинг:&nbsp;
    span
      = t "RatingShort.#{anime.rating}"

- if anime.with_score?
  .rating[itemscope itemprop="aggregateRating" itemtype="http://schema.org/AggregateRating"]
    meta itemprop="bestRating" content="10"
    meta itemprop="ratingValue" content="#{anime.score}"
    meta itemprop="ratingCount" content="#{(anime.mal_scores.sum/37).to_i}"

    span = '%.2f' % anime.score
    span.text рейтинг
- else
  .data
