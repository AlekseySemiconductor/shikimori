- content_title ||= :present
- content_text ||= :present

.b-catalog_entry-tooltip
  .entry-tooltip_container
    - if local_assigns[:with_image]
      a.image-link href="#{anime.url}" title="#{anime.name}"
        img.image[
          src="#{cdn_image anime, :preview}"
          srcset="#{cdn_image anime, :original} 2x"
          alt="#{anime.name}"
        ]

    .inner class="#{:offset if local_assigns[:with_image]}"
      - if content_title != :none
        .line.name itemprop="name"
          - if !defined?(cover_by) || cover_by != :link
            a.data.name[
              href="#{anime.url}"
              title="#{anime.name}"
              itemprop="name"
            ] = localization_span anime
          - else
            .linkeable.name[
              data-href="#{anime.url}"
              data-title="#{anime.name}"
            ] = localization_span anime

      - if content_text != :none
        .text itemprop="description"
          = anime.decorate.description_html_truncated

      - if anime.kind.present?
        = info_line Anime.human_attribute_name(:kind) do
          - if anime.kind.present?
            .tag.linkeable data-href="#{anime.catalog_url type: anime.kind}"
              = anime.kind_text
          - if anime.year.present?
            .tag.linkeable data-href="#{anime.catalog_url season: anime.year}"
              = t '.year', year: anime.year
          - if anime.anime? && !anime.rating_none?
            .tag.linkeable data-href="#{anime.catalog_url rating: anime.rating}"
              = anime.rating_text

      - if anime.respond_to?(:studios) && anime.real_studios.any?
        = info_line i18n_io('Producer', anime.real_studios.one? ? :one : :few) do
          - anime.real_studios.each do |studio|
            .tag.linkeable data-href="#{anime.catalog_url studio: studio.to_param}"
              = studio.name

      - if anime.respond_to?(:publishers) && anime.real_publishers.any?
        = info_line i18n_io('Publisher', anime.real_publishers.one? ? :one : :few) do
          - anime.real_publishers.each do |publisher|
            .tag.linkeable data-href="#{anime.catalog_url publisher: publisher.to_param}"
              = publisher.name

      - if anime.respond_to?(:episodes) && (anime.episodes > 0 || anime.episodes_aired > 0)
        = render partial: 'animes/aired_chapters', formats: :html,
          locals: { entry: anime,
            field_label: Anime.human_attribute_name(:episodes),
            counter: :episodes,
            counter_aired: :episodes_aired }

      - if anime.respond_to?(:volumes) && anime.volumes > 0
        = render partial: 'animes/aired_chapters', formats: :html,
          locals: { entry: anime,
            field_label: Manga.human_attribute_name(:volumes),
            counter: :volumes,
            counter_aired: :volumes_aired }

      - if anime.respond_to?(:chapters) && anime.chapters > 0
        = render partial: 'animes/aired_chapters', formats: :html,
          locals: { entry: anime,
            field_label: Manga.human_attribute_name(:chapters),
            counter: :chapters,
            counter_aired: :chapters_aired }

      = info_line i18n_io('Genre', anime.main_genres.one? ? :one : :few) do
        - anime.main_genres.each do |genre|
          .linkeable.tag[
            temprop="genre"
            class="#{:bubbled if genre.description}"
            data-predelay="250"
            data-tooltip_url="#{tooltip_genre_url genre, subdomain: false}"
            data-href="#{anime.catalog_url genre: genre.to_param}"
          ] = localization_span genre

      - if anime.with_score?
        .rating[itemscope itemprop="aggregateRating" itemtype="http://schema.org/AggregateRating"]
          - if anime.rates_size > 0
            meta itemprop="bestRating" content="10"
            meta itemprop="ratingValue" content="#{anime.score}"
            meta itemprop="ratingCount" content="#{anime.rates_size}"

          span = '%.2f' % anime.score
          span.text = Anime.human_attribute_name(:score).downcase
      - else
        .data

  div class="#{'flexible-button' if !local_assigns[:with_image] && !local_assigns[:no_flexible_button]}"
    = render partial: 'user_rates/placeholder',
      locals: { target: anime, button_only: true }
