- opinions = ([nil] + ::Types::Review::Opinion.values)

.b-reviews_navigation[
  data-initial_opinion=(local_assigns[:opinion] || '')
  data-fetch_url_base=resource.reviews_url
  data-is_preview=!!local_assigns[:is_preview]
]
  .navigation-container
    - opinions.each do |opinion|
      .navigation-node[
        class="navigation-node-#{opinion || 'all'}"
        data-opinion=(opinion || '')
        data-ellispsis-allowed=%i[positive negative].include?(opinion)
      ]
        - if opinion
          .label
            span = t ".opinion.#{opinion}"
          .count = resource.reviews.send(opinion).count
        - else
          .label
            span #{t '.opinion.all'} #{i18n_io 'review', :few}
          .count = resource.reviews.count

  .content-container
    - opinions.each do |opinion|
      .content-node[
        data-opinion=(opinion || '')
        class=('is-active' if opinion == local_assigns[:opinion])
      ]
        - if opinion == local_assigns[:opinion] && local_assigns[:collection]
          - if local_assigns[:collection].any?
            = render 'reviews/group',
              collection: local_assigns[:collection],
              is_preview: local_assigns[:is_preview]
          - else
            .b-nothing_here = t 'no_reviews'
