- if local_assigns[:f]
  - if f.object.kind_of? Comment
    - if f.object.persisted?
      = f.input :user_id, as: :hidden, input_html: { id: nil }
    = f.input :commentable_id, as: :hidden, input_html: { id: nil }
    = f.input :commentable_type, as: :hidden, input_html: { id: nil }
    = f.input :is_offtopic, as: :hidden, input_html: { id: nil }
    = f.input :is_summary, as: :hidden, input_html: { id: nil }

  - elsif f.object.kind_of? Message
    = f.input :kind, as: :hidden, input_html: { id: nil }
    = f.input :from_id, as: :hidden, input_html: { id: nil }
    = f.input :to_id, as: :hidden, input_html: { id: nil }
  - else
    - raise ArgumentError, f.object

- if local_assigns[:shiki_editor_v2] || current_user&.preferences&.is_shiki_editor?
  .b-shiki_editor-v2.to-process.shiki_editor-selector[
    data-dynamic='shiki_editor_v2'
    class=('b-text_with_paragraphs' if local_assigns[:is_text_with_paragraphs])
    data-preview_params=(local_assigns[:preview_params].to_json if local_assigns[:preview_params])
    data-name=local_assigns[:field_name]
  ]
    input[
      type='hidden'
      value=local_assigns[:text]
      name=local_assigns[:field_name]
    ]
    .vue-app.b-ajax

    - if local_assigns[:f]
      footer
        = f.button :magic_submit, id: "submit_#{rand * 1000000}"
        - if f.object.persisted?
          .cancel tabindex='0' = t 'actions.cancel'
        - else
          .hide = t '.hide'

        - if f.object.new_record?
          aside.markers
            - if f.object.try :allowed_summary?
              .b-summary_marker.active[
                class=(:off unless f.object.summary?)
                data-text=t('markers.summary')
              ]
            - if f.object.respond_to? :offtopic?
              .b-offtopic_marker.active[
                class=(:off unless f.object.offtopic?)
                data-text=t('markers.offtopic')
              ]

- else
  .b-shiki_editor.to-process.shiki_editor-selector[
    class=('size-xl' if local_assigns[:size] == 'xl')
    class=('no-preview-avatar' if local_assigns[:no_preview_avatar])
    class=('b-text_with_paragraphs' if local_assigns[:is_text_with_paragraphs])
    data-dynamic='shiki_editor'
    data-preview_params=(local_assigns[:preview_params].to_json if local_assigns[:preview_params])
    data-name=local_assigns[:field_name]
  ]
    = render 'comments/shiki_editor',
      text: local_assigns[:text],
      field_name: local_assigns[:field_name],
      f: local_assigns[:f],
      comment: local_assigns[:comment]
