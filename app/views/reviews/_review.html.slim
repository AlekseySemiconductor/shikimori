/.review-block.topic-block class="review-#{review.id}#{' comment-new' unless review.viewed?}" itemprop="review" itemscope="itemscope" itemtype="http://schema.org/Review"
/ TODO: оставить один comment-new вместо двух
article.b-topic.unprocessed.b-review[
    id="#{topic.id}"
    itemprop="review" itemscope="itemscope"
    itemtype="http://schema.org/Review"
  ]
  /.appear-block class="#{' comment-new' unless topic.viewed?}"
  - if user_signed_in?
    span.item-mobile title="Действия"

  - if user_signed_in?
    - unless topic.viewed?
      p.b-new_marker новое

    aside.buttons
      .main-controls
        span.item-reply title="Комментировать"
        span[
            class="item-subscribe#{' selected' if current_user.subscribed?(topic.entry)}"
            title="Подписаться на топик"
            data-type="json"
            data-action="#{subscribe_url type: topic.class.name, id: topic.id}"
            data-method="#{current_user.subscribed?(topic.entry) ? 'delete' : 'post'}"
            data-remote="true"
          ]
        - if review.can_be_edited_by? current_user
          span.item-edit.linkeable data-href="#{send "edit_#{review.entry.class.name.downcase}_review_url", review.entry, review}" title="Изменить"
        - if review.can_be_deleted_by? current_user
          span.item-delete title="Удалить"
      - if review.can_be_deleted_by? current_user
        .delete-controls
          span.item-delete-confirm action="#{url_for [review.entry, review]}" data-type="json" data-remote="true" data-method="delete" title="Удалить"
          span.item-delete-cancel title="Отмена"

  header
    span.linkeable data-href="#{user_url review.user}"
      img src="#{review.user.avatar_url 48}" srcset="#{review.user.avatar_url 80} 2x" alt="#{review.user.nickname}" title="#{review.user.nickname}"
    a.name href="#{user_url review.user}" title="#{review.user.nickname}" itemprop="creator"
      = review.user.nickname

  - if review.votes_count > 0
    p.votes-count
      = review.votes_text

  .body itemprop="reviewBody"
    - if review.overall.present?
      = render partial: 'reviews/votes', locals: { review: review, with_music: review.entry.class == Anime }

    = cache [review, russian_names_key, 'body'], expires_in: 2.weeks
      == BbCodeFormatter.instance.format_description review.text, review

  footer
    p.date
      - if review.source.present?
        a href="#{review.source}" title="#{review.source.gsub(/^http:\/\/|www\.|\/.*$/, '')}"
          = review.source.gsub(/^http:\/\/|www\.|\/.*$/, '')
        | &nbsp;&nbsp;&nbsp;&nbsp;
      = Russian::strftime(review.created_at, "%e %B %Y").strip

    - if user_signed_in? && review.user_id != current_user.id
      p
        span Этот обзор полезен?
        span.vote class="#{:selected if review.voted_yes? current_user}" data-remote="true" action="#{vote_yes_url id: review.id, type: review.class.name}" data-type="json" data-method="post" Да
        span.vote class="#{:selected if review.voted_no? current_user}" data-remote="true" action="#{vote_no_url id: review.id, type: review.class.name}" data-type="json" data-method="post" Нет

  - unless topic.viewed?
    .appear-marker class="appear-entry-#{review.id}" data-href="#{appear_path}"

/= render partial: 'topics/comments', locals: { topic: topic }, formats: :html
