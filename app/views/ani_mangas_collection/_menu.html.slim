.m20 class="#{klass == Anime ? 'anime' : 'manga'}-params-controls"
  - if defined?(mylist_at_top) && mylist_at_top && (user_signed_in? || special || false)
    = render partial: 'ani_mangas_collection/mylist', locals: { klass: klass, special: special || false, links: links }, formats: :html

  .menu-block
    .subheadline Статус
    ul.block-list.statuses.anime-params
      - AniMangaStatus.all.each do |v|
        li class="status-#{v[0]}"
          input type="checkbox" autocomplete="off"
          = v[1]

  .menu-block
    .subheadline Тип
    ul.block-list.types.anime-params
      / аниме
      - if klass == Anime
        li.type-TV
          input type="checkbox" autocomplete="off"
          - if !current_user || (current_user && current_user.preferences.russian_genres?)
            = t('Anime.TV')
          - else
            | TV

        li.type-TV-13.sub
          input type="checkbox" autocomplete="off"
          = t('Anime.TV-13')

        li.type-TV-24.sub
          input type="checkbox" autocomplete="off"
          = t('Anime.TV-24')

        li.type-TV-48.sub
          input type="checkbox" autocomplete="off"
          = t('Anime.TV-48')

        li.type-Movie
          input type="checkbox" autocomplete="off"
          - if !current_user || (current_user && current_user.preferences.russian_genres?)
            = t('Anime.Movie')
          - else
            | Movie

        li.type-OVA
          input type="checkbox" autocomplete="off"
          - if !current_user || (current_user && current_user.preferences.russian_genres?)
            = t('Anime.OVA')
          - else
            | OVA

        li.type-ONA
          input type="checkbox" autocomplete="off"
          - if !current_user || (current_user && current_user.preferences.russian_genres?)
            = t('Anime.ONA')
          - else
            | ONA

        - unless defined?(nosort) && nosort
          li.type-Special
            input type="checkbox" autocomplete="off"
            - if !current_user || (current_user && current_user.preferences.russian_genres?)
              = t('Anime.Special')
            - else
              | Special

        li.type-Music
          input type="checkbox" autocomplete="off"
          - if !current_user || (current_user && current_user.preferences.russian_genres?)
            = t('Anime.Music')
          - else
            | Music
      / манга
      - else
        li.type-Manga
          input type="checkbox" autocomplete="off"
          - if !current_user || (current_user && current_user.preferences.russian_genres?)
            = t('Manga.Manga')
          - else
            | Manga

        li.type-Manhua
          input type="checkbox" autocomplete="off"
          - if !current_user || (current_user && current_user.preferences.russian_genres?)
            = t('Manga.Manhua')
          - else
            | Manhua

        li.type-Manhwa
          input type="checkbox" autocomplete="off"
          - if !current_user || (current_user && current_user.preferences.russian_genres?)
            = t('Manga.Manhwa')
          - else
            | Manhwa

        li.type-Novel
          input type="checkbox" autocomplete="off"
          - if !current_user || (current_user && current_user.preferences.russian_genres?)
            = t('Manga.Novel')
          - else
            | Novel

        li.type-One-Shot
          input type="checkbox" autocomplete="off"
          - if !current_user || (current_user && current_user.preferences.russian_genres?)
            = t('Manga.One Shot')
          - else
            | One Shot

        li.type-Doujin
          input type="checkbox" autocomplete="off"
          - if !current_user || (current_user && current_user.preferences.russian_genres?)
            = t('Manga.Doujin')
          - else
            | Doujin

  - unless defined?(nosort) && nosort
    - if defined?(social) && social
      - if !user_signed_in? || current_user.preferences.show_social_buttons?
        .addthis_toolbox.addthis_default_style
          a.addthis_button_vk
          a.addthis_button_facebook
          a.addthis_button_twitter
          a.addthis_button_google_plusone_share
          a.addthis_button_mymailru
          a.addthis_button_odnoklassniki_ru
          a.addthis_button_compact

  .menu-block.hidden
    .subheadline Студия
    ul.block-list.studios.anime-params

  .menu-block.hidden
    .subheadline Издатель
    ul.block-list.publishers.anime-params

  .menu-block
    .subheadline Сезон
    ul.block-list.seasons.anime-params
      - AniMangaSeason.all.each do |v|
        li class="season-#{v[0]}"
          input type="checkbox" autocomplete="off"
          = v[1]

  - unless defined?(nosort) && nosort
    .menu-block
      /*.subheadline*/
        = klass == Anime ? 'Аниме' : 'Манга'
      .subheadline Сортировка
      ul.block-list.orders.anime-params.subcontent
        - if special
          li.order-by-my По оценке
        li.order-by-ranked По рейтингу
        li.order-by-kind.hidden По типу
        li.order-by-popularity По популярности
        li.order-by-name По алфавиту
        li.order-by-aired_on По дате выхода
        li.order-by-id По дате добавления
        - if special
          li.order-by-episodes По числу #{klass == Anime ? 'эпизодов' : 'глав'}
          li.order-by-status По статусу
        - if defined?(custom_sorts) && custom_sorts && !custom_sorts.empty?
          - custom_sorts.each do |name, title|
            li class="order-by-#{name}"
              = title

  - if klass == Anime
    .menu-block.durations
      .subheadline Эпизод
      ul.block-list.durations.anime-params
        - AniMangaQuery::Durations.keys.each do |v|
          li class="duration-#{v}"
            input type="checkbox" autocomplete="off"
            = t("#{klass}.Duration.#{v}")

    .menu-block.ratings
      .subheadline Рейтинг
      ul.block-list.ratings.anime-params
        - AniMangaQuery::Ratings.keys.each do |v|
          li class="rating-#{v}"
            input type="checkbox" autocomplete="off"
            = v

  - if defined?(mylist) && mylist && (user_signed_in? || special)
    = render partial: 'ani_mangas_collection/mylist', locals: { klass: klass, special: special || false, links: links }, formats: :html

  .menu-block.genres
    .subheadline Жанр
    ul.block-list.genres.anime-params.m10
      - @genres.sort_by {|v| [v.position, localized_name(v)] }.each do |genre|
        - next if genre.id == Genre::ThrillerDupID
        li class="#{:bubbled if genre.description} genre-#{genre.to_param} #{:m10 if genre.position % 10 == 0}" data-delay="150" data-href="#{tooltip_genre_url genre}"
          input type="checkbox" autocomplete="off"
          = localized_name genre
