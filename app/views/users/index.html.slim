/- content_for :head do
  = stylesheet_link_tag :users
/- content_for :tail do
  = javascript_include_tag :similar_users

header.head.misc
  h1 style="#{'white-space: nowrap;' if !params[:similar] && user_signed_in?}"
    = @page_title

  - if params[:similar]
    - if @klass == Anime
      a.misc href="#{users_url similar: 'similar', klass: Manga.name.downcase}" = t '.by.manga'
    - else
      a.misc href="#{users_url similar: 'similar', klass: Anime.name.downcase}" = t '.by.anime'
  - elsif user_signed_in?
    a.misc href="#{users_url similar: 'similar', klass: Anime.name.downcase}" = t '.list_of_similar_users'

  - if params[:similar]
    .b-header_filters
      .filter-line
        span.title = @klass == Anime ? t('.list_of_watched_anime') : t('.list_of_read_manga')
        - UsersController::THRESHOLDS.each do |threshold|
          a[
            class="#{:current if @threshold == threshold}"
            href="#{users_url similar: 'similar', threshold: threshold}"
          ] #{threshold}+

  p.notice
    - if params[:similar]
      = t '.notice.similar_users'
    - elsif params[:search]
      = t '.notice.search_user', query: params[:search]
    - else
      = t '.notice.all_users'

.ajax
  - if params[:similar] && @similar_ids.nil?
    p.pending = t '.searching_for_similar_users'
    .ajax-loading.vk-like.left title="#{t 'loading'}"
    .clearfix

  - elsif params[:similar] && @similar_ids.empty?
    div
      .comment-block
        .description
          p.m3
            span.fail = t '.cant_find_similar_users'
            | &nbsp;
            span = t '.meet_following_requirements'

          ul.b-list.m10
            - t(".similar_users_requirements.#{@klass.name.downcase}").each do |requirement|
              li : p = requirement

  - else
    = render @collection, content_by: :detailed

    - if @add_postloader
      = render 'blocks/postloader', filter: 'b-user',
        url: users_url(page: @page+1, search: params[:search]),
        next_url: users_url(page: @page+1, search: params[:search]),
        prev_url: (@page > 1 ? users_url(page: @page+1, search: params[:search]) : nil)
