= render partial: 'users/menu'

.middle-block
  header.head.misc
    h1 class="#{@presenter.nickname_changes? ? 'aliases' : ''}" title="#{@presenter.nickname_changes? ? @presenter.nicknames_tooltip : ''}"
      = @user.nickname
    .misc
      - if @presenter.banned?
        span.banned забанен
      - else
        = @presenter.last_online
    p.notice
      == @presenter.common_info

  .user-info
    - @presenter.stats[:statuses].each do |klass,stats,graph|
      - if stats.any? {|v| v[:size] > 0 }
        .stat
          - if own_profile?
            p.compatibility
              a href="#{users_url similar: 'similar', klass: klass.downcase}"
                span.text похожие пользователи

          - if @compatibility.present? && @compatibility[klass.downcase.to_sym].present?
            p.compatibility
              a href="#{userlist_comparer_path user_1: current_user, user_2: @user, list_type: klass.downcase}"
                span.text class="#{@presenter.compatibility_class @compatibility[klass.downcase.to_sym]}"
                  = @presenter.compatibility_text @compatibility[klass.downcase.to_sym]
                - if @compatibility[klass.downcase.to_sym] > 0
                  span.text &nbsp;
                  span.sep.zero.inline
                    | (
                  span.rate
                    = @compatibility[klass.downcase.to_sym]
                  span.sep.zero.inline
                    | )
          a.klass-caption href="#{ani_manga_list_url(@user, list_type: klass.downcase)}"
            = "Список #{t("Genetive.#{klass}").downcase}"
          .stat-bar
            span class="total-bar #{klass.downcase}" style="width: #{100.0*[graph[:scale], graph[:completed] > 80 ? 0.90 : 0.60, @compatibility.present? && @compatibility[klass.downcase.to_sym].present? ? 1 : 0, own_profile? ? 1 : 0].max}%" title="#{graph[:incompleted]} не #{Unicode.downcase(t("#{klass}RateStatus.#{UserRateStatus::Completed}"))}"
              - if graph[:completed] > 0
                span.completed-bar style="width: #{graph[:completed]*100.0/graph[:total]}%;" title="#{graph[:completed]} #{Unicode.downcase(t("#{klass}RateStatus.#{UserRateStatus::Completed}"))}"
                  - if graph[:completed]*100.0/graph[:total] > 2.5
                    = graph[:completed]
              - if graph[:dropped] > 0
                span.dropped-bar style="width: #{graph[:dropped]*100.0/graph[:total]}%;" title="#{graph[:dropped]} #{Unicode.downcase(t("#{klass}RateStatus.#{UserRateStatus::Dropped}"))}"
                  - if graph[:dropped]*100.0/graph[:total] > 2.5
                    = graph[:dropped]
              = graph[:incompleted]

          ul.stat-names
            - stats.select {|v| v[:size] != 0 }.each do |stat|
              li
                a href="#{ani_manga_filtered_list_url @user, list_type: klass.downcase, mylist: UserRateStatus::get(stat[:name].downcase), type: nil, studio: nil, publisher: nil}"
                  = t "#{klass}RateStatus.#{stat[:name]}"
                  | &nbsp;
                  span.sep.zero.inline
                    | (
                  = stat[:size]
                  span.sep.zero.inline
                    | )
                  span.sep
                    | /

  - if @favourites.any?
    .menu-block.favourites-block
      .subheadline.m10
        a href="#{user_favourites_url @user}" title="Избранное" Избранное
      .image-links
        - @favourites.each do |entry|
          a.bubbled href="#{url_for entry}" data-remote="true" data-offset-left="4" data-offset-top="20" data-offset-left-right="-14"
            img src="#{entry.image.url :x64}" alt="#{UserPresenter.localized_name entry, current_user}" title="#{UserPresenter.localized_name entry, current_user}"
