= cache @view.cache_keys.values do
  .block
    .sections.main
      .section
        a.b-link_button.maxi.dark[
          href=animes_collection_url
        ]
          span アニメ
          = Anime.model_name.human

      .section
        a.b-link_button.maxi.dark[
          href=mangas_collection_url
        ]
          span マンガ
          = Manga.model_name.human
      .section
        a.b-link_button.maxi.dark[
          href=ranobe_collection_url
        ]
          span ラノベ
          = Ranobe.model_name.human
      .section
        a.b-link_button.maxi.dark[
          href=forum_url
        ] = t 'forum'

    .sections.other
      .section
        .seasons
          - @view.anime_seasons.each do |season|
            .season
              a.b-link_button.dark-2[
                href=animes_collection_url(season.url_params)
              ] = season.catalog_title
          .season
            a.b-link_button.dark-2[
              href=animes_collection_url(season: Date.today.year)
            ] #{Anime.model_name.human} #{Date.today.year}
          .season
            a.b-link_button.dark-2[
              href=animes_collection_url(status: :ongoing)
            ] = i18n_i 'Ongoing', :other
        a.shiki-socials href=StickyTopicView.socials(locale_from_host).object.url
          img[
            src="/assets/globals/socials_narrow.png?v3"
            srcset="/assets/globals/socials_narrow@2x.png?v3 2x"
          ]

      .section
        a.title[
          href=collections_url
          title=t('.new_collections')
        ]
          = t '.new_collections'
        .links
          - @view.collection_topic_views.each do |topic_view|
            a.b-link[
              href=topic_view.urls.topic_url
              title=topic_view.topic_title
            ]
              span.poster[
                style="background-image: url(#{topic_view.poster false})"
              ]
              span
                = topic_view.poster_title_html

      .section
        a.title[
          href=forum_topics_url(:reviews)
          title=t('.new_reviews')
        ] = t '.new_reviews'
        .links
          - @view.review_topic_views.each do |topic_view|
            a.b-link[
              href=topic_view.urls.topic_url
              title=topic_view.topic_title
            ]
              span.poster[
                style="background-image: url(#{topic_view.poster false})"
              ]
              span
                = topic_view.poster_title_html
        - if @view.contests.any?
          .title.contests = i18n_i 'Contest', :other
          .links
            - @view.contests.each do |contest|
              a.b-link[
                href=contest_url(contest)
                title=contest.title
              ]
                span = contest.title

      .section
        .title = t 'application.hot_topics.hot_topics'
        .links
          - cache :hot_topics, expires_in: 10.minutes do
            - @layout.hot_topics[0..5].each do |topic_view|
              a.b-link[
                href=topic_view.urls.topic_url
                title=topic_view.topic_title
              ]
                span.poster[
                  style="background-image: url(#{topic_view.poster false})"
                ]
                span
                  = topic_view.poster_title_html

  - if @view.admin_area?
    javascript:
      $(document.body).on('click', '.b-admin_panel .reload', function() {
        var $panel = $('.b-admin_panel');
        $(this).addClass('active');
        $panel.load($panel.data('postloaded-url'))
      });
    .b-admin_panel.to-process[
      data-dynamic='postloaded'
      data-postloaded-url='/apanel'
    ]
      .ajax-loading.vk-like

  .block
    .headline.blue.m15
      span = t 'news'
      .buttons
        .options.to-process data-dynamic='not_implemented_yet_action'

    .fc-2-3-m
      = cache @view.cache_keys[:news] + %i[part1] do
        .f-column
          .b-news_wall
            = render partial: 'topics/topic',
              collection: @view.news_topic_views[0..7],
              locals: { do_not_track: true },
              cache: true,
              as: :topic_view
              / collection: @view.news[0..7],

      = cache @view.cache_keys[:db_updates] do
        .f-column.generated-news
          .subheadline.orange.m15
            a[
              href=forum_topics_url(:updates)
              title=t('.generated_news')
            ] = t '.generated_news'
          - @view.db_updates.each do |topic_view|
            - anime = topic_view.decorated_linked
            a.generated-news-line.bubbled.unprocessed[
              href=anime.url
              title=topic_view.topic_title
              data-tooltip_url=topic_view.decorated_linked.tooltip_url
            ]
              .info
                .name = topic_view.topic_title_html

                .status-time
                  - if topic_view.action_tag
                    .b-anime_status_tag[
                      class=topic_view.action_tag.type
                      data-text=topic_view.action_tag.text
                    ]

                  - if anime.kind.present?
                    .kind = anime.kind_text

                  span.time
                    time[
                      itemprop='commentTime'
                      datetime=topic_view.created_at.iso8601
                    ] = l topic_view.created_at, format: '%e %B %Y'

                .genres
                  - anime.main_genres[0..3].each do |genre|
                    .b-tag = localization_span genre

              .poster
                img[
                  src=cdn_image(topic_view.decorated_linked, :x48)
                  srcset="#{cdn_image topic_view.decorated_linked, :x96} 2x"
                  alt=topic_view.decorated_linked.name
                ]

    .other-news
      = cache @view.cache_keys[:news] + %i[part2] do
        .b-news_wall
          = render partial: 'topics/topic',
            collection: @view.news_topic_views[8..-1],
            locals: { do_not_track: true },
            cache: true,
            as: :topic_view

          - if @view.news_topic_views.next_page
            = render 'blocks/postloader',
              filter: 'b-topic',
              next_url: root_page_url(page: @view.news_topic_views.next_page)
