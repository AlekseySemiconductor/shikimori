header.head.misc
  h1 = og.headline
  = render 'application/breadcrumbs'

- if @resource.errors.any?
  .b-errors
    .subheadline.m5 = i18n_i 'error', :other
    == @resource.errors.full_messages.join('<br>')

#collection_form[
  data-collection=CollectionSerializer.new(@resource, scope: self).to_json
  data-autocomplete_url=((@resource.ranobe? ? autocomplete_ranobe_index_url : send(:"autocomplete_#{@resource.kind.pluralize}_url", censored: false)) if @resource.persisted?)
  data-max_links=Collection::Update::MAX_LINKS
]
  = simple_form_for @resource do |f|
    .subheadline.m5 = t :settings
    .block
      = f.input :user_id, as: :hidden
      = f.input :name
      = f.input :kind,
        include_blank: false,
        disabled: @resource.persisted?

      - if @resource.persisted?
        = f.input :state,
          include_blank: false,
          disabled: @resource.published?,
          hint: t(".hint.#{@resource.state}").html_safe

      .b-shiki_editor.unprocessed
        .field-name = Collection.human_attribute_name :text
        = render 'comments/shiki_editor',
          text: @resource.text,
          field_name: 'collection[text]'

    .block2
      .buttons
        a.cancel href=collections_url = t 'actions.cancel'
        = f.button :magic_submit

      - if @resource.persisted?
        a.remove[
          href=collection_url(@resource)
          title=t('actions.delete')
          data-method='delete'
          data-confirm=t('actions.confirm')
        ] = t 'actions.delete'

    - if @resource.persisted?
      #vue_collection_links
        .subheadline = @resource.kind_text
        .b-nothing_here = t 'loading'

      .buttons
        a.cancel href=collections_url = t 'actions.cancel'
        = f.button :magic_submit
