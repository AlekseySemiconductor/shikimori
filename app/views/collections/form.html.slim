header.head.misc
  h1 = @page_title.last
  = render partial: 'blocks/breadcrumbs', object: @breadcrumbs

- if @resource.errors.any?
  .b-errors
    .subheadline = i18n_i 'error', :other
    == @resource.errors.full_messages.join('<br>')

/ #collection_form[
  / data-collection_links="#{ActiveModel::Serializer::CollectionSerializer.new(@resource.links, scope: self).to_json}"
/ ]
#collection_form[
  data-collection="#{CollectionSerializer.new(@resource, scope: self).to_json}"
  data-autocomplete_url="#{send :"autocomplete_#{@resource.kind.pluralize}_url" if @resource.persisted?}"
]
  = simple_form_for @resource do |f|
    .subheadline = t :settings
    .cc-2.block
      .c-column
        .block
          = f.input :user_id, as: :hidden
          = f.input :name
          = f.input :kind, include_blank: false, disabled: @resource.persisted?

          - if @resource.persisted?
            = f.input :state, include_blank: false

      .c-column
        .b-shiki_editor.unprocessed
          .field-name = Collection.human_attribute_name :text
          = render 'comments/shiki_editor',
            text: @resource.text,
            field_name: 'collection[text]'

    .block
      .buttons
        a.cancel href="#{collections_url}" = t 'actions.cancel'
        = f.button :magic_submit

      - if @resource.persisted?
        a.remove[
          href="#{collection_url @resource}"
          title="#{t 'actions.delete'}"
          data-method="delete"
          data-confirm="#{t 'actions.confirm'}"
        ] = t 'actions.delete'

    - if @resource.persisted?
      .block
        .subheadline.m10 = @resource.kind_text
        #vue_collection_links

      .buttons
        a.cancel href="#{collections_url}" = t 'actions.cancel'
        = f.button :magic_submit
