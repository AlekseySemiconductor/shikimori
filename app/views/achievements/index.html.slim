header.head.misc
  h1
    = @page_title.last
  p.notice.clearfix = t '.list_of_all_site_achievements'

- Neko::Repository.instance.group_by(&:neko_id).each do |neko_id, achievements|
  .block
    .subheadline.m10
      a[
        href="#{achievement_url neko_id}"
      ] = achievements.first.neko_name
      / ] #{achievements.first.neko_name} (#{achievements.last.level})

    .cc-2
      .c-column
        = render 'users/achievements/achievement', achievement: achievements.first
      .c-column
        .b-entry-info
          .line
            .key #{t '.levels'}:&nbsp;
            .value = achievements.size

          .line
            .key #{t '.threshold'}:&nbsp;
            .value = achievements.map { |v| v.rule[:threshold] }.join(', ')

          .line
            .key #{t '.source'}:&nbsp;
            .value
              a.b-link[
                href="#{achievements.first.rule[:source]}"
              ] = achievements.first.rule[:source].gsub %r{\A.*/}, ''

          - if achievements.first.rule[:filters].present?
            .line
              .key = t '.rules'
              .value.filters
                = BbCodeFormatter.instance.format_comment "[code=json]#{JSON.pretty_generate(achievements.first.rule[:filters]).gsub(/\[.*\]/mix) {|match| match.gsub(/\n|\ /, '') }}[/code]"
