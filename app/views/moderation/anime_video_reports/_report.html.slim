= cache report do
  li.change
    span.id-label #
    span: a href="#{anime_videos_show_url report.anime_video.anime_id, report.anime_video.episode, report.anime_video.id, :all, subdomain: :play}"
      = report.id
    span.date #{report.created_at.strftime '%d.%m.%Y'}
    span
      = link_to user_url(report.user) do
        img.avatar src="#{report.user.avatar_url 16}" alt="#{report.user.nickname}" title="#{report.user.nickname}"
      = link_to report.user.nickname, user_url(report.user), class: 'nickname', title: "#{report.user.nickname}"
    span.kind class="#{report.kind}" = report.kind_text

    span
      = link_to report.anime_video.anime.name, anime_videos_show_url(report.anime_video.anime_id, report.anime_video.episode, report.anime_video.id, subdomain: :play), class: 'bubbled', 'data-href' => tooltip_anime_url(report.anime_video.anime), 'data-remote' => true

    span.state class="#{report.state}"

    - if report.approver
      span
        = link_to user_url(report.approver) do
          img.avatar src="#{report.approver.avatar_url 16}" alt="#{report.approver.nickname}" title="#{report.approver.nickname}"
        = link_to report.approver.nickname, user_url(report.approver), class: 'nickname', title: "#{report.approver.nickname}"

    .spoiler.collapse
      span.action.half-hidden style="display: none;" развернуть
    .collapsed.spoiler подробности
    .spoiler.target.info style="display: none;"
      p
        span video_id:
        span = report.anime_video.id
      p
        span video_url:
        a href="#{report.anime_video.url}" = report.anime_video.url
      - if report.user_agent.present?
        p
          span user_agent:
          span = report.user_agent

      .video-player = render partial: 'anime_online/anime_videos/player', locals: { video: report.anime_video }

    - if report.pending?
      span.moderation
        a href="#{accept_moderation_anime_video_report_url report.id}" подтвердить
        a href="#{reject_moderation_anime_video_report_url report.id}" отклонить

