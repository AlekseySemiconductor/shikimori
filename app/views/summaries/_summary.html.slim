.b-summary[
  id=summary.id
]
  - if summary.persisted?
    a name="summary-#{summary.id}"
  .inner class=(:check_height if summary.persisted?)
    - if summary.persisted?
      aside.markers
        .b-new_marker[
          data-appear_url=api_appears_url
          data-text=t('markers.new')
        ]
      aside.moderation-ban
      / = render 'summarys/buttons', summary: summary

    header
      / data-href=(summary.respond_to?(:topic_url) ? summary.topic_url : profile_url(summary.user))
      span.linkeable[
        data-href=profile_url(summary.user)
      ]
        img[
          src=summary.user.avatar_url(48)
          srcset="#{summary.user.avatar_url 80} 2x"
          alt=summary.user.nickname
        ]
      div
        .name-date
          a.name[
            href=profile_url(summary.user)
            itemprop='creator'
            tabindex='-1'
          ]
            = summary.user.nickname

          / - if summary.persisted?
          /   span.time
          /     time[
          /       itemprop='dateCreated'
          /       datetime=summary.created_at.iso8601
          /     ] = l summary.created_at, format: '%e %B %Y'
          /     span.hash data-url=summary_url(summary) #
        .summary-info
          .opinion class=summary.opinion
          div
            .label class=summary.opinion
              = summary.opinion_text
            .user-rate-label
              | #{t '.in_author_list'}:
              - unless summary.user_rate
                b.missing &nbsp;#{t 'no'}
          - if summary.user_rate
            .user-rate
              = render 'blocks/rate', score: summary.user_rate.score, is_no_text_score: true
              .b-add_to_list class=summary.user_rate.status
                .trigger
                  .edit-trigger
                    .edit
                    .text
                      .status-name = summary.user_rate.status_name

    - if summary.persisted?
      .b-status-line

        = render 'topics/status_line/section_dates', object: summary
        .section.additional
          span.comments == summary.comments_count.to_s.gsub(/(\d)(?=(\d{3})+$)/, '\1 ')
        = render 'topics/reviews/votes_count', review: summary

    .body itemprop='text'
      = summary.html_body

    footer
      = render 'topics/footer/vote',
        topic_type_policy: Topic::TypePolicy.new(summary),
        votable: summary

    - if summary.persisted?
      .b-appear_marker[
        class="appear-summary-#{summary.id}"
      ]
