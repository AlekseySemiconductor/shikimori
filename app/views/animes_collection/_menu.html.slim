.b-collection-filters class="#{menu.klass.name.downcase}-params-controls"
  - if defined? in_user_profile
    = render 'animes_collection/mylist', klass: menu.klass

  .block
    .subheadline = t 'dashboards.animes.recommended.title'

    .b-list style="margin-left: 5px"
      li: a.b-link[
        href="#{send :"recommendations_favourites_#{menu.klass.name.downcase}_url"}"
      ] = t "dashboards.#{menu.klass.table_name}.recommended.favourite"

      - if menu.klass == Anime
        li: a.b-link[
          href="#{RecommendationsController::TOPIC_URL}"
        ] = t 'dashboards.animes.recommended.by_community'

      li: a.b-link[
        href="#{recommendations_url klass: menu.klass.name.downcase}"
      ] = t "dashboards.#{menu.klass.table_name}.recommended.personalized"

  / = render 'sponsors/ad', ad: Ad.new(240, 400), obtrusive: true

  .block
    .subheadline = Anime.human_attribute_name :status
    ul.block-list.statuses.anime-params
      - menu.statuses.each do |status|
        li class="status-#{status.text}"
          input type="checkbox" autocomplete="off"
          = status.catalog_title

  .block
    .subheadline = Anime.human_attribute_name(:kind)
    ul.block-list.types.anime-params
      - menu.kinds.each do |kind|
        li class="type-#{kind.text}"
          input type='checkbox' autocomplete='off'
          = kind.title

        - if kind.text == 'tv'
          li.type-tv_13.sub
            input type='checkbox' autocomplete='off'
              = t '.anime.kind.tv_13'

          li.type-tv_24.sub
            input type='checkbox' autocomplete='off'
              = t '.anime.kind.tv_24'

          li.type-tv_48.sub
            input type='checkbox' autocomplete='off'
              = t '.anime.kind.tv_48'

  - if show_social?
    .addthis_toolbox.addthis_default_style
      a.addthis_button_vk
      a.addthis_button_facebook
      a.addthis_button_twitter
      a.addthis_button_google_plusone_share
      a.addthis_button_mymailru
      a.addthis_button_odnoklassniki_ru
      a.addthis_button_compact

  - if menu.show_sorting?
    .block
      .subheadline = i18n_i 'Sorting'
      ul.block-list.orders.anime-params.subcontent
        li.order-by-ranked = t 'by.ranked'
        li.order-by-kind.hidden = t 'by.kind'
        li.order-by-popularity = t 'by.popularity'
        li.order-by-name = t 'by.name'
        li.order-by-aired_on = t 'by.aired_on'

        / используется в профиле пользователя
        - if defined?(in_user_profile)
          li.order-by-my style="display: none" = t 'by.score'
          li.order-by-rate_id = t 'by.date_added'
          - if menu.klass == Anime
            li.order-by-episodes style="display: none" = t 'by.number_of_episodes'
          - else
            li.order-by-chapters style="display: none" = t 'by.number_of_chapters'
            li.order-by-volumes style="display: none" = t 'by.number_of_volumes'
          li.order-by-status style="display: none" = t 'by.status'
        - else
          li.order-by-id = t 'by.date_added'

        / используется в userlist comparer
        - if defined?(custom_sorts) && !custom_sorts.empty?
          - custom_sorts.each do |name, title|
            li class="order-by-#{name}"
              = title

  - if user_signed_in? && !defined?(in_user_profile)
    = render 'animes_collection/mylist', klass: menu.klass

  .block.hidden
    .subheadline = i18n_i 'Studio'
    ul.block-list.studios.anime-params

  .block.hidden
    .subheadline = i18n_i 'Publisher'
    ul.block-list.publishers.anime-params

  .block
    .subheadline = i18n_i 'Season'
    ul.block-list.seasons.anime-params
      - menu.seasons.each do |season|
        li class="season-#{season.text}"
          input type="checkbox" autocomplete="off"
          = season.catalog_title

  - unless ['user_rates', 'userlist_comparer'].include? params[:controller]
    .block.scores
      .subheadline = i18n_i 'Score'
      ul.block-list.scores.anime-params
        - [8, 7, 6].each do |score|
          li class="score-#{score}"
            input type="checkbox" autocomplete="off"
            | #{score}+

  - if menu.klass == Anime
    .block.durations
      .subheadline = i18n_i 'Episode'
      ul.block-list.durations.anime-params
        - AniMangaQuery::Durations.keys.each do |v|
          li class="duration-#{v}"
            input type="checkbox" autocomplete="off"
            = t ".anime.duration.#{v}"

    .block.ratings
      .subheadline = i18n_i 'Rating'
      ul.block-list.ratings.anime-params
        - Anime.rating.options.each do |title,rating|
          - next if rating == 'none'
          - next if rating == 'rx' && !user_signed_in?
          li class="rating-#{rating}"
            input type="checkbox" autocomplete="off"
            = title
            span.b-question.b-tooltipped.mobile.unprocessed[
              title="#{t "enumerize.anime.rating.hint.#{rating}"}"
              data-direction="top"
            ]

  .block.genres
    .subheadline = i18n_i 'Genre', :other
    = text_spoiler t('.show_list') do
      ul.block-list.genres.anime-params.m10
        - menu.sorted_genres.each do |genre|
          - next if genre.censored? && !user_signed_in?
          li class="genre-#{genre.to_param} #{:m10 if genre.position && genre.position % 10 == 0}"
            input type="checkbox" autocomplete="off"
            = localized_name genre
            - if genre.description.present?
              span.b-question.mobile.bubbled[
                title="#{genre.description}"
                data-predelay="150"
                data-href="#{tooltip_genre_url genre, subdomain: false}"
              ]

  - unless ['user_rates', 'userlist_comparer'].include? params[:controller]
    = render 'sponsors/ad', ad: Ad.new(240, 400), obtrusive: true
