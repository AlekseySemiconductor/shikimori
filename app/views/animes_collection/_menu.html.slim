.b-collection-filters class="#{menu.klass.name.downcase}-params-controls"
  - if defined?(in_user_profile)
    = render 'animes_collection/mylist', klass: menu.klass

  .block
    .subheadline = Anime.human_attribute_name(:status)
    ul.block-list.statuses.anime-params
      - menu.klass.status.values.each do |status|
        li class="status-#{status}"
          input type="checkbox" autocomplete="off"
          = t ".#{menu.klass.name.downcase}.status.#{status}"
      li class="status-latest"
        input type="checkbox" autocomplete="off"
          = t ".#{menu.klass.name.downcase}.status.latest"

  .block
    .subheadline = Anime.human_attribute_name(:kind)
    ul.block-list.types.anime-params
      - menu.klass.kind.options.each do |title,kind|
        li class="type-#{kind}"
          input type="checkbox" autocomplete="off"
          = title

        - if kind == 'tv'
          li.type-tv_13.sub
            input type="checkbox" autocomplete="off"
              = t ".anime.kind.tv_13"

          li.type-tv_24.sub
            input type="checkbox" autocomplete="off"
              = t ".anime.kind.tv_24"

          li.type-tv_48.sub
            input type="checkbox" autocomplete="off"
              = t ".anime.kind.tv_48"

  - if show_social?
    .addthis_toolbox.addthis_default_style
      a.addthis_button_vk
      a.addthis_button_facebook
      a.addthis_button_twitter
      a.addthis_button_google_plusone_share
      a.addthis_button_mymailru
      a.addthis_button_odnoklassniki_ru
      a.addthis_button_compact

  .block
    .subheadline Сортировка
    ul.block-list.orders.anime-params.subcontent
      li.order-by-ranked = t 'by.ranked'
      li.order-by-kind.hidden = t 'by.kind'
      li.order-by-popularity = t 'by.popularity'
      li.order-by-russian[
        style="#{'display: none' unless user_signed_in? && current_user.preferences.russian_names?}"
      ] = t 'by.name'
      li.order-by-name[
        style="#{'display: none' if user_signed_in? && current_user.preferences.russian_names?}"
      ] = t 'by.name'
      li.order-by-aired_on = t 'by.aired_on'

      / используется в профиле пользователя
      - if defined?(in_user_profile)
        li.order-by-my style="display: none" По оценке
        li.order-by-rate_id По дате добавления
        - if menu.klass == Anime
          li.order-by-episodes style="display: none" По числу эпизодов
        - else
          li.order-by-chapters style="display: none" По числу глав
          li.order-by-volumes style="display: none" По числу томов
        li.order-by-status style="display: none" По статусу
      - else
        li.order-by-id По дате добавления

      / используется в userlist comparer
      - if defined?(custom_sorts) && !custom_sorts.empty?
        - custom_sorts.each do |name, title|
          li class="order-by-#{name}"
            = title

  - if user_signed_in? && !defined?(in_user_profile) && !defined?(in_lists_comparison)
    = render 'animes_collection/mylist', klass: menu.klass

  .block.hidden
    .subheadline Студия
    ul.block-list.studios.anime-params

  .block.hidden
    .subheadline Издатель
    ul.block-list.publishers.anime-params

  .block
    .subheadline Сезон
    ul.block-list.seasons.anime-params
      - menu.seasons.each do |season, title|
        li class="season-#{season}"
          input type="checkbox" autocomplete="off"
          = title

  - if menu.klass == Anime
    .block.durations
      .subheadline Эпизод
      ul.block-list.durations.anime-params
        - AniMangaQuery::Durations.keys.each do |v|
          li class="duration-#{v}"
            input type="checkbox" autocomplete="off"
            = t ".anime.duration.#{v}"

    .block.ratings
      .subheadline = Anime.human_attribute_name :score
      ul.block-list.ratings.anime-params
        - Anime.rating.options.each do |title,rating|
          - next if rating == 'none'
          - next if rating == 'rx' && !user_signed_in?
          li class="rating-#{rating}"
            input type="checkbox" autocomplete="off"
            = title
            span.b-question.b-tooltipped.unprocessed[
              title="#{t "enumerize.anime.rating.hint.#{rating}"}"
              data-direction="top"
            ]

  .block.genres
    .subheadline Жанр
    = text_spoiler 'Показать список' do
      ul.block-list.genres.anime-params.m10
        - menu.sorted_genres.each do |genre|
          - next if genre.censored? && !user_signed_in?
          li class="genre-#{genre.to_param} #{:m10 if genre.position && genre.position % 10 == 0}"
            input type="checkbox" autocomplete="off"
            = localized_name genre
            - if genre.description.present?
              span.b-question.bubbled[
                title="#{genre.description}"
                data-predelay="150"
                data-href="#{tooltip_genre_url genre, subdomain: false}"
              ]
